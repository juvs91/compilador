Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> Program
Rule 1     Program -> Declaration Function Main
Rule 2     Main -> MAIN LPAREN RPAREN FBlock
Rule 3     Declaration -> Primitive ID Declaration1
Rule 4     Declaration -> empty
Rule 5     Declaration1 -> Array Array Seen_Variable SEMI Declaration
Rule 6     Declaration1 -> LPAREN ParamList RPAREN Seen_Function FBlock
Rule 7     Local_Declaration -> Primitive ID Array Array Seen_Variable SEMI Local_Declaration
Rule 8     Local_Declaration -> empty
Rule 9     Array -> LBRACKET ICONST RBRACKET
Rule 10    Array -> empty
Rule 11    Function -> Function1
Rule 12    Function -> RFunction
Rule 13    Function -> empty
Rule 14    Function1 -> VOID ID LPAREN ParamList RPAREN Seen_Function FBlock Function
Rule 15    RFunction -> Primitive ID LPAREN ParamList RPAREN Seen_Function FBlock Function
Rule 16    Block -> LBRACE Instruction RBRACE
Rule 17    FBlock -> LBRACE Local_Declaration Instruction RBRACE
Rule 18    Conditional -> IF LPAREN SuperExpr RPAREN Block Else
Rule 19    Else -> ELSE Block
Rule 20    Else -> empty
Rule 21    SuperExpr -> Expression SuperExpr1
Rule 22    SuperExpr1 -> AND SuperExpr
Rule 23    SuperExpr1 -> OR SuperExpr
Rule 24    SuperExpr1 -> empty
Rule 25    Expression -> Expr Expression1
Rule 26    Expression1 -> LESSTHAN Expr
Rule 27    Expression1 -> GREATHAN Expr
Rule 28    Expression1 -> DIFFERENT Expr
Rule 29    Expression1 -> TWOEQUAL Expr
Rule 30    Expression1 -> GREATEQUAL Expr
Rule 31    Expression1 -> LESSEQUAL Expr
Rule 32    Expression1 -> empty
Rule 33    Expr -> Term Expr1
Rule 34    Expr1 -> MINUS Expr
Rule 35    Expr1 -> PLUS Expr
Rule 36    Expr1 -> empty
Rule 37    Term -> Factor Term1
Rule 38    Term1 -> DIVIDE Term
Rule 39    Term1 -> TIMES Term
Rule 40    Term1 -> empty
Rule 41    Factor -> LPAREN SuperExpr RPAREN
Rule 42    Factor -> Factor1
Rule 43    Factor1 -> Factor2
Rule 44    Factor1 -> Factor3
Rule 45    Factor2 -> MINUS Factor3
Rule 46    Factor2 -> PLUS Factor3
Rule 47    Factor3 -> Constant
Rule 48    Factor3 -> Call
Rule 49    Params -> Params1
Rule 50    Params -> empty
Rule 51    Params1 -> SuperExpr Params2
Rule 52    Params2 -> COMMA Params1
Rule 53    Params2 -> empty
Rule 54    Params3 -> SuperExpr Params4
Rule 55    Params3 -> STRING Params4
Rule 56    Params4 -> COMMA Params3
Rule 57    Params4 -> empty
Rule 58    Loop -> LOOP LPAREN SuperExpr RPAREN Block
Rule 59    Assign -> ID EQUAL Assign1
Rule 60    Assign1 -> SuperExpr
Rule 61    Assign1 -> Call
Rule 62    Assign1 -> STRING
Rule 63    Call -> ID LPAREN Params RPAREN
Rule 64    Read -> READ LPAREN Type COMMA ID RPAREN
Rule 65    Type -> Primitive
Rule 66    Type -> STRING
Rule 67    Print -> PRINT LPAREN Params3 RPAREN
Rule 68    Brush -> BRUSH LPAREN Color COMMA SuperExpr RPAREN
Rule 69    Color -> COLOR LPAREN SuperExpr COMMA SuperExpr COMMA SuperExpr RPAREN
Rule 70    PenDown -> PD LPAREN RPAREN
Rule 71    PenUp -> PU LPAREN RPAREN
Rule 72    Home -> HOME LPAREN RPAREN
Rule 73    Forward -> FD LPAREN SuperExpr RPAREN
Rule 74    Rotate -> RT LPAREN SuperExpr RPAREN
Rule 75    Circle -> CIRCLE LPAREN SuperExpr RPAREN
Rule 76    Arc -> ARC LPAREN SuperExpr COMMA SuperExpr RPAREN
Rule 77    Square -> SQUARE LPAREN SuperExpr RPAREN
Rule 78    Param -> Primitive ID Array1 Array1 Seen_Variable Update_Signature
Rule 79    Array1 -> LBRACKET RBRACKET
Rule 80    Array1 -> empty
Rule 81    Primitive -> INT
Rule 82    Primitive -> FLOAT
Rule 83    Primitive -> BOOL
Rule 84    Primitive -> CHAR
Rule 85    ParamList -> ParamList1
Rule 86    ParamList -> empty
Rule 87    ParamList1 -> Param ParamList2
Rule 88    ParamList2 -> COMMA ParamList1
Rule 89    ParamList2 -> empty
Rule 90    Instruction -> Instruction1 SEMI Instruction
Rule 91    Instruction -> empty
Rule 92    Instruction1 -> Loop
Rule 93    Instruction1 -> Conditional
Rule 94    Instruction1 -> Assign
Rule 95    Instruction1 -> Call
Rule 96    Instruction1 -> Brush
Rule 97    Instruction1 -> Read
Rule 98    Instruction1 -> Print
Rule 99    Instruction1 -> PenDown
Rule 100   Instruction1 -> PenUp
Rule 101   Instruction1 -> Home
Rule 102   Instruction1 -> Forward
Rule 103   Instruction1 -> Rotate
Rule 104   Instruction1 -> Color
Rule 105   Instruction1 -> Circle
Rule 106   Instruction1 -> Arc
Rule 107   Instruction1 -> Square
Rule 108   Instruction1 -> Return
Rule 109   Return -> RETURN RType
Rule 110   RType -> SuperExpr
Rule 111   RType -> empty
Rule 112   Constant -> ID
Rule 113   Constant -> FCONST
Rule 114   Constant -> ICONST
Rule 115   Constant -> CCONST
Rule 116   Constant -> FALSE
Rule 117   Constant -> TRUE
Rule 118   Seen_Function -> <empty>
Rule 119   Update_Signature -> <empty>
Rule 120   Seen_Variable -> <empty>
Rule 121   empty -> <empty>
Rule 122   Program -> ASCII Program
Rule 123   Block -> LBRACE error RBRACE
Rule 124   FBlock -> LBRACE Local_Declaration error RBRACE
Rule 125   Circle -> CIRCLE LPAREN error RPAREN
Rule 126   SuperExpr -> Expression error SuperExpr1
Rule 127   Term1 -> DIVIDE error Term
Rule 128   Term1 -> TIMES error Term

Terminals, with rules where they appear

AND                  : 22
ARC                  : 76
ASCII                : 122
BOOL                 : 83
BRUSH                : 68
CCONST               : 115
CHAR                 : 84
CIRCLE               : 75 125
COLOR                : 69
COMMA                : 52 56 64 68 69 69 76 88
DIFFERENT            : 28
DIVIDE               : 38 127
ELSE                 : 19
EQUAL                : 59
FALSE                : 116
FCONST               : 113
FD                   : 73
FLOAT                : 82
GREATEQUAL           : 30
GREATHAN             : 27
HOME                 : 72
ICONST               : 9 114
ID                   : 3 7 14 15 59 63 64 78 112
IF                   : 18
INT                  : 81
LBRACE               : 16 17 123 124
LBRACKET             : 9 79
LESSEQUAL            : 31
LESSTHAN             : 26
LOOP                 : 58
LPAREN               : 2 6 14 15 18 41 58 63 64 67 68 69 70 71 72 73 74 75 76 77 125
MAIN                 : 2
MINUS                : 34 45
OR                   : 23
PD                   : 70
PLUS                 : 35 46
PRINT                : 67
PU                   : 71
RBRACE               : 16 17 123 124
RBRACKET             : 9 79
READ                 : 64
RETURN               : 109
RPAREN               : 2 6 14 15 18 41 58 63 64 67 68 69 70 71 72 73 74 75 76 77 125
RT                   : 74
SEMI                 : 5 7 90
SQUARE               : 77
STRING               : 55 62 66
TIMES                : 39 128
TRUE                 : 117
TWOEQUAL             : 29
VOID                 : 14
error                : 123 124 125 126 127 128

Nonterminals, with rules where they appear

Arc                  : 106
Array                : 5 5 7 7
Array1               : 78 78
Assign               : 94
Assign1              : 59
Block                : 18 19 58
Brush                : 96
Call                 : 48 61 95
Circle               : 105
Color                : 68 104
Conditional          : 93
Constant             : 47
Declaration          : 1 5
Declaration1         : 3
Else                 : 18
Expr                 : 25 26 27 28 29 30 31 34 35
Expr1                : 33
Expression           : 21 126
Expression1          : 25
FBlock               : 2 6 14 15
Factor               : 37
Factor1              : 42
Factor2              : 43
Factor3              : 44 45 46
Forward              : 102
Function             : 1 14 15
Function1            : 11
Home                 : 101
Instruction          : 16 17 90
Instruction1         : 90
Local_Declaration    : 7 17 124
Loop                 : 92
Main                 : 1
Param                : 87
ParamList            : 6 14 15
ParamList1           : 85 88
ParamList2           : 87
Params               : 63
Params1              : 49 52
Params2              : 51
Params3              : 56 67
Params4              : 54 55
PenDown              : 99
PenUp                : 100
Primitive            : 3 7 15 65 78
Print                : 98
Program              : 122 0
RFunction            : 12
RType                : 109
Read                 : 97
Return               : 108
Rotate               : 103
Seen_Function        : 6 14 15
Seen_Variable        : 5 7 78
Square               : 107
SuperExpr            : 18 22 23 41 51 54 58 60 68 69 69 69 73 74 75 76 76 77 110
SuperExpr1           : 21 126
Term                 : 33 38 39 127 128
Term1                : 37
Type                 : 64
Update_Signature     : 78
empty                : 4 8 10 13 20 24 32 36 40 50 53 57 80 86 89 91 111

Parsing method: LALR

state 0

    (0) S' -> . Program
    (1) Program -> . Declaration Function Main
    (122) Program -> . ASCII Program
    (3) Declaration -> . Primitive ID Declaration1
    (4) Declaration -> . empty
    (81) Primitive -> . INT
    (82) Primitive -> . FLOAT
    (83) Primitive -> . BOOL
    (84) Primitive -> . CHAR
    (121) empty -> .

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    ASCII           shift and go to state 8
    INT             shift and go to state 2
    FLOAT           shift and go to state 3
    BOOL            shift and go to state 6
    CHAR            shift and go to state 4
    VOID            reduce using rule 121 (empty -> .)
    MAIN            reduce using rule 121 (empty -> .)

  ! INT             [ reduce using rule 121 (empty -> .) ]
  ! FLOAT           [ reduce using rule 121 (empty -> .) ]
  ! BOOL            [ reduce using rule 121 (empty -> .) ]
  ! CHAR            [ reduce using rule 121 (empty -> .) ]

    Primitive                      shift and go to state 1
    Program                        shift and go to state 5
    Declaration                    shift and go to state 7
    empty                          shift and go to state 9

state 1

    (3) Declaration -> Primitive . ID Declaration1

    ID              shift and go to state 10


state 2

    (81) Primitive -> INT .

    ID              reduce using rule 81 (Primitive -> INT .)
    COMMA           reduce using rule 81 (Primitive -> INT .)


state 3

    (82) Primitive -> FLOAT .

    ID              reduce using rule 82 (Primitive -> FLOAT .)
    COMMA           reduce using rule 82 (Primitive -> FLOAT .)


state 4

    (84) Primitive -> CHAR .

    ID              reduce using rule 84 (Primitive -> CHAR .)
    COMMA           reduce using rule 84 (Primitive -> CHAR .)


state 5

    (0) S' -> Program .



state 6

    (83) Primitive -> BOOL .

    ID              reduce using rule 83 (Primitive -> BOOL .)
    COMMA           reduce using rule 83 (Primitive -> BOOL .)


state 7

    (1) Program -> Declaration . Function Main
    (11) Function -> . Function1
    (12) Function -> . RFunction
    (13) Function -> . empty
    (14) Function1 -> . VOID ID LPAREN ParamList RPAREN Seen_Function FBlock Function
    (15) RFunction -> . Primitive ID LPAREN ParamList RPAREN Seen_Function FBlock Function
    (121) empty -> .
    (81) Primitive -> . INT
    (82) Primitive -> . FLOAT
    (83) Primitive -> . BOOL
    (84) Primitive -> . CHAR

    VOID            shift and go to state 14
    MAIN            reduce using rule 121 (empty -> .)
    INT             shift and go to state 2
    FLOAT           shift and go to state 3
    BOOL            shift and go to state 6
    CHAR            shift and go to state 4

    Function                       shift and go to state 11
    Function1                      shift and go to state 12
    Primitive                      shift and go to state 13
    RFunction                      shift and go to state 15
    empty                          shift and go to state 16

state 8

    (122) Program -> ASCII . Program
    (1) Program -> . Declaration Function Main
    (122) Program -> . ASCII Program
    (3) Declaration -> . Primitive ID Declaration1
    (4) Declaration -> . empty
    (81) Primitive -> . INT
    (82) Primitive -> . FLOAT
    (83) Primitive -> . BOOL
    (84) Primitive -> . CHAR
    (121) empty -> .

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    ASCII           shift and go to state 8
    INT             shift and go to state 2
    FLOAT           shift and go to state 3
    BOOL            shift and go to state 6
    CHAR            shift and go to state 4
    VOID            reduce using rule 121 (empty -> .)
    MAIN            reduce using rule 121 (empty -> .)

  ! INT             [ reduce using rule 121 (empty -> .) ]
  ! FLOAT           [ reduce using rule 121 (empty -> .) ]
  ! BOOL            [ reduce using rule 121 (empty -> .) ]
  ! CHAR            [ reduce using rule 121 (empty -> .) ]

    Primitive                      shift and go to state 1
    Program                        shift and go to state 17
    Declaration                    shift and go to state 7
    empty                          shift and go to state 9

state 9

    (4) Declaration -> empty .

    VOID            reduce using rule 4 (Declaration -> empty .)
    INT             reduce using rule 4 (Declaration -> empty .)
    FLOAT           reduce using rule 4 (Declaration -> empty .)
    BOOL            reduce using rule 4 (Declaration -> empty .)
    CHAR            reduce using rule 4 (Declaration -> empty .)
    MAIN            reduce using rule 4 (Declaration -> empty .)


state 10

    (3) Declaration -> Primitive ID . Declaration1
    (5) Declaration1 -> . Array Array Seen_Variable SEMI Declaration
    (6) Declaration1 -> . LPAREN ParamList RPAREN Seen_Function FBlock
    (9) Array -> . LBRACKET ICONST RBRACKET
    (10) Array -> . empty
    (121) empty -> .

  ! shift/reduce conflict for LBRACKET resolved as shift
    LPAREN          shift and go to state 20
    LBRACKET        shift and go to state 19
    SEMI            reduce using rule 121 (empty -> .)

  ! LBRACKET        [ reduce using rule 121 (empty -> .) ]

    Declaration1                   shift and go to state 18
    Array                          shift and go to state 21
    empty                          shift and go to state 22

state 11

    (1) Program -> Declaration Function . Main
    (2) Main -> . MAIN LPAREN RPAREN FBlock

    MAIN            shift and go to state 23

    Main                           shift and go to state 24

state 12

    (11) Function -> Function1 .

    MAIN            reduce using rule 11 (Function -> Function1 .)


state 13

    (15) RFunction -> Primitive . ID LPAREN ParamList RPAREN Seen_Function FBlock Function

    ID              shift and go to state 25


state 14

    (14) Function1 -> VOID . ID LPAREN ParamList RPAREN Seen_Function FBlock Function

    ID              shift and go to state 26


state 15

    (12) Function -> RFunction .

    MAIN            reduce using rule 12 (Function -> RFunction .)


state 16

    (13) Function -> empty .

    MAIN            reduce using rule 13 (Function -> empty .)


state 17

    (122) Program -> ASCII Program .

    $end            reduce using rule 122 (Program -> ASCII Program .)


state 18

    (3) Declaration -> Primitive ID Declaration1 .

    VOID            reduce using rule 3 (Declaration -> Primitive ID Declaration1 .)
    INT             reduce using rule 3 (Declaration -> Primitive ID Declaration1 .)
    FLOAT           reduce using rule 3 (Declaration -> Primitive ID Declaration1 .)
    BOOL            reduce using rule 3 (Declaration -> Primitive ID Declaration1 .)
    CHAR            reduce using rule 3 (Declaration -> Primitive ID Declaration1 .)
    MAIN            reduce using rule 3 (Declaration -> Primitive ID Declaration1 .)


state 19

    (9) Array -> LBRACKET . ICONST RBRACKET

    ICONST          shift and go to state 27


state 20

    (6) Declaration1 -> LPAREN . ParamList RPAREN Seen_Function FBlock
    (85) ParamList -> . ParamList1
    (86) ParamList -> . empty
    (87) ParamList1 -> . Param ParamList2
    (121) empty -> .
    (78) Param -> . Primitive ID Array1 Array1 Seen_Variable Update_Signature
    (81) Primitive -> . INT
    (82) Primitive -> . FLOAT
    (83) Primitive -> . BOOL
    (84) Primitive -> . CHAR

    RPAREN          reduce using rule 121 (empty -> .)
    INT             shift and go to state 2
    FLOAT           shift and go to state 3
    BOOL            shift and go to state 6
    CHAR            shift and go to state 4

    Primitive                      shift and go to state 28
    ParamList1                     shift and go to state 29
    Param                          shift and go to state 30
    ParamList                      shift and go to state 31
    empty                          shift and go to state 32

state 21

    (5) Declaration1 -> Array . Array Seen_Variable SEMI Declaration
    (9) Array -> . LBRACKET ICONST RBRACKET
    (10) Array -> . empty
    (121) empty -> .

    LBRACKET        shift and go to state 19
    SEMI            reduce using rule 121 (empty -> .)

    Array                          shift and go to state 33
    empty                          shift and go to state 22

state 22

    (10) Array -> empty .

    LBRACKET        reduce using rule 10 (Array -> empty .)
    SEMI            reduce using rule 10 (Array -> empty .)


state 23

    (2) Main -> MAIN . LPAREN RPAREN FBlock

    LPAREN          shift and go to state 34


state 24

    (1) Program -> Declaration Function Main .

    $end            reduce using rule 1 (Program -> Declaration Function Main .)


state 25

    (15) RFunction -> Primitive ID . LPAREN ParamList RPAREN Seen_Function FBlock Function

    LPAREN          shift and go to state 35


state 26

    (14) Function1 -> VOID ID . LPAREN ParamList RPAREN Seen_Function FBlock Function

    LPAREN          shift and go to state 36


state 27

    (9) Array -> LBRACKET ICONST . RBRACKET

    RBRACKET        shift and go to state 37


state 28

    (78) Param -> Primitive . ID Array1 Array1 Seen_Variable Update_Signature

    ID              shift and go to state 38


state 29

    (85) ParamList -> ParamList1 .

    RPAREN          reduce using rule 85 (ParamList -> ParamList1 .)


state 30

    (87) ParamList1 -> Param . ParamList2
    (88) ParamList2 -> . COMMA ParamList1
    (89) ParamList2 -> . empty
    (121) empty -> .

    COMMA           shift and go to state 40
    RPAREN          reduce using rule 121 (empty -> .)

    empty                          shift and go to state 39
    ParamList2                     shift and go to state 41

state 31

    (6) Declaration1 -> LPAREN ParamList . RPAREN Seen_Function FBlock

    RPAREN          shift and go to state 42


state 32

    (86) ParamList -> empty .

    RPAREN          reduce using rule 86 (ParamList -> empty .)


state 33

    (5) Declaration1 -> Array Array . Seen_Variable SEMI Declaration
    (120) Seen_Variable -> .

    SEMI            reduce using rule 120 (Seen_Variable -> .)

    Seen_Variable                  shift and go to state 43

state 34

    (2) Main -> MAIN LPAREN . RPAREN FBlock

    RPAREN          shift and go to state 44


state 35

    (15) RFunction -> Primitive ID LPAREN . ParamList RPAREN Seen_Function FBlock Function
    (85) ParamList -> . ParamList1
    (86) ParamList -> . empty
    (87) ParamList1 -> . Param ParamList2
    (121) empty -> .
    (78) Param -> . Primitive ID Array1 Array1 Seen_Variable Update_Signature
    (81) Primitive -> . INT
    (82) Primitive -> . FLOAT
    (83) Primitive -> . BOOL
    (84) Primitive -> . CHAR

    RPAREN          reduce using rule 121 (empty -> .)
    INT             shift and go to state 2
    FLOAT           shift and go to state 3
    BOOL            shift and go to state 6
    CHAR            shift and go to state 4

    Primitive                      shift and go to state 28
    ParamList1                     shift and go to state 29
    Param                          shift and go to state 30
    ParamList                      shift and go to state 45
    empty                          shift and go to state 32

state 36

    (14) Function1 -> VOID ID LPAREN . ParamList RPAREN Seen_Function FBlock Function
    (85) ParamList -> . ParamList1
    (86) ParamList -> . empty
    (87) ParamList1 -> . Param ParamList2
    (121) empty -> .
    (78) Param -> . Primitive ID Array1 Array1 Seen_Variable Update_Signature
    (81) Primitive -> . INT
    (82) Primitive -> . FLOAT
    (83) Primitive -> . BOOL
    (84) Primitive -> . CHAR

    RPAREN          reduce using rule 121 (empty -> .)
    INT             shift and go to state 2
    FLOAT           shift and go to state 3
    BOOL            shift and go to state 6
    CHAR            shift and go to state 4

    Primitive                      shift and go to state 28
    ParamList1                     shift and go to state 29
    Param                          shift and go to state 30
    ParamList                      shift and go to state 46
    empty                          shift and go to state 32

state 37

    (9) Array -> LBRACKET ICONST RBRACKET .

    LBRACKET        reduce using rule 9 (Array -> LBRACKET ICONST RBRACKET .)
    SEMI            reduce using rule 9 (Array -> LBRACKET ICONST RBRACKET .)


state 38

    (78) Param -> Primitive ID . Array1 Array1 Seen_Variable Update_Signature
    (79) Array1 -> . LBRACKET RBRACKET
    (80) Array1 -> . empty
    (121) empty -> .

  ! shift/reduce conflict for LBRACKET resolved as shift
    LBRACKET        shift and go to state 47
    COMMA           reduce using rule 121 (empty -> .)
    RPAREN          reduce using rule 121 (empty -> .)

  ! LBRACKET        [ reduce using rule 121 (empty -> .) ]

    Array1                         shift and go to state 48
    empty                          shift and go to state 49

state 39

    (89) ParamList2 -> empty .

    RPAREN          reduce using rule 89 (ParamList2 -> empty .)


state 40

    (88) ParamList2 -> COMMA . ParamList1
    (87) ParamList1 -> . Param ParamList2
    (78) Param -> . Primitive ID Array1 Array1 Seen_Variable Update_Signature
    (81) Primitive -> . INT
    (82) Primitive -> . FLOAT
    (83) Primitive -> . BOOL
    (84) Primitive -> . CHAR

    INT             shift and go to state 2
    FLOAT           shift and go to state 3
    BOOL            shift and go to state 6
    CHAR            shift and go to state 4

    Primitive                      shift and go to state 28
    ParamList1                     shift and go to state 50
    Param                          shift and go to state 30

state 41

    (87) ParamList1 -> Param ParamList2 .

    RPAREN          reduce using rule 87 (ParamList1 -> Param ParamList2 .)


state 42

    (6) Declaration1 -> LPAREN ParamList RPAREN . Seen_Function FBlock
    (118) Seen_Function -> .

    LBRACE          reduce using rule 118 (Seen_Function -> .)

    Seen_Function                  shift and go to state 51

state 43

    (5) Declaration1 -> Array Array Seen_Variable . SEMI Declaration

    SEMI            shift and go to state 52


state 44

    (2) Main -> MAIN LPAREN RPAREN . FBlock
    (17) FBlock -> . LBRACE Local_Declaration Instruction RBRACE
    (124) FBlock -> . LBRACE Local_Declaration error RBRACE

    LBRACE          shift and go to state 53

    FBlock                         shift and go to state 54

state 45

    (15) RFunction -> Primitive ID LPAREN ParamList . RPAREN Seen_Function FBlock Function

    RPAREN          shift and go to state 55


state 46

    (14) Function1 -> VOID ID LPAREN ParamList . RPAREN Seen_Function FBlock Function

    RPAREN          shift and go to state 56


state 47

    (79) Array1 -> LBRACKET . RBRACKET

    RBRACKET        shift and go to state 57


state 48

    (78) Param -> Primitive ID Array1 . Array1 Seen_Variable Update_Signature
    (79) Array1 -> . LBRACKET RBRACKET
    (80) Array1 -> . empty
    (121) empty -> .

    LBRACKET        shift and go to state 47
    COMMA           reduce using rule 121 (empty -> .)
    RPAREN          reduce using rule 121 (empty -> .)

    Array1                         shift and go to state 58
    empty                          shift and go to state 49

state 49

    (80) Array1 -> empty .

    COMMA           reduce using rule 80 (Array1 -> empty .)
    RPAREN          reduce using rule 80 (Array1 -> empty .)
    LBRACKET        reduce using rule 80 (Array1 -> empty .)


state 50

    (88) ParamList2 -> COMMA ParamList1 .

    RPAREN          reduce using rule 88 (ParamList2 -> COMMA ParamList1 .)


state 51

    (6) Declaration1 -> LPAREN ParamList RPAREN Seen_Function . FBlock
    (17) FBlock -> . LBRACE Local_Declaration Instruction RBRACE
    (124) FBlock -> . LBRACE Local_Declaration error RBRACE

    LBRACE          shift and go to state 53

    FBlock                         shift and go to state 59

state 52

    (5) Declaration1 -> Array Array Seen_Variable SEMI . Declaration
    (3) Declaration -> . Primitive ID Declaration1
    (4) Declaration -> . empty
    (81) Primitive -> . INT
    (82) Primitive -> . FLOAT
    (83) Primitive -> . BOOL
    (84) Primitive -> . CHAR
    (121) empty -> .

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    INT             shift and go to state 2
    FLOAT           shift and go to state 3
    BOOL            shift and go to state 6
    CHAR            shift and go to state 4
    VOID            reduce using rule 121 (empty -> .)
    MAIN            reduce using rule 121 (empty -> .)

  ! INT             [ reduce using rule 121 (empty -> .) ]
  ! FLOAT           [ reduce using rule 121 (empty -> .) ]
  ! BOOL            [ reduce using rule 121 (empty -> .) ]
  ! CHAR            [ reduce using rule 121 (empty -> .) ]

    Primitive                      shift and go to state 1
    Declaration                    shift and go to state 60
    empty                          shift and go to state 9

state 53

    (17) FBlock -> LBRACE . Local_Declaration Instruction RBRACE
    (124) FBlock -> LBRACE . Local_Declaration error RBRACE
    (7) Local_Declaration -> . Primitive ID Array Array Seen_Variable SEMI Local_Declaration
    (8) Local_Declaration -> . empty
    (81) Primitive -> . INT
    (82) Primitive -> . FLOAT
    (83) Primitive -> . BOOL
    (84) Primitive -> . CHAR
    (121) empty -> .

    INT             shift and go to state 2
    FLOAT           shift and go to state 3
    BOOL            shift and go to state 6
    CHAR            shift and go to state 4
    error           reduce using rule 121 (empty -> .)
    LOOP            reduce using rule 121 (empty -> .)
    IF              reduce using rule 121 (empty -> .)
    ID              reduce using rule 121 (empty -> .)
    BRUSH           reduce using rule 121 (empty -> .)
    READ            reduce using rule 121 (empty -> .)
    PRINT           reduce using rule 121 (empty -> .)
    PD              reduce using rule 121 (empty -> .)
    PU              reduce using rule 121 (empty -> .)
    HOME            reduce using rule 121 (empty -> .)
    FD              reduce using rule 121 (empty -> .)
    RT              reduce using rule 121 (empty -> .)
    COLOR           reduce using rule 121 (empty -> .)
    CIRCLE          reduce using rule 121 (empty -> .)
    ARC             reduce using rule 121 (empty -> .)
    SQUARE          reduce using rule 121 (empty -> .)
    RETURN          reduce using rule 121 (empty -> .)
    RBRACE          reduce using rule 121 (empty -> .)

    Primitive                      shift and go to state 61
    Local_Declaration              shift and go to state 62
    empty                          shift and go to state 63

state 54

    (2) Main -> MAIN LPAREN RPAREN FBlock .

    $end            reduce using rule 2 (Main -> MAIN LPAREN RPAREN FBlock .)


state 55

    (15) RFunction -> Primitive ID LPAREN ParamList RPAREN . Seen_Function FBlock Function
    (118) Seen_Function -> .

    LBRACE          reduce using rule 118 (Seen_Function -> .)

    Seen_Function                  shift and go to state 64

state 56

    (14) Function1 -> VOID ID LPAREN ParamList RPAREN . Seen_Function FBlock Function
    (118) Seen_Function -> .

    LBRACE          reduce using rule 118 (Seen_Function -> .)

    Seen_Function                  shift and go to state 65

state 57

    (79) Array1 -> LBRACKET RBRACKET .

    COMMA           reduce using rule 79 (Array1 -> LBRACKET RBRACKET .)
    RPAREN          reduce using rule 79 (Array1 -> LBRACKET RBRACKET .)
    LBRACKET        reduce using rule 79 (Array1 -> LBRACKET RBRACKET .)


state 58

    (78) Param -> Primitive ID Array1 Array1 . Seen_Variable Update_Signature
    (120) Seen_Variable -> .

    COMMA           reduce using rule 120 (Seen_Variable -> .)
    RPAREN          reduce using rule 120 (Seen_Variable -> .)

    Seen_Variable                  shift and go to state 66

state 59

    (6) Declaration1 -> LPAREN ParamList RPAREN Seen_Function FBlock .

    VOID            reduce using rule 6 (Declaration1 -> LPAREN ParamList RPAREN Seen_Function FBlock .)
    INT             reduce using rule 6 (Declaration1 -> LPAREN ParamList RPAREN Seen_Function FBlock .)
    FLOAT           reduce using rule 6 (Declaration1 -> LPAREN ParamList RPAREN Seen_Function FBlock .)
    BOOL            reduce using rule 6 (Declaration1 -> LPAREN ParamList RPAREN Seen_Function FBlock .)
    CHAR            reduce using rule 6 (Declaration1 -> LPAREN ParamList RPAREN Seen_Function FBlock .)
    MAIN            reduce using rule 6 (Declaration1 -> LPAREN ParamList RPAREN Seen_Function FBlock .)


state 60

    (5) Declaration1 -> Array Array Seen_Variable SEMI Declaration .

    VOID            reduce using rule 5 (Declaration1 -> Array Array Seen_Variable SEMI Declaration .)
    INT             reduce using rule 5 (Declaration1 -> Array Array Seen_Variable SEMI Declaration .)
    FLOAT           reduce using rule 5 (Declaration1 -> Array Array Seen_Variable SEMI Declaration .)
    BOOL            reduce using rule 5 (Declaration1 -> Array Array Seen_Variable SEMI Declaration .)
    CHAR            reduce using rule 5 (Declaration1 -> Array Array Seen_Variable SEMI Declaration .)
    MAIN            reduce using rule 5 (Declaration1 -> Array Array Seen_Variable SEMI Declaration .)


state 61

    (7) Local_Declaration -> Primitive . ID Array Array Seen_Variable SEMI Local_Declaration

    ID              shift and go to state 67


state 62

    (17) FBlock -> LBRACE Local_Declaration . Instruction RBRACE
    (124) FBlock -> LBRACE Local_Declaration . error RBRACE
    (90) Instruction -> . Instruction1 SEMI Instruction
    (91) Instruction -> . empty
    (92) Instruction1 -> . Loop
    (93) Instruction1 -> . Conditional
    (94) Instruction1 -> . Assign
    (95) Instruction1 -> . Call
    (96) Instruction1 -> . Brush
    (97) Instruction1 -> . Read
    (98) Instruction1 -> . Print
    (99) Instruction1 -> . PenDown
    (100) Instruction1 -> . PenUp
    (101) Instruction1 -> . Home
    (102) Instruction1 -> . Forward
    (103) Instruction1 -> . Rotate
    (104) Instruction1 -> . Color
    (105) Instruction1 -> . Circle
    (106) Instruction1 -> . Arc
    (107) Instruction1 -> . Square
    (108) Instruction1 -> . Return
    (121) empty -> .
    (58) Loop -> . LOOP LPAREN SuperExpr RPAREN Block
    (18) Conditional -> . IF LPAREN SuperExpr RPAREN Block Else
    (59) Assign -> . ID EQUAL Assign1
    (63) Call -> . ID LPAREN Params RPAREN
    (68) Brush -> . BRUSH LPAREN Color COMMA SuperExpr RPAREN
    (64) Read -> . READ LPAREN Type COMMA ID RPAREN
    (67) Print -> . PRINT LPAREN Params3 RPAREN
    (70) PenDown -> . PD LPAREN RPAREN
    (71) PenUp -> . PU LPAREN RPAREN
    (72) Home -> . HOME LPAREN RPAREN
    (73) Forward -> . FD LPAREN SuperExpr RPAREN
    (74) Rotate -> . RT LPAREN SuperExpr RPAREN
    (69) Color -> . COLOR LPAREN SuperExpr COMMA SuperExpr COMMA SuperExpr RPAREN
    (75) Circle -> . CIRCLE LPAREN SuperExpr RPAREN
    (125) Circle -> . CIRCLE LPAREN error RPAREN
    (76) Arc -> . ARC LPAREN SuperExpr COMMA SuperExpr RPAREN
    (77) Square -> . SQUARE LPAREN SuperExpr RPAREN
    (109) Return -> . RETURN RType

    error           shift and go to state 100
    RBRACE          reduce using rule 121 (empty -> .)
    LOOP            shift and go to state 104
    IF              shift and go to state 93
    ID              shift and go to state 90
    BRUSH           shift and go to state 86
    READ            shift and go to state 70
    PRINT           shift and go to state 71
    PD              shift and go to state 84
    PU              shift and go to state 81
    HOME            shift and go to state 77
    FD              shift and go to state 94
    RT              shift and go to state 79
    COLOR           shift and go to state 97
    CIRCLE          shift and go to state 102
    ARC             shift and go to state 83
    SQUARE          shift and go to state 74
    RETURN          shift and go to state 68

    PenUp                          shift and go to state 69
    Print                          shift and go to state 72
    PenDown                        shift and go to state 73
    Call                           shift and go to state 75
    Forward                        shift and go to state 76
    Circle                         shift and go to state 78
    Return                         shift and go to state 80
    Read                           shift and go to state 82
    empty                          shift and go to state 85
    Rotate                         shift and go to state 87
    Instruction                    shift and go to state 88
    Assign                         shift and go to state 91
    Loop                           shift and go to state 92
    Square                         shift and go to state 89
    Color                          shift and go to state 95
    Conditional                    shift and go to state 96
    Arc                            shift and go to state 98
    Brush                          shift and go to state 99
    Home                           shift and go to state 101
    Instruction1                   shift and go to state 103

state 63

    (8) Local_Declaration -> empty .

    error           reduce using rule 8 (Local_Declaration -> empty .)
    LOOP            reduce using rule 8 (Local_Declaration -> empty .)
    IF              reduce using rule 8 (Local_Declaration -> empty .)
    ID              reduce using rule 8 (Local_Declaration -> empty .)
    BRUSH           reduce using rule 8 (Local_Declaration -> empty .)
    READ            reduce using rule 8 (Local_Declaration -> empty .)
    PRINT           reduce using rule 8 (Local_Declaration -> empty .)
    PD              reduce using rule 8 (Local_Declaration -> empty .)
    PU              reduce using rule 8 (Local_Declaration -> empty .)
    HOME            reduce using rule 8 (Local_Declaration -> empty .)
    FD              reduce using rule 8 (Local_Declaration -> empty .)
    RT              reduce using rule 8 (Local_Declaration -> empty .)
    COLOR           reduce using rule 8 (Local_Declaration -> empty .)
    CIRCLE          reduce using rule 8 (Local_Declaration -> empty .)
    ARC             reduce using rule 8 (Local_Declaration -> empty .)
    SQUARE          reduce using rule 8 (Local_Declaration -> empty .)
    RETURN          reduce using rule 8 (Local_Declaration -> empty .)
    RBRACE          reduce using rule 8 (Local_Declaration -> empty .)


state 64

    (15) RFunction -> Primitive ID LPAREN ParamList RPAREN Seen_Function . FBlock Function
    (17) FBlock -> . LBRACE Local_Declaration Instruction RBRACE
    (124) FBlock -> . LBRACE Local_Declaration error RBRACE

    LBRACE          shift and go to state 53

    FBlock                         shift and go to state 105

state 65

    (14) Function1 -> VOID ID LPAREN ParamList RPAREN Seen_Function . FBlock Function
    (17) FBlock -> . LBRACE Local_Declaration Instruction RBRACE
    (124) FBlock -> . LBRACE Local_Declaration error RBRACE

    LBRACE          shift and go to state 53

    FBlock                         shift and go to state 106

state 66

    (78) Param -> Primitive ID Array1 Array1 Seen_Variable . Update_Signature
    (119) Update_Signature -> .

    COMMA           reduce using rule 119 (Update_Signature -> .)
    RPAREN          reduce using rule 119 (Update_Signature -> .)

    Update_Signature               shift and go to state 107

state 67

    (7) Local_Declaration -> Primitive ID . Array Array Seen_Variable SEMI Local_Declaration
    (9) Array -> . LBRACKET ICONST RBRACKET
    (10) Array -> . empty
    (121) empty -> .

  ! shift/reduce conflict for LBRACKET resolved as shift
    LBRACKET        shift and go to state 19
    SEMI            reduce using rule 121 (empty -> .)

  ! LBRACKET        [ reduce using rule 121 (empty -> .) ]

    Array                          shift and go to state 108
    empty                          shift and go to state 22

state 68

    (109) Return -> RETURN . RType
    (110) RType -> . SuperExpr
    (111) RType -> . empty
    (21) SuperExpr -> . Expression SuperExpr1
    (126) SuperExpr -> . Expression error SuperExpr1
    (121) empty -> .
    (25) Expression -> . Expr Expression1
    (33) Expr -> . Term Expr1
    (37) Term -> . Factor Term1
    (41) Factor -> . LPAREN SuperExpr RPAREN
    (42) Factor -> . Factor1
    (43) Factor1 -> . Factor2
    (44) Factor1 -> . Factor3
    (45) Factor2 -> . MINUS Factor3
    (46) Factor2 -> . PLUS Factor3
    (47) Factor3 -> . Constant
    (48) Factor3 -> . Call
    (112) Constant -> . ID
    (113) Constant -> . FCONST
    (114) Constant -> . ICONST
    (115) Constant -> . CCONST
    (116) Constant -> . FALSE
    (117) Constant -> . TRUE
    (63) Call -> . ID LPAREN Params RPAREN

    SEMI            reduce using rule 121 (empty -> .)
    LPAREN          shift and go to state 123
    MINUS           shift and go to state 113
    PLUS            shift and go to state 115
    ID              shift and go to state 126
    FCONST          shift and go to state 114
    ICONST          shift and go to state 122
    CCONST          shift and go to state 129
    FALSE           shift and go to state 124
    TRUE            shift and go to state 112

    Term                           shift and go to state 117
    Constant                       shift and go to state 127
    Factor1                        shift and go to state 118
    RType                          shift and go to state 128
    Factor2                        shift and go to state 119
    SuperExpr                      shift and go to state 109
    Factor                         shift and go to state 111
    Factor3                        shift and go to state 120
    Call                           shift and go to state 110
    Expr                           shift and go to state 121
    Expression                     shift and go to state 125
    empty                          shift and go to state 116

state 69

    (100) Instruction1 -> PenUp .

    SEMI            reduce using rule 100 (Instruction1 -> PenUp .)


state 70

    (64) Read -> READ . LPAREN Type COMMA ID RPAREN

    LPAREN          shift and go to state 130


state 71

    (67) Print -> PRINT . LPAREN Params3 RPAREN

    LPAREN          shift and go to state 131


state 72

    (98) Instruction1 -> Print .

    SEMI            reduce using rule 98 (Instruction1 -> Print .)


state 73

    (99) Instruction1 -> PenDown .

    SEMI            reduce using rule 99 (Instruction1 -> PenDown .)


state 74

    (77) Square -> SQUARE . LPAREN SuperExpr RPAREN

    LPAREN          shift and go to state 132


state 75

    (95) Instruction1 -> Call .

    SEMI            reduce using rule 95 (Instruction1 -> Call .)


state 76

    (102) Instruction1 -> Forward .

    SEMI            reduce using rule 102 (Instruction1 -> Forward .)


state 77

    (72) Home -> HOME . LPAREN RPAREN

    LPAREN          shift and go to state 133


state 78

    (105) Instruction1 -> Circle .

    SEMI            reduce using rule 105 (Instruction1 -> Circle .)


state 79

    (74) Rotate -> RT . LPAREN SuperExpr RPAREN

    LPAREN          shift and go to state 134


state 80

    (108) Instruction1 -> Return .

    SEMI            reduce using rule 108 (Instruction1 -> Return .)


state 81

    (71) PenUp -> PU . LPAREN RPAREN

    LPAREN          shift and go to state 135


state 82

    (97) Instruction1 -> Read .

    SEMI            reduce using rule 97 (Instruction1 -> Read .)


state 83

    (76) Arc -> ARC . LPAREN SuperExpr COMMA SuperExpr RPAREN

    LPAREN          shift and go to state 136


state 84

    (70) PenDown -> PD . LPAREN RPAREN

    LPAREN          shift and go to state 137


state 85

    (91) Instruction -> empty .

    RBRACE          reduce using rule 91 (Instruction -> empty .)


state 86

    (68) Brush -> BRUSH . LPAREN Color COMMA SuperExpr RPAREN

    LPAREN          shift and go to state 138


state 87

    (103) Instruction1 -> Rotate .

    SEMI            reduce using rule 103 (Instruction1 -> Rotate .)


state 88

    (17) FBlock -> LBRACE Local_Declaration Instruction . RBRACE

    RBRACE          shift and go to state 139


state 89

    (107) Instruction1 -> Square .

    SEMI            reduce using rule 107 (Instruction1 -> Square .)


state 90

    (59) Assign -> ID . EQUAL Assign1
    (63) Call -> ID . LPAREN Params RPAREN

    EQUAL           shift and go to state 140
    LPAREN          shift and go to state 141


state 91

    (94) Instruction1 -> Assign .

    SEMI            reduce using rule 94 (Instruction1 -> Assign .)


state 92

    (92) Instruction1 -> Loop .

    SEMI            reduce using rule 92 (Instruction1 -> Loop .)


state 93

    (18) Conditional -> IF . LPAREN SuperExpr RPAREN Block Else

    LPAREN          shift and go to state 142


state 94

    (73) Forward -> FD . LPAREN SuperExpr RPAREN

    LPAREN          shift and go to state 143


state 95

    (104) Instruction1 -> Color .

    SEMI            reduce using rule 104 (Instruction1 -> Color .)


state 96

    (93) Instruction1 -> Conditional .

    SEMI            reduce using rule 93 (Instruction1 -> Conditional .)


state 97

    (69) Color -> COLOR . LPAREN SuperExpr COMMA SuperExpr COMMA SuperExpr RPAREN

    LPAREN          shift and go to state 144


state 98

    (106) Instruction1 -> Arc .

    SEMI            reduce using rule 106 (Instruction1 -> Arc .)


state 99

    (96) Instruction1 -> Brush .

    SEMI            reduce using rule 96 (Instruction1 -> Brush .)


state 100

    (124) FBlock -> LBRACE Local_Declaration error . RBRACE

    RBRACE          shift and go to state 145


state 101

    (101) Instruction1 -> Home .

    SEMI            reduce using rule 101 (Instruction1 -> Home .)


state 102

    (75) Circle -> CIRCLE . LPAREN SuperExpr RPAREN
    (125) Circle -> CIRCLE . LPAREN error RPAREN

    LPAREN          shift and go to state 146


state 103

    (90) Instruction -> Instruction1 . SEMI Instruction

    SEMI            shift and go to state 147


state 104

    (58) Loop -> LOOP . LPAREN SuperExpr RPAREN Block

    LPAREN          shift and go to state 148


state 105

    (15) RFunction -> Primitive ID LPAREN ParamList RPAREN Seen_Function FBlock . Function
    (11) Function -> . Function1
    (12) Function -> . RFunction
    (13) Function -> . empty
    (14) Function1 -> . VOID ID LPAREN ParamList RPAREN Seen_Function FBlock Function
    (15) RFunction -> . Primitive ID LPAREN ParamList RPAREN Seen_Function FBlock Function
    (121) empty -> .
    (81) Primitive -> . INT
    (82) Primitive -> . FLOAT
    (83) Primitive -> . BOOL
    (84) Primitive -> . CHAR

    VOID            shift and go to state 14
    MAIN            reduce using rule 121 (empty -> .)
    INT             shift and go to state 2
    FLOAT           shift and go to state 3
    BOOL            shift and go to state 6
    CHAR            shift and go to state 4

    Function                       shift and go to state 149
    Function1                      shift and go to state 12
    Primitive                      shift and go to state 13
    RFunction                      shift and go to state 15
    empty                          shift and go to state 16

state 106

    (14) Function1 -> VOID ID LPAREN ParamList RPAREN Seen_Function FBlock . Function
    (11) Function -> . Function1
    (12) Function -> . RFunction
    (13) Function -> . empty
    (14) Function1 -> . VOID ID LPAREN ParamList RPAREN Seen_Function FBlock Function
    (15) RFunction -> . Primitive ID LPAREN ParamList RPAREN Seen_Function FBlock Function
    (121) empty -> .
    (81) Primitive -> . INT
    (82) Primitive -> . FLOAT
    (83) Primitive -> . BOOL
    (84) Primitive -> . CHAR

    VOID            shift and go to state 14
    MAIN            reduce using rule 121 (empty -> .)
    INT             shift and go to state 2
    FLOAT           shift and go to state 3
    BOOL            shift and go to state 6
    CHAR            shift and go to state 4

    Function                       shift and go to state 150
    Function1                      shift and go to state 12
    Primitive                      shift and go to state 13
    RFunction                      shift and go to state 15
    empty                          shift and go to state 16

state 107

    (78) Param -> Primitive ID Array1 Array1 Seen_Variable Update_Signature .

    COMMA           reduce using rule 78 (Param -> Primitive ID Array1 Array1 Seen_Variable Update_Signature .)
    RPAREN          reduce using rule 78 (Param -> Primitive ID Array1 Array1 Seen_Variable Update_Signature .)


state 108

    (7) Local_Declaration -> Primitive ID Array . Array Seen_Variable SEMI Local_Declaration
    (9) Array -> . LBRACKET ICONST RBRACKET
    (10) Array -> . empty
    (121) empty -> .

    LBRACKET        shift and go to state 19
    SEMI            reduce using rule 121 (empty -> .)

    Array                          shift and go to state 151
    empty                          shift and go to state 22

state 109

    (110) RType -> SuperExpr .

    SEMI            reduce using rule 110 (RType -> SuperExpr .)


state 110

    (48) Factor3 -> Call .

    DIVIDE          reduce using rule 48 (Factor3 -> Call .)
    TIMES           reduce using rule 48 (Factor3 -> Call .)
    MINUS           reduce using rule 48 (Factor3 -> Call .)
    PLUS            reduce using rule 48 (Factor3 -> Call .)
    LESSTHAN        reduce using rule 48 (Factor3 -> Call .)
    GREATHAN        reduce using rule 48 (Factor3 -> Call .)
    DIFFERENT       reduce using rule 48 (Factor3 -> Call .)
    TWOEQUAL        reduce using rule 48 (Factor3 -> Call .)
    GREATEQUAL      reduce using rule 48 (Factor3 -> Call .)
    LESSEQUAL       reduce using rule 48 (Factor3 -> Call .)
    error           reduce using rule 48 (Factor3 -> Call .)
    AND             reduce using rule 48 (Factor3 -> Call .)
    OR              reduce using rule 48 (Factor3 -> Call .)
    COMMA           reduce using rule 48 (Factor3 -> Call .)
    RPAREN          reduce using rule 48 (Factor3 -> Call .)
    SEMI            reduce using rule 48 (Factor3 -> Call .)


state 111

    (37) Term -> Factor . Term1
    (38) Term1 -> . DIVIDE Term
    (39) Term1 -> . TIMES Term
    (40) Term1 -> . empty
    (127) Term1 -> . DIVIDE error Term
    (128) Term1 -> . TIMES error Term
    (121) empty -> .

    DIVIDE          shift and go to state 152
    TIMES           shift and go to state 154
    MINUS           reduce using rule 121 (empty -> .)
    PLUS            reduce using rule 121 (empty -> .)
    LESSTHAN        reduce using rule 121 (empty -> .)
    GREATHAN        reduce using rule 121 (empty -> .)
    DIFFERENT       reduce using rule 121 (empty -> .)
    TWOEQUAL        reduce using rule 121 (empty -> .)
    GREATEQUAL      reduce using rule 121 (empty -> .)
    LESSEQUAL       reduce using rule 121 (empty -> .)
    error           reduce using rule 121 (empty -> .)
    AND             reduce using rule 121 (empty -> .)
    OR              reduce using rule 121 (empty -> .)
    SEMI            reduce using rule 121 (empty -> .)
    RPAREN          reduce using rule 121 (empty -> .)
    COMMA           reduce using rule 121 (empty -> .)

    empty                          shift and go to state 155
    Term1                          shift and go to state 153

state 112

    (117) Constant -> TRUE .

    DIVIDE          reduce using rule 117 (Constant -> TRUE .)
    TIMES           reduce using rule 117 (Constant -> TRUE .)
    MINUS           reduce using rule 117 (Constant -> TRUE .)
    PLUS            reduce using rule 117 (Constant -> TRUE .)
    LESSTHAN        reduce using rule 117 (Constant -> TRUE .)
    GREATHAN        reduce using rule 117 (Constant -> TRUE .)
    DIFFERENT       reduce using rule 117 (Constant -> TRUE .)
    TWOEQUAL        reduce using rule 117 (Constant -> TRUE .)
    GREATEQUAL      reduce using rule 117 (Constant -> TRUE .)
    LESSEQUAL       reduce using rule 117 (Constant -> TRUE .)
    error           reduce using rule 117 (Constant -> TRUE .)
    AND             reduce using rule 117 (Constant -> TRUE .)
    OR              reduce using rule 117 (Constant -> TRUE .)
    SEMI            reduce using rule 117 (Constant -> TRUE .)
    RPAREN          reduce using rule 117 (Constant -> TRUE .)
    COMMA           reduce using rule 117 (Constant -> TRUE .)


state 113

    (45) Factor2 -> MINUS . Factor3
    (47) Factor3 -> . Constant
    (48) Factor3 -> . Call
    (112) Constant -> . ID
    (113) Constant -> . FCONST
    (114) Constant -> . ICONST
    (115) Constant -> . CCONST
    (116) Constant -> . FALSE
    (117) Constant -> . TRUE
    (63) Call -> . ID LPAREN Params RPAREN

    ID              shift and go to state 126
    FCONST          shift and go to state 114
    ICONST          shift and go to state 122
    CCONST          shift and go to state 129
    FALSE           shift and go to state 124
    TRUE            shift and go to state 112

    Call                           shift and go to state 110
    Constant                       shift and go to state 127
    Factor3                        shift and go to state 156

state 114

    (113) Constant -> FCONST .

    DIVIDE          reduce using rule 113 (Constant -> FCONST .)
    TIMES           reduce using rule 113 (Constant -> FCONST .)
    MINUS           reduce using rule 113 (Constant -> FCONST .)
    PLUS            reduce using rule 113 (Constant -> FCONST .)
    LESSTHAN        reduce using rule 113 (Constant -> FCONST .)
    GREATHAN        reduce using rule 113 (Constant -> FCONST .)
    DIFFERENT       reduce using rule 113 (Constant -> FCONST .)
    TWOEQUAL        reduce using rule 113 (Constant -> FCONST .)
    GREATEQUAL      reduce using rule 113 (Constant -> FCONST .)
    LESSEQUAL       reduce using rule 113 (Constant -> FCONST .)
    error           reduce using rule 113 (Constant -> FCONST .)
    AND             reduce using rule 113 (Constant -> FCONST .)
    OR              reduce using rule 113 (Constant -> FCONST .)
    SEMI            reduce using rule 113 (Constant -> FCONST .)
    RPAREN          reduce using rule 113 (Constant -> FCONST .)
    COMMA           reduce using rule 113 (Constant -> FCONST .)


state 115

    (46) Factor2 -> PLUS . Factor3
    (47) Factor3 -> . Constant
    (48) Factor3 -> . Call
    (112) Constant -> . ID
    (113) Constant -> . FCONST
    (114) Constant -> . ICONST
    (115) Constant -> . CCONST
    (116) Constant -> . FALSE
    (117) Constant -> . TRUE
    (63) Call -> . ID LPAREN Params RPAREN

    ID              shift and go to state 126
    FCONST          shift and go to state 114
    ICONST          shift and go to state 122
    CCONST          shift and go to state 129
    FALSE           shift and go to state 124
    TRUE            shift and go to state 112

    Call                           shift and go to state 110
    Constant                       shift and go to state 127
    Factor3                        shift and go to state 157

state 116

    (111) RType -> empty .

    SEMI            reduce using rule 111 (RType -> empty .)


state 117

    (33) Expr -> Term . Expr1
    (34) Expr1 -> . MINUS Expr
    (35) Expr1 -> . PLUS Expr
    (36) Expr1 -> . empty
    (121) empty -> .

    MINUS           shift and go to state 160
    PLUS            shift and go to state 159
    LESSTHAN        reduce using rule 121 (empty -> .)
    GREATHAN        reduce using rule 121 (empty -> .)
    DIFFERENT       reduce using rule 121 (empty -> .)
    TWOEQUAL        reduce using rule 121 (empty -> .)
    GREATEQUAL      reduce using rule 121 (empty -> .)
    LESSEQUAL       reduce using rule 121 (empty -> .)
    error           reduce using rule 121 (empty -> .)
    AND             reduce using rule 121 (empty -> .)
    OR              reduce using rule 121 (empty -> .)
    SEMI            reduce using rule 121 (empty -> .)
    RPAREN          reduce using rule 121 (empty -> .)
    COMMA           reduce using rule 121 (empty -> .)

    Expr1                          shift and go to state 158
    empty                          shift and go to state 161

state 118

    (42) Factor -> Factor1 .

    DIVIDE          reduce using rule 42 (Factor -> Factor1 .)
    TIMES           reduce using rule 42 (Factor -> Factor1 .)
    MINUS           reduce using rule 42 (Factor -> Factor1 .)
    PLUS            reduce using rule 42 (Factor -> Factor1 .)
    LESSTHAN        reduce using rule 42 (Factor -> Factor1 .)
    GREATHAN        reduce using rule 42 (Factor -> Factor1 .)
    DIFFERENT       reduce using rule 42 (Factor -> Factor1 .)
    TWOEQUAL        reduce using rule 42 (Factor -> Factor1 .)
    GREATEQUAL      reduce using rule 42 (Factor -> Factor1 .)
    LESSEQUAL       reduce using rule 42 (Factor -> Factor1 .)
    error           reduce using rule 42 (Factor -> Factor1 .)
    AND             reduce using rule 42 (Factor -> Factor1 .)
    OR              reduce using rule 42 (Factor -> Factor1 .)
    SEMI            reduce using rule 42 (Factor -> Factor1 .)
    RPAREN          reduce using rule 42 (Factor -> Factor1 .)
    COMMA           reduce using rule 42 (Factor -> Factor1 .)


state 119

    (43) Factor1 -> Factor2 .

    DIVIDE          reduce using rule 43 (Factor1 -> Factor2 .)
    TIMES           reduce using rule 43 (Factor1 -> Factor2 .)
    MINUS           reduce using rule 43 (Factor1 -> Factor2 .)
    PLUS            reduce using rule 43 (Factor1 -> Factor2 .)
    error           reduce using rule 43 (Factor1 -> Factor2 .)
    AND             reduce using rule 43 (Factor1 -> Factor2 .)
    OR              reduce using rule 43 (Factor1 -> Factor2 .)
    SEMI            reduce using rule 43 (Factor1 -> Factor2 .)
    RPAREN          reduce using rule 43 (Factor1 -> Factor2 .)
    COMMA           reduce using rule 43 (Factor1 -> Factor2 .)
    LESSTHAN        reduce using rule 43 (Factor1 -> Factor2 .)
    GREATHAN        reduce using rule 43 (Factor1 -> Factor2 .)
    DIFFERENT       reduce using rule 43 (Factor1 -> Factor2 .)
    TWOEQUAL        reduce using rule 43 (Factor1 -> Factor2 .)
    GREATEQUAL      reduce using rule 43 (Factor1 -> Factor2 .)
    LESSEQUAL       reduce using rule 43 (Factor1 -> Factor2 .)


state 120

    (44) Factor1 -> Factor3 .

    DIVIDE          reduce using rule 44 (Factor1 -> Factor3 .)
    TIMES           reduce using rule 44 (Factor1 -> Factor3 .)
    MINUS           reduce using rule 44 (Factor1 -> Factor3 .)
    PLUS            reduce using rule 44 (Factor1 -> Factor3 .)
    error           reduce using rule 44 (Factor1 -> Factor3 .)
    AND             reduce using rule 44 (Factor1 -> Factor3 .)
    OR              reduce using rule 44 (Factor1 -> Factor3 .)
    SEMI            reduce using rule 44 (Factor1 -> Factor3 .)
    RPAREN          reduce using rule 44 (Factor1 -> Factor3 .)
    COMMA           reduce using rule 44 (Factor1 -> Factor3 .)
    LESSTHAN        reduce using rule 44 (Factor1 -> Factor3 .)
    GREATHAN        reduce using rule 44 (Factor1 -> Factor3 .)
    DIFFERENT       reduce using rule 44 (Factor1 -> Factor3 .)
    TWOEQUAL        reduce using rule 44 (Factor1 -> Factor3 .)
    GREATEQUAL      reduce using rule 44 (Factor1 -> Factor3 .)
    LESSEQUAL       reduce using rule 44 (Factor1 -> Factor3 .)


state 121

    (25) Expression -> Expr . Expression1
    (26) Expression1 -> . LESSTHAN Expr
    (27) Expression1 -> . GREATHAN Expr
    (28) Expression1 -> . DIFFERENT Expr
    (29) Expression1 -> . TWOEQUAL Expr
    (30) Expression1 -> . GREATEQUAL Expr
    (31) Expression1 -> . LESSEQUAL Expr
    (32) Expression1 -> . empty
    (121) empty -> .

    LESSTHAN        shift and go to state 167
    GREATHAN        shift and go to state 163
    DIFFERENT       shift and go to state 162
    TWOEQUAL        shift and go to state 164
    GREATEQUAL      shift and go to state 165
    LESSEQUAL       shift and go to state 166
    error           reduce using rule 121 (empty -> .)
    AND             reduce using rule 121 (empty -> .)
    OR              reduce using rule 121 (empty -> .)
    SEMI            reduce using rule 121 (empty -> .)
    RPAREN          reduce using rule 121 (empty -> .)
    COMMA           reduce using rule 121 (empty -> .)

    Expression1                    shift and go to state 168
    empty                          shift and go to state 169

state 122

    (114) Constant -> ICONST .

    DIVIDE          reduce using rule 114 (Constant -> ICONST .)
    TIMES           reduce using rule 114 (Constant -> ICONST .)
    MINUS           reduce using rule 114 (Constant -> ICONST .)
    PLUS            reduce using rule 114 (Constant -> ICONST .)
    LESSTHAN        reduce using rule 114 (Constant -> ICONST .)
    GREATHAN        reduce using rule 114 (Constant -> ICONST .)
    DIFFERENT       reduce using rule 114 (Constant -> ICONST .)
    TWOEQUAL        reduce using rule 114 (Constant -> ICONST .)
    GREATEQUAL      reduce using rule 114 (Constant -> ICONST .)
    LESSEQUAL       reduce using rule 114 (Constant -> ICONST .)
    error           reduce using rule 114 (Constant -> ICONST .)
    AND             reduce using rule 114 (Constant -> ICONST .)
    OR              reduce using rule 114 (Constant -> ICONST .)
    SEMI            reduce using rule 114 (Constant -> ICONST .)
    RPAREN          reduce using rule 114 (Constant -> ICONST .)
    COMMA           reduce using rule 114 (Constant -> ICONST .)


state 123

    (41) Factor -> LPAREN . SuperExpr RPAREN
    (21) SuperExpr -> . Expression SuperExpr1
    (126) SuperExpr -> . Expression error SuperExpr1
    (25) Expression -> . Expr Expression1
    (33) Expr -> . Term Expr1
    (37) Term -> . Factor Term1
    (41) Factor -> . LPAREN SuperExpr RPAREN
    (42) Factor -> . Factor1
    (43) Factor1 -> . Factor2
    (44) Factor1 -> . Factor3
    (45) Factor2 -> . MINUS Factor3
    (46) Factor2 -> . PLUS Factor3
    (47) Factor3 -> . Constant
    (48) Factor3 -> . Call
    (112) Constant -> . ID
    (113) Constant -> . FCONST
    (114) Constant -> . ICONST
    (115) Constant -> . CCONST
    (116) Constant -> . FALSE
    (117) Constant -> . TRUE
    (63) Call -> . ID LPAREN Params RPAREN

    LPAREN          shift and go to state 123
    MINUS           shift and go to state 113
    PLUS            shift and go to state 115
    ID              shift and go to state 126
    FCONST          shift and go to state 114
    ICONST          shift and go to state 122
    CCONST          shift and go to state 129
    FALSE           shift and go to state 124
    TRUE            shift and go to state 112

    Term                           shift and go to state 117
    Constant                       shift and go to state 127
    Factor1                        shift and go to state 118
    Factor3                        shift and go to state 120
    Factor2                        shift and go to state 119
    SuperExpr                      shift and go to state 170
    Factor                         shift and go to state 111
    Call                           shift and go to state 110
    Expr                           shift and go to state 121
    Expression                     shift and go to state 125

state 124

    (116) Constant -> FALSE .

    DIVIDE          reduce using rule 116 (Constant -> FALSE .)
    TIMES           reduce using rule 116 (Constant -> FALSE .)
    MINUS           reduce using rule 116 (Constant -> FALSE .)
    PLUS            reduce using rule 116 (Constant -> FALSE .)
    LESSTHAN        reduce using rule 116 (Constant -> FALSE .)
    GREATHAN        reduce using rule 116 (Constant -> FALSE .)
    DIFFERENT       reduce using rule 116 (Constant -> FALSE .)
    TWOEQUAL        reduce using rule 116 (Constant -> FALSE .)
    GREATEQUAL      reduce using rule 116 (Constant -> FALSE .)
    LESSEQUAL       reduce using rule 116 (Constant -> FALSE .)
    error           reduce using rule 116 (Constant -> FALSE .)
    AND             reduce using rule 116 (Constant -> FALSE .)
    OR              reduce using rule 116 (Constant -> FALSE .)
    SEMI            reduce using rule 116 (Constant -> FALSE .)
    RPAREN          reduce using rule 116 (Constant -> FALSE .)
    COMMA           reduce using rule 116 (Constant -> FALSE .)


state 125

    (21) SuperExpr -> Expression . SuperExpr1
    (126) SuperExpr -> Expression . error SuperExpr1
    (22) SuperExpr1 -> . AND SuperExpr
    (23) SuperExpr1 -> . OR SuperExpr
    (24) SuperExpr1 -> . empty
    (121) empty -> .

    error           shift and go to state 172
    AND             shift and go to state 171
    OR              shift and go to state 174
    SEMI            reduce using rule 121 (empty -> .)
    RPAREN          reduce using rule 121 (empty -> .)
    COMMA           reduce using rule 121 (empty -> .)

    SuperExpr1                     shift and go to state 173
    empty                          shift and go to state 175

state 126

    (112) Constant -> ID .
    (63) Call -> ID . LPAREN Params RPAREN

    DIVIDE          reduce using rule 112 (Constant -> ID .)
    TIMES           reduce using rule 112 (Constant -> ID .)
    MINUS           reduce using rule 112 (Constant -> ID .)
    PLUS            reduce using rule 112 (Constant -> ID .)
    LESSTHAN        reduce using rule 112 (Constant -> ID .)
    GREATHAN        reduce using rule 112 (Constant -> ID .)
    DIFFERENT       reduce using rule 112 (Constant -> ID .)
    TWOEQUAL        reduce using rule 112 (Constant -> ID .)
    GREATEQUAL      reduce using rule 112 (Constant -> ID .)
    LESSEQUAL       reduce using rule 112 (Constant -> ID .)
    error           reduce using rule 112 (Constant -> ID .)
    AND             reduce using rule 112 (Constant -> ID .)
    OR              reduce using rule 112 (Constant -> ID .)
    SEMI            reduce using rule 112 (Constant -> ID .)
    RPAREN          reduce using rule 112 (Constant -> ID .)
    COMMA           reduce using rule 112 (Constant -> ID .)
    LPAREN          shift and go to state 141


state 127

    (47) Factor3 -> Constant .

    DIVIDE          reduce using rule 47 (Factor3 -> Constant .)
    TIMES           reduce using rule 47 (Factor3 -> Constant .)
    MINUS           reduce using rule 47 (Factor3 -> Constant .)
    PLUS            reduce using rule 47 (Factor3 -> Constant .)
    LESSTHAN        reduce using rule 47 (Factor3 -> Constant .)
    GREATHAN        reduce using rule 47 (Factor3 -> Constant .)
    DIFFERENT       reduce using rule 47 (Factor3 -> Constant .)
    TWOEQUAL        reduce using rule 47 (Factor3 -> Constant .)
    GREATEQUAL      reduce using rule 47 (Factor3 -> Constant .)
    LESSEQUAL       reduce using rule 47 (Factor3 -> Constant .)
    error           reduce using rule 47 (Factor3 -> Constant .)
    AND             reduce using rule 47 (Factor3 -> Constant .)
    OR              reduce using rule 47 (Factor3 -> Constant .)
    COMMA           reduce using rule 47 (Factor3 -> Constant .)
    RPAREN          reduce using rule 47 (Factor3 -> Constant .)
    SEMI            reduce using rule 47 (Factor3 -> Constant .)


state 128

    (109) Return -> RETURN RType .

    SEMI            reduce using rule 109 (Return -> RETURN RType .)


state 129

    (115) Constant -> CCONST .

    DIVIDE          reduce using rule 115 (Constant -> CCONST .)
    TIMES           reduce using rule 115 (Constant -> CCONST .)
    MINUS           reduce using rule 115 (Constant -> CCONST .)
    PLUS            reduce using rule 115 (Constant -> CCONST .)
    LESSTHAN        reduce using rule 115 (Constant -> CCONST .)
    GREATHAN        reduce using rule 115 (Constant -> CCONST .)
    DIFFERENT       reduce using rule 115 (Constant -> CCONST .)
    TWOEQUAL        reduce using rule 115 (Constant -> CCONST .)
    GREATEQUAL      reduce using rule 115 (Constant -> CCONST .)
    LESSEQUAL       reduce using rule 115 (Constant -> CCONST .)
    error           reduce using rule 115 (Constant -> CCONST .)
    AND             reduce using rule 115 (Constant -> CCONST .)
    OR              reduce using rule 115 (Constant -> CCONST .)
    SEMI            reduce using rule 115 (Constant -> CCONST .)
    RPAREN          reduce using rule 115 (Constant -> CCONST .)
    COMMA           reduce using rule 115 (Constant -> CCONST .)


state 130

    (64) Read -> READ LPAREN . Type COMMA ID RPAREN
    (65) Type -> . Primitive
    (66) Type -> . STRING
    (81) Primitive -> . INT
    (82) Primitive -> . FLOAT
    (83) Primitive -> . BOOL
    (84) Primitive -> . CHAR

    STRING          shift and go to state 177
    INT             shift and go to state 2
    FLOAT           shift and go to state 3
    BOOL            shift and go to state 6
    CHAR            shift and go to state 4

    Primitive                      shift and go to state 176
    Type                           shift and go to state 178

state 131

    (67) Print -> PRINT LPAREN . Params3 RPAREN
    (54) Params3 -> . SuperExpr Params4
    (55) Params3 -> . STRING Params4
    (21) SuperExpr -> . Expression SuperExpr1
    (126) SuperExpr -> . Expression error SuperExpr1
    (25) Expression -> . Expr Expression1
    (33) Expr -> . Term Expr1
    (37) Term -> . Factor Term1
    (41) Factor -> . LPAREN SuperExpr RPAREN
    (42) Factor -> . Factor1
    (43) Factor1 -> . Factor2
    (44) Factor1 -> . Factor3
    (45) Factor2 -> . MINUS Factor3
    (46) Factor2 -> . PLUS Factor3
    (47) Factor3 -> . Constant
    (48) Factor3 -> . Call
    (112) Constant -> . ID
    (113) Constant -> . FCONST
    (114) Constant -> . ICONST
    (115) Constant -> . CCONST
    (116) Constant -> . FALSE
    (117) Constant -> . TRUE
    (63) Call -> . ID LPAREN Params RPAREN

    STRING          shift and go to state 181
    LPAREN          shift and go to state 123
    MINUS           shift and go to state 113
    PLUS            shift and go to state 115
    ID              shift and go to state 126
    FCONST          shift and go to state 114
    ICONST          shift and go to state 122
    CCONST          shift and go to state 129
    FALSE           shift and go to state 124
    TRUE            shift and go to state 112

    Params3                        shift and go to state 179
    Constant                       shift and go to state 127
    Factor3                        shift and go to state 120
    Factor2                        shift and go to state 119
    SuperExpr                      shift and go to state 180
    Factor                         shift and go to state 111
    Term                           shift and go to state 117
    Call                           shift and go to state 110
    Expr                           shift and go to state 121
    Expression                     shift and go to state 125
    Factor1                        shift and go to state 118

state 132

    (77) Square -> SQUARE LPAREN . SuperExpr RPAREN
    (21) SuperExpr -> . Expression SuperExpr1
    (126) SuperExpr -> . Expression error SuperExpr1
    (25) Expression -> . Expr Expression1
    (33) Expr -> . Term Expr1
    (37) Term -> . Factor Term1
    (41) Factor -> . LPAREN SuperExpr RPAREN
    (42) Factor -> . Factor1
    (43) Factor1 -> . Factor2
    (44) Factor1 -> . Factor3
    (45) Factor2 -> . MINUS Factor3
    (46) Factor2 -> . PLUS Factor3
    (47) Factor3 -> . Constant
    (48) Factor3 -> . Call
    (112) Constant -> . ID
    (113) Constant -> . FCONST
    (114) Constant -> . ICONST
    (115) Constant -> . CCONST
    (116) Constant -> . FALSE
    (117) Constant -> . TRUE
    (63) Call -> . ID LPAREN Params RPAREN

    LPAREN          shift and go to state 123
    MINUS           shift and go to state 113
    PLUS            shift and go to state 115
    ID              shift and go to state 126
    FCONST          shift and go to state 114
    ICONST          shift and go to state 122
    CCONST          shift and go to state 129
    FALSE           shift and go to state 124
    TRUE            shift and go to state 112

    Term                           shift and go to state 117
    Constant                       shift and go to state 127
    Factor1                        shift and go to state 118
    Factor3                        shift and go to state 120
    Factor2                        shift and go to state 119
    SuperExpr                      shift and go to state 182
    Factor                         shift and go to state 111
    Call                           shift and go to state 110
    Expr                           shift and go to state 121
    Expression                     shift and go to state 125

state 133

    (72) Home -> HOME LPAREN . RPAREN

    RPAREN          shift and go to state 183


state 134

    (74) Rotate -> RT LPAREN . SuperExpr RPAREN
    (21) SuperExpr -> . Expression SuperExpr1
    (126) SuperExpr -> . Expression error SuperExpr1
    (25) Expression -> . Expr Expression1
    (33) Expr -> . Term Expr1
    (37) Term -> . Factor Term1
    (41) Factor -> . LPAREN SuperExpr RPAREN
    (42) Factor -> . Factor1
    (43) Factor1 -> . Factor2
    (44) Factor1 -> . Factor3
    (45) Factor2 -> . MINUS Factor3
    (46) Factor2 -> . PLUS Factor3
    (47) Factor3 -> . Constant
    (48) Factor3 -> . Call
    (112) Constant -> . ID
    (113) Constant -> . FCONST
    (114) Constant -> . ICONST
    (115) Constant -> . CCONST
    (116) Constant -> . FALSE
    (117) Constant -> . TRUE
    (63) Call -> . ID LPAREN Params RPAREN

    LPAREN          shift and go to state 123
    MINUS           shift and go to state 113
    PLUS            shift and go to state 115
    ID              shift and go to state 126
    FCONST          shift and go to state 114
    ICONST          shift and go to state 122
    CCONST          shift and go to state 129
    FALSE           shift and go to state 124
    TRUE            shift and go to state 112

    Term                           shift and go to state 117
    Constant                       shift and go to state 127
    Factor1                        shift and go to state 118
    Factor3                        shift and go to state 120
    Factor2                        shift and go to state 119
    SuperExpr                      shift and go to state 184
    Factor                         shift and go to state 111
    Call                           shift and go to state 110
    Expr                           shift and go to state 121
    Expression                     shift and go to state 125

state 135

    (71) PenUp -> PU LPAREN . RPAREN

    RPAREN          shift and go to state 185


state 136

    (76) Arc -> ARC LPAREN . SuperExpr COMMA SuperExpr RPAREN
    (21) SuperExpr -> . Expression SuperExpr1
    (126) SuperExpr -> . Expression error SuperExpr1
    (25) Expression -> . Expr Expression1
    (33) Expr -> . Term Expr1
    (37) Term -> . Factor Term1
    (41) Factor -> . LPAREN SuperExpr RPAREN
    (42) Factor -> . Factor1
    (43) Factor1 -> . Factor2
    (44) Factor1 -> . Factor3
    (45) Factor2 -> . MINUS Factor3
    (46) Factor2 -> . PLUS Factor3
    (47) Factor3 -> . Constant
    (48) Factor3 -> . Call
    (112) Constant -> . ID
    (113) Constant -> . FCONST
    (114) Constant -> . ICONST
    (115) Constant -> . CCONST
    (116) Constant -> . FALSE
    (117) Constant -> . TRUE
    (63) Call -> . ID LPAREN Params RPAREN

    LPAREN          shift and go to state 123
    MINUS           shift and go to state 113
    PLUS            shift and go to state 115
    ID              shift and go to state 126
    FCONST          shift and go to state 114
    ICONST          shift and go to state 122
    CCONST          shift and go to state 129
    FALSE           shift and go to state 124
    TRUE            shift and go to state 112

    Term                           shift and go to state 117
    Constant                       shift and go to state 127
    Factor1                        shift and go to state 118
    Factor3                        shift and go to state 120
    Factor2                        shift and go to state 119
    SuperExpr                      shift and go to state 186
    Factor                         shift and go to state 111
    Call                           shift and go to state 110
    Expr                           shift and go to state 121
    Expression                     shift and go to state 125

state 137

    (70) PenDown -> PD LPAREN . RPAREN

    RPAREN          shift and go to state 187


state 138

    (68) Brush -> BRUSH LPAREN . Color COMMA SuperExpr RPAREN
    (69) Color -> . COLOR LPAREN SuperExpr COMMA SuperExpr COMMA SuperExpr RPAREN

    COLOR           shift and go to state 97

    Color                          shift and go to state 188

state 139

    (17) FBlock -> LBRACE Local_Declaration Instruction RBRACE .

    VOID            reduce using rule 17 (FBlock -> LBRACE Local_Declaration Instruction RBRACE .)
    INT             reduce using rule 17 (FBlock -> LBRACE Local_Declaration Instruction RBRACE .)
    FLOAT           reduce using rule 17 (FBlock -> LBRACE Local_Declaration Instruction RBRACE .)
    BOOL            reduce using rule 17 (FBlock -> LBRACE Local_Declaration Instruction RBRACE .)
    CHAR            reduce using rule 17 (FBlock -> LBRACE Local_Declaration Instruction RBRACE .)
    MAIN            reduce using rule 17 (FBlock -> LBRACE Local_Declaration Instruction RBRACE .)
    $end            reduce using rule 17 (FBlock -> LBRACE Local_Declaration Instruction RBRACE .)


state 140

    (59) Assign -> ID EQUAL . Assign1
    (60) Assign1 -> . SuperExpr
    (61) Assign1 -> . Call
    (62) Assign1 -> . STRING
    (21) SuperExpr -> . Expression SuperExpr1
    (126) SuperExpr -> . Expression error SuperExpr1
    (63) Call -> . ID LPAREN Params RPAREN
    (25) Expression -> . Expr Expression1
    (33) Expr -> . Term Expr1
    (37) Term -> . Factor Term1
    (41) Factor -> . LPAREN SuperExpr RPAREN
    (42) Factor -> . Factor1
    (43) Factor1 -> . Factor2
    (44) Factor1 -> . Factor3
    (45) Factor2 -> . MINUS Factor3
    (46) Factor2 -> . PLUS Factor3
    (47) Factor3 -> . Constant
    (48) Factor3 -> . Call
    (112) Constant -> . ID
    (113) Constant -> . FCONST
    (114) Constant -> . ICONST
    (115) Constant -> . CCONST
    (116) Constant -> . FALSE
    (117) Constant -> . TRUE

    STRING          shift and go to state 191
    ID              shift and go to state 192
    LPAREN          shift and go to state 123
    MINUS           shift and go to state 113
    PLUS            shift and go to state 115
    FCONST          shift and go to state 114
    ICONST          shift and go to state 122
    CCONST          shift and go to state 129
    FALSE           shift and go to state 124
    TRUE            shift and go to state 112

    Term                           shift and go to state 117
    Constant                       shift and go to state 127
    Factor1                        shift and go to state 118
    Assign1                        shift and go to state 193
    Factor2                        shift and go to state 119
    SuperExpr                      shift and go to state 189
    Factor                         shift and go to state 111
    Factor3                        shift and go to state 120
    Expr                           shift and go to state 121
    Call                           shift and go to state 190
    Expression                     shift and go to state 125

state 141

    (63) Call -> ID LPAREN . Params RPAREN
    (49) Params -> . Params1
    (50) Params -> . empty
    (51) Params1 -> . SuperExpr Params2
    (121) empty -> .
    (21) SuperExpr -> . Expression SuperExpr1
    (126) SuperExpr -> . Expression error SuperExpr1
    (25) Expression -> . Expr Expression1
    (33) Expr -> . Term Expr1
    (37) Term -> . Factor Term1
    (41) Factor -> . LPAREN SuperExpr RPAREN
    (42) Factor -> . Factor1
    (43) Factor1 -> . Factor2
    (44) Factor1 -> . Factor3
    (45) Factor2 -> . MINUS Factor3
    (46) Factor2 -> . PLUS Factor3
    (47) Factor3 -> . Constant
    (48) Factor3 -> . Call
    (112) Constant -> . ID
    (113) Constant -> . FCONST
    (114) Constant -> . ICONST
    (115) Constant -> . CCONST
    (116) Constant -> . FALSE
    (117) Constant -> . TRUE
    (63) Call -> . ID LPAREN Params RPAREN

    RPAREN          reduce using rule 121 (empty -> .)
    LPAREN          shift and go to state 123
    MINUS           shift and go to state 113
    PLUS            shift and go to state 115
    ID              shift and go to state 126
    FCONST          shift and go to state 114
    ICONST          shift and go to state 122
    CCONST          shift and go to state 129
    FALSE           shift and go to state 124
    TRUE            shift and go to state 112

    Params1                        shift and go to state 194
    Term                           shift and go to state 117
    Constant                       shift and go to state 127
    Factor1                        shift and go to state 118
    Factor3                        shift and go to state 120
    Factor2                        shift and go to state 119
    SuperExpr                      shift and go to state 195
    Factor                         shift and go to state 111
    Params                         shift and go to state 196
    Expr                           shift and go to state 121
    Call                           shift and go to state 110
    Expression                     shift and go to state 125
    empty                          shift and go to state 197

state 142

    (18) Conditional -> IF LPAREN . SuperExpr RPAREN Block Else
    (21) SuperExpr -> . Expression SuperExpr1
    (126) SuperExpr -> . Expression error SuperExpr1
    (25) Expression -> . Expr Expression1
    (33) Expr -> . Term Expr1
    (37) Term -> . Factor Term1
    (41) Factor -> . LPAREN SuperExpr RPAREN
    (42) Factor -> . Factor1
    (43) Factor1 -> . Factor2
    (44) Factor1 -> . Factor3
    (45) Factor2 -> . MINUS Factor3
    (46) Factor2 -> . PLUS Factor3
    (47) Factor3 -> . Constant
    (48) Factor3 -> . Call
    (112) Constant -> . ID
    (113) Constant -> . FCONST
    (114) Constant -> . ICONST
    (115) Constant -> . CCONST
    (116) Constant -> . FALSE
    (117) Constant -> . TRUE
    (63) Call -> . ID LPAREN Params RPAREN

    LPAREN          shift and go to state 123
    MINUS           shift and go to state 113
    PLUS            shift and go to state 115
    ID              shift and go to state 126
    FCONST          shift and go to state 114
    ICONST          shift and go to state 122
    CCONST          shift and go to state 129
    FALSE           shift and go to state 124
    TRUE            shift and go to state 112

    Term                           shift and go to state 117
    Constant                       shift and go to state 127
    Factor1                        shift and go to state 118
    Factor3                        shift and go to state 120
    Factor2                        shift and go to state 119
    SuperExpr                      shift and go to state 198
    Factor                         shift and go to state 111
    Call                           shift and go to state 110
    Expr                           shift and go to state 121
    Expression                     shift and go to state 125

state 143

    (73) Forward -> FD LPAREN . SuperExpr RPAREN
    (21) SuperExpr -> . Expression SuperExpr1
    (126) SuperExpr -> . Expression error SuperExpr1
    (25) Expression -> . Expr Expression1
    (33) Expr -> . Term Expr1
    (37) Term -> . Factor Term1
    (41) Factor -> . LPAREN SuperExpr RPAREN
    (42) Factor -> . Factor1
    (43) Factor1 -> . Factor2
    (44) Factor1 -> . Factor3
    (45) Factor2 -> . MINUS Factor3
    (46) Factor2 -> . PLUS Factor3
    (47) Factor3 -> . Constant
    (48) Factor3 -> . Call
    (112) Constant -> . ID
    (113) Constant -> . FCONST
    (114) Constant -> . ICONST
    (115) Constant -> . CCONST
    (116) Constant -> . FALSE
    (117) Constant -> . TRUE
    (63) Call -> . ID LPAREN Params RPAREN

    LPAREN          shift and go to state 123
    MINUS           shift and go to state 113
    PLUS            shift and go to state 115
    ID              shift and go to state 126
    FCONST          shift and go to state 114
    ICONST          shift and go to state 122
    CCONST          shift and go to state 129
    FALSE           shift and go to state 124
    TRUE            shift and go to state 112

    Term                           shift and go to state 117
    Constant                       shift and go to state 127
    Factor1                        shift and go to state 118
    Factor3                        shift and go to state 120
    Factor2                        shift and go to state 119
    SuperExpr                      shift and go to state 199
    Factor                         shift and go to state 111
    Call                           shift and go to state 110
    Expr                           shift and go to state 121
    Expression                     shift and go to state 125

state 144

    (69) Color -> COLOR LPAREN . SuperExpr COMMA SuperExpr COMMA SuperExpr RPAREN
    (21) SuperExpr -> . Expression SuperExpr1
    (126) SuperExpr -> . Expression error SuperExpr1
    (25) Expression -> . Expr Expression1
    (33) Expr -> . Term Expr1
    (37) Term -> . Factor Term1
    (41) Factor -> . LPAREN SuperExpr RPAREN
    (42) Factor -> . Factor1
    (43) Factor1 -> . Factor2
    (44) Factor1 -> . Factor3
    (45) Factor2 -> . MINUS Factor3
    (46) Factor2 -> . PLUS Factor3
    (47) Factor3 -> . Constant
    (48) Factor3 -> . Call
    (112) Constant -> . ID
    (113) Constant -> . FCONST
    (114) Constant -> . ICONST
    (115) Constant -> . CCONST
    (116) Constant -> . FALSE
    (117) Constant -> . TRUE
    (63) Call -> . ID LPAREN Params RPAREN

    LPAREN          shift and go to state 123
    MINUS           shift and go to state 113
    PLUS            shift and go to state 115
    ID              shift and go to state 126
    FCONST          shift and go to state 114
    ICONST          shift and go to state 122
    CCONST          shift and go to state 129
    FALSE           shift and go to state 124
    TRUE            shift and go to state 112

    Term                           shift and go to state 117
    Constant                       shift and go to state 127
    Factor1                        shift and go to state 118
    Factor3                        shift and go to state 120
    Factor2                        shift and go to state 119
    SuperExpr                      shift and go to state 200
    Factor                         shift and go to state 111
    Call                           shift and go to state 110
    Expr                           shift and go to state 121
    Expression                     shift and go to state 125

state 145

    (124) FBlock -> LBRACE Local_Declaration error RBRACE .

    VOID            reduce using rule 124 (FBlock -> LBRACE Local_Declaration error RBRACE .)
    INT             reduce using rule 124 (FBlock -> LBRACE Local_Declaration error RBRACE .)
    FLOAT           reduce using rule 124 (FBlock -> LBRACE Local_Declaration error RBRACE .)
    BOOL            reduce using rule 124 (FBlock -> LBRACE Local_Declaration error RBRACE .)
    CHAR            reduce using rule 124 (FBlock -> LBRACE Local_Declaration error RBRACE .)
    MAIN            reduce using rule 124 (FBlock -> LBRACE Local_Declaration error RBRACE .)
    $end            reduce using rule 124 (FBlock -> LBRACE Local_Declaration error RBRACE .)


state 146

    (75) Circle -> CIRCLE LPAREN . SuperExpr RPAREN
    (125) Circle -> CIRCLE LPAREN . error RPAREN
    (21) SuperExpr -> . Expression SuperExpr1
    (126) SuperExpr -> . Expression error SuperExpr1
    (25) Expression -> . Expr Expression1
    (33) Expr -> . Term Expr1
    (37) Term -> . Factor Term1
    (41) Factor -> . LPAREN SuperExpr RPAREN
    (42) Factor -> . Factor1
    (43) Factor1 -> . Factor2
    (44) Factor1 -> . Factor3
    (45) Factor2 -> . MINUS Factor3
    (46) Factor2 -> . PLUS Factor3
    (47) Factor3 -> . Constant
    (48) Factor3 -> . Call
    (112) Constant -> . ID
    (113) Constant -> . FCONST
    (114) Constant -> . ICONST
    (115) Constant -> . CCONST
    (116) Constant -> . FALSE
    (117) Constant -> . TRUE
    (63) Call -> . ID LPAREN Params RPAREN

    error           shift and go to state 202
    LPAREN          shift and go to state 123
    MINUS           shift and go to state 113
    PLUS            shift and go to state 115
    ID              shift and go to state 126
    FCONST          shift and go to state 114
    ICONST          shift and go to state 122
    CCONST          shift and go to state 129
    FALSE           shift and go to state 124
    TRUE            shift and go to state 112

    Term                           shift and go to state 117
    Constant                       shift and go to state 127
    Factor1                        shift and go to state 118
    Factor3                        shift and go to state 120
    Factor2                        shift and go to state 119
    SuperExpr                      shift and go to state 201
    Factor                         shift and go to state 111
    Call                           shift and go to state 110
    Expr                           shift and go to state 121
    Expression                     shift and go to state 125

state 147

    (90) Instruction -> Instruction1 SEMI . Instruction
    (90) Instruction -> . Instruction1 SEMI Instruction
    (91) Instruction -> . empty
    (92) Instruction1 -> . Loop
    (93) Instruction1 -> . Conditional
    (94) Instruction1 -> . Assign
    (95) Instruction1 -> . Call
    (96) Instruction1 -> . Brush
    (97) Instruction1 -> . Read
    (98) Instruction1 -> . Print
    (99) Instruction1 -> . PenDown
    (100) Instruction1 -> . PenUp
    (101) Instruction1 -> . Home
    (102) Instruction1 -> . Forward
    (103) Instruction1 -> . Rotate
    (104) Instruction1 -> . Color
    (105) Instruction1 -> . Circle
    (106) Instruction1 -> . Arc
    (107) Instruction1 -> . Square
    (108) Instruction1 -> . Return
    (121) empty -> .
    (58) Loop -> . LOOP LPAREN SuperExpr RPAREN Block
    (18) Conditional -> . IF LPAREN SuperExpr RPAREN Block Else
    (59) Assign -> . ID EQUAL Assign1
    (63) Call -> . ID LPAREN Params RPAREN
    (68) Brush -> . BRUSH LPAREN Color COMMA SuperExpr RPAREN
    (64) Read -> . READ LPAREN Type COMMA ID RPAREN
    (67) Print -> . PRINT LPAREN Params3 RPAREN
    (70) PenDown -> . PD LPAREN RPAREN
    (71) PenUp -> . PU LPAREN RPAREN
    (72) Home -> . HOME LPAREN RPAREN
    (73) Forward -> . FD LPAREN SuperExpr RPAREN
    (74) Rotate -> . RT LPAREN SuperExpr RPAREN
    (69) Color -> . COLOR LPAREN SuperExpr COMMA SuperExpr COMMA SuperExpr RPAREN
    (75) Circle -> . CIRCLE LPAREN SuperExpr RPAREN
    (125) Circle -> . CIRCLE LPAREN error RPAREN
    (76) Arc -> . ARC LPAREN SuperExpr COMMA SuperExpr RPAREN
    (77) Square -> . SQUARE LPAREN SuperExpr RPAREN
    (109) Return -> . RETURN RType

    RBRACE          reduce using rule 121 (empty -> .)
    LOOP            shift and go to state 104
    IF              shift and go to state 93
    ID              shift and go to state 90
    BRUSH           shift and go to state 86
    READ            shift and go to state 70
    PRINT           shift and go to state 71
    PD              shift and go to state 84
    PU              shift and go to state 81
    HOME            shift and go to state 77
    FD              shift and go to state 94
    RT              shift and go to state 79
    COLOR           shift and go to state 97
    CIRCLE          shift and go to state 102
    ARC             shift and go to state 83
    SQUARE          shift and go to state 74
    RETURN          shift and go to state 68

    PenUp                          shift and go to state 69
    Print                          shift and go to state 72
    PenDown                        shift and go to state 73
    Call                           shift and go to state 75
    Forward                        shift and go to state 76
    Circle                         shift and go to state 78
    Return                         shift and go to state 80
    Read                           shift and go to state 82
    Loop                           shift and go to state 92
    empty                          shift and go to state 85
    Rotate                         shift and go to state 87
    Instruction                    shift and go to state 203
    Assign                         shift and go to state 91
    Square                         shift and go to state 89
    Color                          shift and go to state 95
    Conditional                    shift and go to state 96
    Arc                            shift and go to state 98
    Brush                          shift and go to state 99
    Home                           shift and go to state 101
    Instruction1                   shift and go to state 103

state 148

    (58) Loop -> LOOP LPAREN . SuperExpr RPAREN Block
    (21) SuperExpr -> . Expression SuperExpr1
    (126) SuperExpr -> . Expression error SuperExpr1
    (25) Expression -> . Expr Expression1
    (33) Expr -> . Term Expr1
    (37) Term -> . Factor Term1
    (41) Factor -> . LPAREN SuperExpr RPAREN
    (42) Factor -> . Factor1
    (43) Factor1 -> . Factor2
    (44) Factor1 -> . Factor3
    (45) Factor2 -> . MINUS Factor3
    (46) Factor2 -> . PLUS Factor3
    (47) Factor3 -> . Constant
    (48) Factor3 -> . Call
    (112) Constant -> . ID
    (113) Constant -> . FCONST
    (114) Constant -> . ICONST
    (115) Constant -> . CCONST
    (116) Constant -> . FALSE
    (117) Constant -> . TRUE
    (63) Call -> . ID LPAREN Params RPAREN

    LPAREN          shift and go to state 123
    MINUS           shift and go to state 113
    PLUS            shift and go to state 115
    ID              shift and go to state 126
    FCONST          shift and go to state 114
    ICONST          shift and go to state 122
    CCONST          shift and go to state 129
    FALSE           shift and go to state 124
    TRUE            shift and go to state 112

    Term                           shift and go to state 117
    Constant                       shift and go to state 127
    Factor1                        shift and go to state 118
    Factor3                        shift and go to state 120
    Factor2                        shift and go to state 119
    SuperExpr                      shift and go to state 204
    Factor                         shift and go to state 111
    Call                           shift and go to state 110
    Expr                           shift and go to state 121
    Expression                     shift and go to state 125

state 149

    (15) RFunction -> Primitive ID LPAREN ParamList RPAREN Seen_Function FBlock Function .

    MAIN            reduce using rule 15 (RFunction -> Primitive ID LPAREN ParamList RPAREN Seen_Function FBlock Function .)


state 150

    (14) Function1 -> VOID ID LPAREN ParamList RPAREN Seen_Function FBlock Function .

    MAIN            reduce using rule 14 (Function1 -> VOID ID LPAREN ParamList RPAREN Seen_Function FBlock Function .)


state 151

    (7) Local_Declaration -> Primitive ID Array Array . Seen_Variable SEMI Local_Declaration
    (120) Seen_Variable -> .

    SEMI            reduce using rule 120 (Seen_Variable -> .)

    Seen_Variable                  shift and go to state 205

state 152

    (38) Term1 -> DIVIDE . Term
    (127) Term1 -> DIVIDE . error Term
    (37) Term -> . Factor Term1
    (41) Factor -> . LPAREN SuperExpr RPAREN
    (42) Factor -> . Factor1
    (43) Factor1 -> . Factor2
    (44) Factor1 -> . Factor3
    (45) Factor2 -> . MINUS Factor3
    (46) Factor2 -> . PLUS Factor3
    (47) Factor3 -> . Constant
    (48) Factor3 -> . Call
    (112) Constant -> . ID
    (113) Constant -> . FCONST
    (114) Constant -> . ICONST
    (115) Constant -> . CCONST
    (116) Constant -> . FALSE
    (117) Constant -> . TRUE
    (63) Call -> . ID LPAREN Params RPAREN

    error           shift and go to state 207
    LPAREN          shift and go to state 123
    MINUS           shift and go to state 113
    PLUS            shift and go to state 115
    ID              shift and go to state 126
    FCONST          shift and go to state 114
    ICONST          shift and go to state 122
    CCONST          shift and go to state 129
    FALSE           shift and go to state 124
    TRUE            shift and go to state 112

    Term                           shift and go to state 206
    Constant                       shift and go to state 127
    Factor1                        shift and go to state 118
    Factor2                        shift and go to state 119
    Factor3                        shift and go to state 120
    Call                           shift and go to state 110
    Factor                         shift and go to state 111

state 153

    (37) Term -> Factor Term1 .

    MINUS           reduce using rule 37 (Term -> Factor Term1 .)
    PLUS            reduce using rule 37 (Term -> Factor Term1 .)
    LESSTHAN        reduce using rule 37 (Term -> Factor Term1 .)
    GREATHAN        reduce using rule 37 (Term -> Factor Term1 .)
    DIFFERENT       reduce using rule 37 (Term -> Factor Term1 .)
    TWOEQUAL        reduce using rule 37 (Term -> Factor Term1 .)
    GREATEQUAL      reduce using rule 37 (Term -> Factor Term1 .)
    LESSEQUAL       reduce using rule 37 (Term -> Factor Term1 .)
    error           reduce using rule 37 (Term -> Factor Term1 .)
    AND             reduce using rule 37 (Term -> Factor Term1 .)
    OR              reduce using rule 37 (Term -> Factor Term1 .)
    SEMI            reduce using rule 37 (Term -> Factor Term1 .)
    RPAREN          reduce using rule 37 (Term -> Factor Term1 .)
    COMMA           reduce using rule 37 (Term -> Factor Term1 .)


state 154

    (39) Term1 -> TIMES . Term
    (128) Term1 -> TIMES . error Term
    (37) Term -> . Factor Term1
    (41) Factor -> . LPAREN SuperExpr RPAREN
    (42) Factor -> . Factor1
    (43) Factor1 -> . Factor2
    (44) Factor1 -> . Factor3
    (45) Factor2 -> . MINUS Factor3
    (46) Factor2 -> . PLUS Factor3
    (47) Factor3 -> . Constant
    (48) Factor3 -> . Call
    (112) Constant -> . ID
    (113) Constant -> . FCONST
    (114) Constant -> . ICONST
    (115) Constant -> . CCONST
    (116) Constant -> . FALSE
    (117) Constant -> . TRUE
    (63) Call -> . ID LPAREN Params RPAREN

    error           shift and go to state 209
    LPAREN          shift and go to state 123
    MINUS           shift and go to state 113
    PLUS            shift and go to state 115
    ID              shift and go to state 126
    FCONST          shift and go to state 114
    ICONST          shift and go to state 122
    CCONST          shift and go to state 129
    FALSE           shift and go to state 124
    TRUE            shift and go to state 112

    Term                           shift and go to state 208
    Constant                       shift and go to state 127
    Factor1                        shift and go to state 118
    Factor2                        shift and go to state 119
    Factor3                        shift and go to state 120
    Call                           shift and go to state 110
    Factor                         shift and go to state 111

state 155

    (40) Term1 -> empty .

    MINUS           reduce using rule 40 (Term1 -> empty .)
    PLUS            reduce using rule 40 (Term1 -> empty .)
    LESSTHAN        reduce using rule 40 (Term1 -> empty .)
    GREATHAN        reduce using rule 40 (Term1 -> empty .)
    DIFFERENT       reduce using rule 40 (Term1 -> empty .)
    TWOEQUAL        reduce using rule 40 (Term1 -> empty .)
    GREATEQUAL      reduce using rule 40 (Term1 -> empty .)
    LESSEQUAL       reduce using rule 40 (Term1 -> empty .)
    error           reduce using rule 40 (Term1 -> empty .)
    AND             reduce using rule 40 (Term1 -> empty .)
    OR              reduce using rule 40 (Term1 -> empty .)
    SEMI            reduce using rule 40 (Term1 -> empty .)
    RPAREN          reduce using rule 40 (Term1 -> empty .)
    COMMA           reduce using rule 40 (Term1 -> empty .)


state 156

    (45) Factor2 -> MINUS Factor3 .

    DIVIDE          reduce using rule 45 (Factor2 -> MINUS Factor3 .)
    TIMES           reduce using rule 45 (Factor2 -> MINUS Factor3 .)
    MINUS           reduce using rule 45 (Factor2 -> MINUS Factor3 .)
    PLUS            reduce using rule 45 (Factor2 -> MINUS Factor3 .)
    LESSTHAN        reduce using rule 45 (Factor2 -> MINUS Factor3 .)
    GREATHAN        reduce using rule 45 (Factor2 -> MINUS Factor3 .)
    DIFFERENT       reduce using rule 45 (Factor2 -> MINUS Factor3 .)
    TWOEQUAL        reduce using rule 45 (Factor2 -> MINUS Factor3 .)
    GREATEQUAL      reduce using rule 45 (Factor2 -> MINUS Factor3 .)
    LESSEQUAL       reduce using rule 45 (Factor2 -> MINUS Factor3 .)
    error           reduce using rule 45 (Factor2 -> MINUS Factor3 .)
    AND             reduce using rule 45 (Factor2 -> MINUS Factor3 .)
    OR              reduce using rule 45 (Factor2 -> MINUS Factor3 .)
    SEMI            reduce using rule 45 (Factor2 -> MINUS Factor3 .)
    RPAREN          reduce using rule 45 (Factor2 -> MINUS Factor3 .)
    COMMA           reduce using rule 45 (Factor2 -> MINUS Factor3 .)


state 157

    (46) Factor2 -> PLUS Factor3 .

    DIVIDE          reduce using rule 46 (Factor2 -> PLUS Factor3 .)
    TIMES           reduce using rule 46 (Factor2 -> PLUS Factor3 .)
    MINUS           reduce using rule 46 (Factor2 -> PLUS Factor3 .)
    PLUS            reduce using rule 46 (Factor2 -> PLUS Factor3 .)
    LESSTHAN        reduce using rule 46 (Factor2 -> PLUS Factor3 .)
    GREATHAN        reduce using rule 46 (Factor2 -> PLUS Factor3 .)
    DIFFERENT       reduce using rule 46 (Factor2 -> PLUS Factor3 .)
    TWOEQUAL        reduce using rule 46 (Factor2 -> PLUS Factor3 .)
    GREATEQUAL      reduce using rule 46 (Factor2 -> PLUS Factor3 .)
    LESSEQUAL       reduce using rule 46 (Factor2 -> PLUS Factor3 .)
    error           reduce using rule 46 (Factor2 -> PLUS Factor3 .)
    AND             reduce using rule 46 (Factor2 -> PLUS Factor3 .)
    OR              reduce using rule 46 (Factor2 -> PLUS Factor3 .)
    SEMI            reduce using rule 46 (Factor2 -> PLUS Factor3 .)
    RPAREN          reduce using rule 46 (Factor2 -> PLUS Factor3 .)
    COMMA           reduce using rule 46 (Factor2 -> PLUS Factor3 .)


state 158

    (33) Expr -> Term Expr1 .

    error           reduce using rule 33 (Expr -> Term Expr1 .)
    AND             reduce using rule 33 (Expr -> Term Expr1 .)
    OR              reduce using rule 33 (Expr -> Term Expr1 .)
    SEMI            reduce using rule 33 (Expr -> Term Expr1 .)
    RPAREN          reduce using rule 33 (Expr -> Term Expr1 .)
    COMMA           reduce using rule 33 (Expr -> Term Expr1 .)
    LESSTHAN        reduce using rule 33 (Expr -> Term Expr1 .)
    GREATHAN        reduce using rule 33 (Expr -> Term Expr1 .)
    DIFFERENT       reduce using rule 33 (Expr -> Term Expr1 .)
    TWOEQUAL        reduce using rule 33 (Expr -> Term Expr1 .)
    GREATEQUAL      reduce using rule 33 (Expr -> Term Expr1 .)
    LESSEQUAL       reduce using rule 33 (Expr -> Term Expr1 .)


state 159

    (35) Expr1 -> PLUS . Expr
    (33) Expr -> . Term Expr1
    (37) Term -> . Factor Term1
    (41) Factor -> . LPAREN SuperExpr RPAREN
    (42) Factor -> . Factor1
    (43) Factor1 -> . Factor2
    (44) Factor1 -> . Factor3
    (45) Factor2 -> . MINUS Factor3
    (46) Factor2 -> . PLUS Factor3
    (47) Factor3 -> . Constant
    (48) Factor3 -> . Call
    (112) Constant -> . ID
    (113) Constant -> . FCONST
    (114) Constant -> . ICONST
    (115) Constant -> . CCONST
    (116) Constant -> . FALSE
    (117) Constant -> . TRUE
    (63) Call -> . ID LPAREN Params RPAREN

    LPAREN          shift and go to state 123
    MINUS           shift and go to state 113
    PLUS            shift and go to state 115
    ID              shift and go to state 126
    FCONST          shift and go to state 114
    ICONST          shift and go to state 122
    CCONST          shift and go to state 129
    FALSE           shift and go to state 124
    TRUE            shift and go to state 112

    Term                           shift and go to state 117
    Constant                       shift and go to state 127
    Factor1                        shift and go to state 118
    Factor3                        shift and go to state 120
    Factor2                        shift and go to state 119
    Expr                           shift and go to state 210
    Factor                         shift and go to state 111
    Call                           shift and go to state 110

state 160

    (34) Expr1 -> MINUS . Expr
    (33) Expr -> . Term Expr1
    (37) Term -> . Factor Term1
    (41) Factor -> . LPAREN SuperExpr RPAREN
    (42) Factor -> . Factor1
    (43) Factor1 -> . Factor2
    (44) Factor1 -> . Factor3
    (45) Factor2 -> . MINUS Factor3
    (46) Factor2 -> . PLUS Factor3
    (47) Factor3 -> . Constant
    (48) Factor3 -> . Call
    (112) Constant -> . ID
    (113) Constant -> . FCONST
    (114) Constant -> . ICONST
    (115) Constant -> . CCONST
    (116) Constant -> . FALSE
    (117) Constant -> . TRUE
    (63) Call -> . ID LPAREN Params RPAREN

    LPAREN          shift and go to state 123
    MINUS           shift and go to state 113
    PLUS            shift and go to state 115
    ID              shift and go to state 126
    FCONST          shift and go to state 114
    ICONST          shift and go to state 122
    CCONST          shift and go to state 129
    FALSE           shift and go to state 124
    TRUE            shift and go to state 112

    Term                           shift and go to state 117
    Constant                       shift and go to state 127
    Factor1                        shift and go to state 118
    Factor3                        shift and go to state 120
    Factor2                        shift and go to state 119
    Expr                           shift and go to state 211
    Factor                         shift and go to state 111
    Call                           shift and go to state 110

state 161

    (36) Expr1 -> empty .

    LESSTHAN        reduce using rule 36 (Expr1 -> empty .)
    GREATHAN        reduce using rule 36 (Expr1 -> empty .)
    DIFFERENT       reduce using rule 36 (Expr1 -> empty .)
    TWOEQUAL        reduce using rule 36 (Expr1 -> empty .)
    GREATEQUAL      reduce using rule 36 (Expr1 -> empty .)
    LESSEQUAL       reduce using rule 36 (Expr1 -> empty .)
    error           reduce using rule 36 (Expr1 -> empty .)
    AND             reduce using rule 36 (Expr1 -> empty .)
    OR              reduce using rule 36 (Expr1 -> empty .)
    SEMI            reduce using rule 36 (Expr1 -> empty .)
    RPAREN          reduce using rule 36 (Expr1 -> empty .)
    COMMA           reduce using rule 36 (Expr1 -> empty .)


state 162

    (28) Expression1 -> DIFFERENT . Expr
    (33) Expr -> . Term Expr1
    (37) Term -> . Factor Term1
    (41) Factor -> . LPAREN SuperExpr RPAREN
    (42) Factor -> . Factor1
    (43) Factor1 -> . Factor2
    (44) Factor1 -> . Factor3
    (45) Factor2 -> . MINUS Factor3
    (46) Factor2 -> . PLUS Factor3
    (47) Factor3 -> . Constant
    (48) Factor3 -> . Call
    (112) Constant -> . ID
    (113) Constant -> . FCONST
    (114) Constant -> . ICONST
    (115) Constant -> . CCONST
    (116) Constant -> . FALSE
    (117) Constant -> . TRUE
    (63) Call -> . ID LPAREN Params RPAREN

    LPAREN          shift and go to state 123
    MINUS           shift and go to state 113
    PLUS            shift and go to state 115
    ID              shift and go to state 126
    FCONST          shift and go to state 114
    ICONST          shift and go to state 122
    CCONST          shift and go to state 129
    FALSE           shift and go to state 124
    TRUE            shift and go to state 112

    Term                           shift and go to state 117
    Constant                       shift and go to state 127
    Factor1                        shift and go to state 118
    Factor3                        shift and go to state 120
    Factor2                        shift and go to state 119
    Expr                           shift and go to state 212
    Factor                         shift and go to state 111
    Call                           shift and go to state 110

state 163

    (27) Expression1 -> GREATHAN . Expr
    (33) Expr -> . Term Expr1
    (37) Term -> . Factor Term1
    (41) Factor -> . LPAREN SuperExpr RPAREN
    (42) Factor -> . Factor1
    (43) Factor1 -> . Factor2
    (44) Factor1 -> . Factor3
    (45) Factor2 -> . MINUS Factor3
    (46) Factor2 -> . PLUS Factor3
    (47) Factor3 -> . Constant
    (48) Factor3 -> . Call
    (112) Constant -> . ID
    (113) Constant -> . FCONST
    (114) Constant -> . ICONST
    (115) Constant -> . CCONST
    (116) Constant -> . FALSE
    (117) Constant -> . TRUE
    (63) Call -> . ID LPAREN Params RPAREN

    LPAREN          shift and go to state 123
    MINUS           shift and go to state 113
    PLUS            shift and go to state 115
    ID              shift and go to state 126
    FCONST          shift and go to state 114
    ICONST          shift and go to state 122
    CCONST          shift and go to state 129
    FALSE           shift and go to state 124
    TRUE            shift and go to state 112

    Term                           shift and go to state 117
    Constant                       shift and go to state 127
    Factor1                        shift and go to state 118
    Factor3                        shift and go to state 120
    Factor2                        shift and go to state 119
    Expr                           shift and go to state 213
    Factor                         shift and go to state 111
    Call                           shift and go to state 110

state 164

    (29) Expression1 -> TWOEQUAL . Expr
    (33) Expr -> . Term Expr1
    (37) Term -> . Factor Term1
    (41) Factor -> . LPAREN SuperExpr RPAREN
    (42) Factor -> . Factor1
    (43) Factor1 -> . Factor2
    (44) Factor1 -> . Factor3
    (45) Factor2 -> . MINUS Factor3
    (46) Factor2 -> . PLUS Factor3
    (47) Factor3 -> . Constant
    (48) Factor3 -> . Call
    (112) Constant -> . ID
    (113) Constant -> . FCONST
    (114) Constant -> . ICONST
    (115) Constant -> . CCONST
    (116) Constant -> . FALSE
    (117) Constant -> . TRUE
    (63) Call -> . ID LPAREN Params RPAREN

    LPAREN          shift and go to state 123
    MINUS           shift and go to state 113
    PLUS            shift and go to state 115
    ID              shift and go to state 126
    FCONST          shift and go to state 114
    ICONST          shift and go to state 122
    CCONST          shift and go to state 129
    FALSE           shift and go to state 124
    TRUE            shift and go to state 112

    Term                           shift and go to state 117
    Constant                       shift and go to state 127
    Factor1                        shift and go to state 118
    Factor3                        shift and go to state 120
    Factor2                        shift and go to state 119
    Expr                           shift and go to state 214
    Factor                         shift and go to state 111
    Call                           shift and go to state 110

state 165

    (30) Expression1 -> GREATEQUAL . Expr
    (33) Expr -> . Term Expr1
    (37) Term -> . Factor Term1
    (41) Factor -> . LPAREN SuperExpr RPAREN
    (42) Factor -> . Factor1
    (43) Factor1 -> . Factor2
    (44) Factor1 -> . Factor3
    (45) Factor2 -> . MINUS Factor3
    (46) Factor2 -> . PLUS Factor3
    (47) Factor3 -> . Constant
    (48) Factor3 -> . Call
    (112) Constant -> . ID
    (113) Constant -> . FCONST
    (114) Constant -> . ICONST
    (115) Constant -> . CCONST
    (116) Constant -> . FALSE
    (117) Constant -> . TRUE
    (63) Call -> . ID LPAREN Params RPAREN

    LPAREN          shift and go to state 123
    MINUS           shift and go to state 113
    PLUS            shift and go to state 115
    ID              shift and go to state 126
    FCONST          shift and go to state 114
    ICONST          shift and go to state 122
    CCONST          shift and go to state 129
    FALSE           shift and go to state 124
    TRUE            shift and go to state 112

    Term                           shift and go to state 117
    Constant                       shift and go to state 127
    Factor1                        shift and go to state 118
    Factor3                        shift and go to state 120
    Factor2                        shift and go to state 119
    Expr                           shift and go to state 215
    Factor                         shift and go to state 111
    Call                           shift and go to state 110

state 166

    (31) Expression1 -> LESSEQUAL . Expr
    (33) Expr -> . Term Expr1
    (37) Term -> . Factor Term1
    (41) Factor -> . LPAREN SuperExpr RPAREN
    (42) Factor -> . Factor1
    (43) Factor1 -> . Factor2
    (44) Factor1 -> . Factor3
    (45) Factor2 -> . MINUS Factor3
    (46) Factor2 -> . PLUS Factor3
    (47) Factor3 -> . Constant
    (48) Factor3 -> . Call
    (112) Constant -> . ID
    (113) Constant -> . FCONST
    (114) Constant -> . ICONST
    (115) Constant -> . CCONST
    (116) Constant -> . FALSE
    (117) Constant -> . TRUE
    (63) Call -> . ID LPAREN Params RPAREN

    LPAREN          shift and go to state 123
    MINUS           shift and go to state 113
    PLUS            shift and go to state 115
    ID              shift and go to state 126
    FCONST          shift and go to state 114
    ICONST          shift and go to state 122
    CCONST          shift and go to state 129
    FALSE           shift and go to state 124
    TRUE            shift and go to state 112

    Term                           shift and go to state 117
    Constant                       shift and go to state 127
    Factor1                        shift and go to state 118
    Factor3                        shift and go to state 120
    Factor2                        shift and go to state 119
    Expr                           shift and go to state 216
    Factor                         shift and go to state 111
    Call                           shift and go to state 110

state 167

    (26) Expression1 -> LESSTHAN . Expr
    (33) Expr -> . Term Expr1
    (37) Term -> . Factor Term1
    (41) Factor -> . LPAREN SuperExpr RPAREN
    (42) Factor -> . Factor1
    (43) Factor1 -> . Factor2
    (44) Factor1 -> . Factor3
    (45) Factor2 -> . MINUS Factor3
    (46) Factor2 -> . PLUS Factor3
    (47) Factor3 -> . Constant
    (48) Factor3 -> . Call
    (112) Constant -> . ID
    (113) Constant -> . FCONST
    (114) Constant -> . ICONST
    (115) Constant -> . CCONST
    (116) Constant -> . FALSE
    (117) Constant -> . TRUE
    (63) Call -> . ID LPAREN Params RPAREN

    LPAREN          shift and go to state 123
    MINUS           shift and go to state 113
    PLUS            shift and go to state 115
    ID              shift and go to state 126
    FCONST          shift and go to state 114
    ICONST          shift and go to state 122
    CCONST          shift and go to state 129
    FALSE           shift and go to state 124
    TRUE            shift and go to state 112

    Term                           shift and go to state 117
    Constant                       shift and go to state 127
    Factor1                        shift and go to state 118
    Factor3                        shift and go to state 120
    Factor2                        shift and go to state 119
    Expr                           shift and go to state 217
    Factor                         shift and go to state 111
    Call                           shift and go to state 110

state 168

    (25) Expression -> Expr Expression1 .

    error           reduce using rule 25 (Expression -> Expr Expression1 .)
    AND             reduce using rule 25 (Expression -> Expr Expression1 .)
    OR              reduce using rule 25 (Expression -> Expr Expression1 .)
    RPAREN          reduce using rule 25 (Expression -> Expr Expression1 .)
    SEMI            reduce using rule 25 (Expression -> Expr Expression1 .)
    COMMA           reduce using rule 25 (Expression -> Expr Expression1 .)


state 169

    (32) Expression1 -> empty .

    error           reduce using rule 32 (Expression1 -> empty .)
    AND             reduce using rule 32 (Expression1 -> empty .)
    OR              reduce using rule 32 (Expression1 -> empty .)
    SEMI            reduce using rule 32 (Expression1 -> empty .)
    RPAREN          reduce using rule 32 (Expression1 -> empty .)
    COMMA           reduce using rule 32 (Expression1 -> empty .)


state 170

    (41) Factor -> LPAREN SuperExpr . RPAREN

    RPAREN          shift and go to state 218


state 171

    (22) SuperExpr1 -> AND . SuperExpr
    (21) SuperExpr -> . Expression SuperExpr1
    (126) SuperExpr -> . Expression error SuperExpr1
    (25) Expression -> . Expr Expression1
    (33) Expr -> . Term Expr1
    (37) Term -> . Factor Term1
    (41) Factor -> . LPAREN SuperExpr RPAREN
    (42) Factor -> . Factor1
    (43) Factor1 -> . Factor2
    (44) Factor1 -> . Factor3
    (45) Factor2 -> . MINUS Factor3
    (46) Factor2 -> . PLUS Factor3
    (47) Factor3 -> . Constant
    (48) Factor3 -> . Call
    (112) Constant -> . ID
    (113) Constant -> . FCONST
    (114) Constant -> . ICONST
    (115) Constant -> . CCONST
    (116) Constant -> . FALSE
    (117) Constant -> . TRUE
    (63) Call -> . ID LPAREN Params RPAREN

    LPAREN          shift and go to state 123
    MINUS           shift and go to state 113
    PLUS            shift and go to state 115
    ID              shift and go to state 126
    FCONST          shift and go to state 114
    ICONST          shift and go to state 122
    CCONST          shift and go to state 129
    FALSE           shift and go to state 124
    TRUE            shift and go to state 112

    Term                           shift and go to state 117
    Constant                       shift and go to state 127
    Factor1                        shift and go to state 118
    Factor3                        shift and go to state 120
    Factor2                        shift and go to state 119
    SuperExpr                      shift and go to state 219
    Factor                         shift and go to state 111
    Call                           shift and go to state 110
    Expr                           shift and go to state 121
    Expression                     shift and go to state 125

state 172

    (126) SuperExpr -> Expression error . SuperExpr1
    (22) SuperExpr1 -> . AND SuperExpr
    (23) SuperExpr1 -> . OR SuperExpr
    (24) SuperExpr1 -> . empty
    (121) empty -> .

    AND             shift and go to state 171
    OR              shift and go to state 174
    SEMI            reduce using rule 121 (empty -> .)
    RPAREN          reduce using rule 121 (empty -> .)
    COMMA           reduce using rule 121 (empty -> .)

    SuperExpr1                     shift and go to state 220
    empty                          shift and go to state 175

state 173

    (21) SuperExpr -> Expression SuperExpr1 .

    COMMA           reduce using rule 21 (SuperExpr -> Expression SuperExpr1 .)
    RPAREN          reduce using rule 21 (SuperExpr -> Expression SuperExpr1 .)
    SEMI            reduce using rule 21 (SuperExpr -> Expression SuperExpr1 .)


state 174

    (23) SuperExpr1 -> OR . SuperExpr
    (21) SuperExpr -> . Expression SuperExpr1
    (126) SuperExpr -> . Expression error SuperExpr1
    (25) Expression -> . Expr Expression1
    (33) Expr -> . Term Expr1
    (37) Term -> . Factor Term1
    (41) Factor -> . LPAREN SuperExpr RPAREN
    (42) Factor -> . Factor1
    (43) Factor1 -> . Factor2
    (44) Factor1 -> . Factor3
    (45) Factor2 -> . MINUS Factor3
    (46) Factor2 -> . PLUS Factor3
    (47) Factor3 -> . Constant
    (48) Factor3 -> . Call
    (112) Constant -> . ID
    (113) Constant -> . FCONST
    (114) Constant -> . ICONST
    (115) Constant -> . CCONST
    (116) Constant -> . FALSE
    (117) Constant -> . TRUE
    (63) Call -> . ID LPAREN Params RPAREN

    LPAREN          shift and go to state 123
    MINUS           shift and go to state 113
    PLUS            shift and go to state 115
    ID              shift and go to state 126
    FCONST          shift and go to state 114
    ICONST          shift and go to state 122
    CCONST          shift and go to state 129
    FALSE           shift and go to state 124
    TRUE            shift and go to state 112

    Term                           shift and go to state 117
    Constant                       shift and go to state 127
    Factor1                        shift and go to state 118
    Factor3                        shift and go to state 120
    Factor2                        shift and go to state 119
    SuperExpr                      shift and go to state 221
    Factor                         shift and go to state 111
    Call                           shift and go to state 110
    Expr                           shift and go to state 121
    Expression                     shift and go to state 125

state 175

    (24) SuperExpr1 -> empty .

    SEMI            reduce using rule 24 (SuperExpr1 -> empty .)
    RPAREN          reduce using rule 24 (SuperExpr1 -> empty .)
    COMMA           reduce using rule 24 (SuperExpr1 -> empty .)


state 176

    (65) Type -> Primitive .

    COMMA           reduce using rule 65 (Type -> Primitive .)


state 177

    (66) Type -> STRING .

    COMMA           reduce using rule 66 (Type -> STRING .)


state 178

    (64) Read -> READ LPAREN Type . COMMA ID RPAREN

    COMMA           shift and go to state 222


state 179

    (67) Print -> PRINT LPAREN Params3 . RPAREN

    RPAREN          shift and go to state 223


state 180

    (54) Params3 -> SuperExpr . Params4
    (56) Params4 -> . COMMA Params3
    (57) Params4 -> . empty
    (121) empty -> .

    COMMA           shift and go to state 224
    RPAREN          reduce using rule 121 (empty -> .)

    Params4                        shift and go to state 225
    empty                          shift and go to state 226

state 181

    (55) Params3 -> STRING . Params4
    (56) Params4 -> . COMMA Params3
    (57) Params4 -> . empty
    (121) empty -> .

    COMMA           shift and go to state 224
    RPAREN          reduce using rule 121 (empty -> .)

    Params4                        shift and go to state 227
    empty                          shift and go to state 226

state 182

    (77) Square -> SQUARE LPAREN SuperExpr . RPAREN

    RPAREN          shift and go to state 228


state 183

    (72) Home -> HOME LPAREN RPAREN .

    SEMI            reduce using rule 72 (Home -> HOME LPAREN RPAREN .)


state 184

    (74) Rotate -> RT LPAREN SuperExpr . RPAREN

    RPAREN          shift and go to state 229


state 185

    (71) PenUp -> PU LPAREN RPAREN .

    SEMI            reduce using rule 71 (PenUp -> PU LPAREN RPAREN .)


state 186

    (76) Arc -> ARC LPAREN SuperExpr . COMMA SuperExpr RPAREN

    COMMA           shift and go to state 230


state 187

    (70) PenDown -> PD LPAREN RPAREN .

    SEMI            reduce using rule 70 (PenDown -> PD LPAREN RPAREN .)


state 188

    (68) Brush -> BRUSH LPAREN Color . COMMA SuperExpr RPAREN

    COMMA           shift and go to state 231


state 189

    (60) Assign1 -> SuperExpr .

    SEMI            reduce using rule 60 (Assign1 -> SuperExpr .)


state 190

    (61) Assign1 -> Call .
    (48) Factor3 -> Call .

  ! reduce/reduce conflict for SEMI resolved using rule 48 (Factor3 -> Call .)
    DIVIDE          reduce using rule 48 (Factor3 -> Call .)
    TIMES           reduce using rule 48 (Factor3 -> Call .)
    MINUS           reduce using rule 48 (Factor3 -> Call .)
    PLUS            reduce using rule 48 (Factor3 -> Call .)
    LESSTHAN        reduce using rule 48 (Factor3 -> Call .)
    GREATHAN        reduce using rule 48 (Factor3 -> Call .)
    DIFFERENT       reduce using rule 48 (Factor3 -> Call .)
    TWOEQUAL        reduce using rule 48 (Factor3 -> Call .)
    GREATEQUAL      reduce using rule 48 (Factor3 -> Call .)
    LESSEQUAL       reduce using rule 48 (Factor3 -> Call .)
    error           reduce using rule 48 (Factor3 -> Call .)
    AND             reduce using rule 48 (Factor3 -> Call .)
    OR              reduce using rule 48 (Factor3 -> Call .)
    SEMI            reduce using rule 48 (Factor3 -> Call .)

  ! SEMI            [ reduce using rule 61 (Assign1 -> Call .) ]


state 191

    (62) Assign1 -> STRING .

    SEMI            reduce using rule 62 (Assign1 -> STRING .)


state 192

    (63) Call -> ID . LPAREN Params RPAREN
    (112) Constant -> ID .

    LPAREN          shift and go to state 141
    DIVIDE          reduce using rule 112 (Constant -> ID .)
    TIMES           reduce using rule 112 (Constant -> ID .)
    MINUS           reduce using rule 112 (Constant -> ID .)
    PLUS            reduce using rule 112 (Constant -> ID .)
    LESSTHAN        reduce using rule 112 (Constant -> ID .)
    GREATHAN        reduce using rule 112 (Constant -> ID .)
    DIFFERENT       reduce using rule 112 (Constant -> ID .)
    TWOEQUAL        reduce using rule 112 (Constant -> ID .)
    GREATEQUAL      reduce using rule 112 (Constant -> ID .)
    LESSEQUAL       reduce using rule 112 (Constant -> ID .)
    error           reduce using rule 112 (Constant -> ID .)
    AND             reduce using rule 112 (Constant -> ID .)
    OR              reduce using rule 112 (Constant -> ID .)
    SEMI            reduce using rule 112 (Constant -> ID .)


state 193

    (59) Assign -> ID EQUAL Assign1 .

    SEMI            reduce using rule 59 (Assign -> ID EQUAL Assign1 .)


state 194

    (49) Params -> Params1 .

    RPAREN          reduce using rule 49 (Params -> Params1 .)


state 195

    (51) Params1 -> SuperExpr . Params2
    (52) Params2 -> . COMMA Params1
    (53) Params2 -> . empty
    (121) empty -> .

    COMMA           shift and go to state 233
    RPAREN          reduce using rule 121 (empty -> .)

    Params2                        shift and go to state 232
    empty                          shift and go to state 234

state 196

    (63) Call -> ID LPAREN Params . RPAREN

    RPAREN          shift and go to state 235


state 197

    (50) Params -> empty .

    RPAREN          reduce using rule 50 (Params -> empty .)


state 198

    (18) Conditional -> IF LPAREN SuperExpr . RPAREN Block Else

    RPAREN          shift and go to state 236


state 199

    (73) Forward -> FD LPAREN SuperExpr . RPAREN

    RPAREN          shift and go to state 237


state 200

    (69) Color -> COLOR LPAREN SuperExpr . COMMA SuperExpr COMMA SuperExpr RPAREN

    COMMA           shift and go to state 238


state 201

    (75) Circle -> CIRCLE LPAREN SuperExpr . RPAREN

    RPAREN          shift and go to state 239


state 202

    (125) Circle -> CIRCLE LPAREN error . RPAREN

    RPAREN          shift and go to state 240


state 203

    (90) Instruction -> Instruction1 SEMI Instruction .

    RBRACE          reduce using rule 90 (Instruction -> Instruction1 SEMI Instruction .)


state 204

    (58) Loop -> LOOP LPAREN SuperExpr . RPAREN Block

    RPAREN          shift and go to state 241


state 205

    (7) Local_Declaration -> Primitive ID Array Array Seen_Variable . SEMI Local_Declaration

    SEMI            shift and go to state 242


state 206

    (38) Term1 -> DIVIDE Term .

    MINUS           reduce using rule 38 (Term1 -> DIVIDE Term .)
    PLUS            reduce using rule 38 (Term1 -> DIVIDE Term .)
    LESSTHAN        reduce using rule 38 (Term1 -> DIVIDE Term .)
    GREATHAN        reduce using rule 38 (Term1 -> DIVIDE Term .)
    DIFFERENT       reduce using rule 38 (Term1 -> DIVIDE Term .)
    TWOEQUAL        reduce using rule 38 (Term1 -> DIVIDE Term .)
    GREATEQUAL      reduce using rule 38 (Term1 -> DIVIDE Term .)
    LESSEQUAL       reduce using rule 38 (Term1 -> DIVIDE Term .)
    error           reduce using rule 38 (Term1 -> DIVIDE Term .)
    AND             reduce using rule 38 (Term1 -> DIVIDE Term .)
    OR              reduce using rule 38 (Term1 -> DIVIDE Term .)
    SEMI            reduce using rule 38 (Term1 -> DIVIDE Term .)
    RPAREN          reduce using rule 38 (Term1 -> DIVIDE Term .)
    COMMA           reduce using rule 38 (Term1 -> DIVIDE Term .)


state 207

    (127) Term1 -> DIVIDE error . Term
    (37) Term -> . Factor Term1
    (41) Factor -> . LPAREN SuperExpr RPAREN
    (42) Factor -> . Factor1
    (43) Factor1 -> . Factor2
    (44) Factor1 -> . Factor3
    (45) Factor2 -> . MINUS Factor3
    (46) Factor2 -> . PLUS Factor3
    (47) Factor3 -> . Constant
    (48) Factor3 -> . Call
    (112) Constant -> . ID
    (113) Constant -> . FCONST
    (114) Constant -> . ICONST
    (115) Constant -> . CCONST
    (116) Constant -> . FALSE
    (117) Constant -> . TRUE
    (63) Call -> . ID LPAREN Params RPAREN

    LPAREN          shift and go to state 123
    MINUS           shift and go to state 113
    PLUS            shift and go to state 115
    ID              shift and go to state 126
    FCONST          shift and go to state 114
    ICONST          shift and go to state 122
    CCONST          shift and go to state 129
    FALSE           shift and go to state 124
    TRUE            shift and go to state 112

    Term                           shift and go to state 243
    Constant                       shift and go to state 127
    Factor1                        shift and go to state 118
    Factor2                        shift and go to state 119
    Factor3                        shift and go to state 120
    Call                           shift and go to state 110
    Factor                         shift and go to state 111

state 208

    (39) Term1 -> TIMES Term .

    MINUS           reduce using rule 39 (Term1 -> TIMES Term .)
    PLUS            reduce using rule 39 (Term1 -> TIMES Term .)
    LESSTHAN        reduce using rule 39 (Term1 -> TIMES Term .)
    GREATHAN        reduce using rule 39 (Term1 -> TIMES Term .)
    DIFFERENT       reduce using rule 39 (Term1 -> TIMES Term .)
    TWOEQUAL        reduce using rule 39 (Term1 -> TIMES Term .)
    GREATEQUAL      reduce using rule 39 (Term1 -> TIMES Term .)
    LESSEQUAL       reduce using rule 39 (Term1 -> TIMES Term .)
    error           reduce using rule 39 (Term1 -> TIMES Term .)
    AND             reduce using rule 39 (Term1 -> TIMES Term .)
    OR              reduce using rule 39 (Term1 -> TIMES Term .)
    SEMI            reduce using rule 39 (Term1 -> TIMES Term .)
    RPAREN          reduce using rule 39 (Term1 -> TIMES Term .)
    COMMA           reduce using rule 39 (Term1 -> TIMES Term .)


state 209

    (128) Term1 -> TIMES error . Term
    (37) Term -> . Factor Term1
    (41) Factor -> . LPAREN SuperExpr RPAREN
    (42) Factor -> . Factor1
    (43) Factor1 -> . Factor2
    (44) Factor1 -> . Factor3
    (45) Factor2 -> . MINUS Factor3
    (46) Factor2 -> . PLUS Factor3
    (47) Factor3 -> . Constant
    (48) Factor3 -> . Call
    (112) Constant -> . ID
    (113) Constant -> . FCONST
    (114) Constant -> . ICONST
    (115) Constant -> . CCONST
    (116) Constant -> . FALSE
    (117) Constant -> . TRUE
    (63) Call -> . ID LPAREN Params RPAREN

    LPAREN          shift and go to state 123
    MINUS           shift and go to state 113
    PLUS            shift and go to state 115
    ID              shift and go to state 126
    FCONST          shift and go to state 114
    ICONST          shift and go to state 122
    CCONST          shift and go to state 129
    FALSE           shift and go to state 124
    TRUE            shift and go to state 112

    Term                           shift and go to state 244
    Constant                       shift and go to state 127
    Factor1                        shift and go to state 118
    Factor2                        shift and go to state 119
    Factor3                        shift and go to state 120
    Call                           shift and go to state 110
    Factor                         shift and go to state 111

state 210

    (35) Expr1 -> PLUS Expr .

    LESSTHAN        reduce using rule 35 (Expr1 -> PLUS Expr .)
    GREATHAN        reduce using rule 35 (Expr1 -> PLUS Expr .)
    DIFFERENT       reduce using rule 35 (Expr1 -> PLUS Expr .)
    TWOEQUAL        reduce using rule 35 (Expr1 -> PLUS Expr .)
    GREATEQUAL      reduce using rule 35 (Expr1 -> PLUS Expr .)
    LESSEQUAL       reduce using rule 35 (Expr1 -> PLUS Expr .)
    error           reduce using rule 35 (Expr1 -> PLUS Expr .)
    AND             reduce using rule 35 (Expr1 -> PLUS Expr .)
    OR              reduce using rule 35 (Expr1 -> PLUS Expr .)
    SEMI            reduce using rule 35 (Expr1 -> PLUS Expr .)
    RPAREN          reduce using rule 35 (Expr1 -> PLUS Expr .)
    COMMA           reduce using rule 35 (Expr1 -> PLUS Expr .)


state 211

    (34) Expr1 -> MINUS Expr .

    LESSTHAN        reduce using rule 34 (Expr1 -> MINUS Expr .)
    GREATHAN        reduce using rule 34 (Expr1 -> MINUS Expr .)
    DIFFERENT       reduce using rule 34 (Expr1 -> MINUS Expr .)
    TWOEQUAL        reduce using rule 34 (Expr1 -> MINUS Expr .)
    GREATEQUAL      reduce using rule 34 (Expr1 -> MINUS Expr .)
    LESSEQUAL       reduce using rule 34 (Expr1 -> MINUS Expr .)
    error           reduce using rule 34 (Expr1 -> MINUS Expr .)
    AND             reduce using rule 34 (Expr1 -> MINUS Expr .)
    OR              reduce using rule 34 (Expr1 -> MINUS Expr .)
    SEMI            reduce using rule 34 (Expr1 -> MINUS Expr .)
    RPAREN          reduce using rule 34 (Expr1 -> MINUS Expr .)
    COMMA           reduce using rule 34 (Expr1 -> MINUS Expr .)


state 212

    (28) Expression1 -> DIFFERENT Expr .

    error           reduce using rule 28 (Expression1 -> DIFFERENT Expr .)
    AND             reduce using rule 28 (Expression1 -> DIFFERENT Expr .)
    OR              reduce using rule 28 (Expression1 -> DIFFERENT Expr .)
    SEMI            reduce using rule 28 (Expression1 -> DIFFERENT Expr .)
    RPAREN          reduce using rule 28 (Expression1 -> DIFFERENT Expr .)
    COMMA           reduce using rule 28 (Expression1 -> DIFFERENT Expr .)


state 213

    (27) Expression1 -> GREATHAN Expr .

    error           reduce using rule 27 (Expression1 -> GREATHAN Expr .)
    AND             reduce using rule 27 (Expression1 -> GREATHAN Expr .)
    OR              reduce using rule 27 (Expression1 -> GREATHAN Expr .)
    SEMI            reduce using rule 27 (Expression1 -> GREATHAN Expr .)
    RPAREN          reduce using rule 27 (Expression1 -> GREATHAN Expr .)
    COMMA           reduce using rule 27 (Expression1 -> GREATHAN Expr .)


state 214

    (29) Expression1 -> TWOEQUAL Expr .

    error           reduce using rule 29 (Expression1 -> TWOEQUAL Expr .)
    AND             reduce using rule 29 (Expression1 -> TWOEQUAL Expr .)
    OR              reduce using rule 29 (Expression1 -> TWOEQUAL Expr .)
    SEMI            reduce using rule 29 (Expression1 -> TWOEQUAL Expr .)
    RPAREN          reduce using rule 29 (Expression1 -> TWOEQUAL Expr .)
    COMMA           reduce using rule 29 (Expression1 -> TWOEQUAL Expr .)


state 215

    (30) Expression1 -> GREATEQUAL Expr .

    error           reduce using rule 30 (Expression1 -> GREATEQUAL Expr .)
    AND             reduce using rule 30 (Expression1 -> GREATEQUAL Expr .)
    OR              reduce using rule 30 (Expression1 -> GREATEQUAL Expr .)
    SEMI            reduce using rule 30 (Expression1 -> GREATEQUAL Expr .)
    RPAREN          reduce using rule 30 (Expression1 -> GREATEQUAL Expr .)
    COMMA           reduce using rule 30 (Expression1 -> GREATEQUAL Expr .)


state 216

    (31) Expression1 -> LESSEQUAL Expr .

    error           reduce using rule 31 (Expression1 -> LESSEQUAL Expr .)
    AND             reduce using rule 31 (Expression1 -> LESSEQUAL Expr .)
    OR              reduce using rule 31 (Expression1 -> LESSEQUAL Expr .)
    SEMI            reduce using rule 31 (Expression1 -> LESSEQUAL Expr .)
    RPAREN          reduce using rule 31 (Expression1 -> LESSEQUAL Expr .)
    COMMA           reduce using rule 31 (Expression1 -> LESSEQUAL Expr .)


state 217

    (26) Expression1 -> LESSTHAN Expr .

    error           reduce using rule 26 (Expression1 -> LESSTHAN Expr .)
    AND             reduce using rule 26 (Expression1 -> LESSTHAN Expr .)
    OR              reduce using rule 26 (Expression1 -> LESSTHAN Expr .)
    SEMI            reduce using rule 26 (Expression1 -> LESSTHAN Expr .)
    RPAREN          reduce using rule 26 (Expression1 -> LESSTHAN Expr .)
    COMMA           reduce using rule 26 (Expression1 -> LESSTHAN Expr .)


state 218

    (41) Factor -> LPAREN SuperExpr RPAREN .

    DIVIDE          reduce using rule 41 (Factor -> LPAREN SuperExpr RPAREN .)
    TIMES           reduce using rule 41 (Factor -> LPAREN SuperExpr RPAREN .)
    MINUS           reduce using rule 41 (Factor -> LPAREN SuperExpr RPAREN .)
    PLUS            reduce using rule 41 (Factor -> LPAREN SuperExpr RPAREN .)
    LESSTHAN        reduce using rule 41 (Factor -> LPAREN SuperExpr RPAREN .)
    GREATHAN        reduce using rule 41 (Factor -> LPAREN SuperExpr RPAREN .)
    DIFFERENT       reduce using rule 41 (Factor -> LPAREN SuperExpr RPAREN .)
    TWOEQUAL        reduce using rule 41 (Factor -> LPAREN SuperExpr RPAREN .)
    GREATEQUAL      reduce using rule 41 (Factor -> LPAREN SuperExpr RPAREN .)
    LESSEQUAL       reduce using rule 41 (Factor -> LPAREN SuperExpr RPAREN .)
    error           reduce using rule 41 (Factor -> LPAREN SuperExpr RPAREN .)
    AND             reduce using rule 41 (Factor -> LPAREN SuperExpr RPAREN .)
    OR              reduce using rule 41 (Factor -> LPAREN SuperExpr RPAREN .)
    SEMI            reduce using rule 41 (Factor -> LPAREN SuperExpr RPAREN .)
    RPAREN          reduce using rule 41 (Factor -> LPAREN SuperExpr RPAREN .)
    COMMA           reduce using rule 41 (Factor -> LPAREN SuperExpr RPAREN .)


state 219

    (22) SuperExpr1 -> AND SuperExpr .

    SEMI            reduce using rule 22 (SuperExpr1 -> AND SuperExpr .)
    RPAREN          reduce using rule 22 (SuperExpr1 -> AND SuperExpr .)
    COMMA           reduce using rule 22 (SuperExpr1 -> AND SuperExpr .)


state 220

    (126) SuperExpr -> Expression error SuperExpr1 .

    COMMA           reduce using rule 126 (SuperExpr -> Expression error SuperExpr1 .)
    RPAREN          reduce using rule 126 (SuperExpr -> Expression error SuperExpr1 .)
    SEMI            reduce using rule 126 (SuperExpr -> Expression error SuperExpr1 .)


state 221

    (23) SuperExpr1 -> OR SuperExpr .

    SEMI            reduce using rule 23 (SuperExpr1 -> OR SuperExpr .)
    RPAREN          reduce using rule 23 (SuperExpr1 -> OR SuperExpr .)
    COMMA           reduce using rule 23 (SuperExpr1 -> OR SuperExpr .)


state 222

    (64) Read -> READ LPAREN Type COMMA . ID RPAREN

    ID              shift and go to state 245


state 223

    (67) Print -> PRINT LPAREN Params3 RPAREN .

    SEMI            reduce using rule 67 (Print -> PRINT LPAREN Params3 RPAREN .)


state 224

    (56) Params4 -> COMMA . Params3
    (54) Params3 -> . SuperExpr Params4
    (55) Params3 -> . STRING Params4
    (21) SuperExpr -> . Expression SuperExpr1
    (126) SuperExpr -> . Expression error SuperExpr1
    (25) Expression -> . Expr Expression1
    (33) Expr -> . Term Expr1
    (37) Term -> . Factor Term1
    (41) Factor -> . LPAREN SuperExpr RPAREN
    (42) Factor -> . Factor1
    (43) Factor1 -> . Factor2
    (44) Factor1 -> . Factor3
    (45) Factor2 -> . MINUS Factor3
    (46) Factor2 -> . PLUS Factor3
    (47) Factor3 -> . Constant
    (48) Factor3 -> . Call
    (112) Constant -> . ID
    (113) Constant -> . FCONST
    (114) Constant -> . ICONST
    (115) Constant -> . CCONST
    (116) Constant -> . FALSE
    (117) Constant -> . TRUE
    (63) Call -> . ID LPAREN Params RPAREN

    STRING          shift and go to state 181
    LPAREN          shift and go to state 123
    MINUS           shift and go to state 113
    PLUS            shift and go to state 115
    ID              shift and go to state 126
    FCONST          shift and go to state 114
    ICONST          shift and go to state 122
    CCONST          shift and go to state 129
    FALSE           shift and go to state 124
    TRUE            shift and go to state 112

    Params3                        shift and go to state 246
    Constant                       shift and go to state 127
    Factor3                        shift and go to state 120
    Factor2                        shift and go to state 119
    SuperExpr                      shift and go to state 180
    Factor                         shift and go to state 111
    Term                           shift and go to state 117
    Call                           shift and go to state 110
    Expr                           shift and go to state 121
    Expression                     shift and go to state 125
    Factor1                        shift and go to state 118

state 225

    (54) Params3 -> SuperExpr Params4 .

    RPAREN          reduce using rule 54 (Params3 -> SuperExpr Params4 .)


state 226

    (57) Params4 -> empty .

    RPAREN          reduce using rule 57 (Params4 -> empty .)


state 227

    (55) Params3 -> STRING Params4 .

    RPAREN          reduce using rule 55 (Params3 -> STRING Params4 .)


state 228

    (77) Square -> SQUARE LPAREN SuperExpr RPAREN .

    SEMI            reduce using rule 77 (Square -> SQUARE LPAREN SuperExpr RPAREN .)


state 229

    (74) Rotate -> RT LPAREN SuperExpr RPAREN .

    SEMI            reduce using rule 74 (Rotate -> RT LPAREN SuperExpr RPAREN .)


state 230

    (76) Arc -> ARC LPAREN SuperExpr COMMA . SuperExpr RPAREN
    (21) SuperExpr -> . Expression SuperExpr1
    (126) SuperExpr -> . Expression error SuperExpr1
    (25) Expression -> . Expr Expression1
    (33) Expr -> . Term Expr1
    (37) Term -> . Factor Term1
    (41) Factor -> . LPAREN SuperExpr RPAREN
    (42) Factor -> . Factor1
    (43) Factor1 -> . Factor2
    (44) Factor1 -> . Factor3
    (45) Factor2 -> . MINUS Factor3
    (46) Factor2 -> . PLUS Factor3
    (47) Factor3 -> . Constant
    (48) Factor3 -> . Call
    (112) Constant -> . ID
    (113) Constant -> . FCONST
    (114) Constant -> . ICONST
    (115) Constant -> . CCONST
    (116) Constant -> . FALSE
    (117) Constant -> . TRUE
    (63) Call -> . ID LPAREN Params RPAREN

    LPAREN          shift and go to state 123
    MINUS           shift and go to state 113
    PLUS            shift and go to state 115
    ID              shift and go to state 126
    FCONST          shift and go to state 114
    ICONST          shift and go to state 122
    CCONST          shift and go to state 129
    FALSE           shift and go to state 124
    TRUE            shift and go to state 112

    Term                           shift and go to state 117
    Constant                       shift and go to state 127
    Factor1                        shift and go to state 118
    Factor3                        shift and go to state 120
    Factor2                        shift and go to state 119
    SuperExpr                      shift and go to state 247
    Factor                         shift and go to state 111
    Call                           shift and go to state 110
    Expr                           shift and go to state 121
    Expression                     shift and go to state 125

state 231

    (68) Brush -> BRUSH LPAREN Color COMMA . SuperExpr RPAREN
    (21) SuperExpr -> . Expression SuperExpr1
    (126) SuperExpr -> . Expression error SuperExpr1
    (25) Expression -> . Expr Expression1
    (33) Expr -> . Term Expr1
    (37) Term -> . Factor Term1
    (41) Factor -> . LPAREN SuperExpr RPAREN
    (42) Factor -> . Factor1
    (43) Factor1 -> . Factor2
    (44) Factor1 -> . Factor3
    (45) Factor2 -> . MINUS Factor3
    (46) Factor2 -> . PLUS Factor3
    (47) Factor3 -> . Constant
    (48) Factor3 -> . Call
    (112) Constant -> . ID
    (113) Constant -> . FCONST
    (114) Constant -> . ICONST
    (115) Constant -> . CCONST
    (116) Constant -> . FALSE
    (117) Constant -> . TRUE
    (63) Call -> . ID LPAREN Params RPAREN

    LPAREN          shift and go to state 123
    MINUS           shift and go to state 113
    PLUS            shift and go to state 115
    ID              shift and go to state 126
    FCONST          shift and go to state 114
    ICONST          shift and go to state 122
    CCONST          shift and go to state 129
    FALSE           shift and go to state 124
    TRUE            shift and go to state 112

    Term                           shift and go to state 117
    Constant                       shift and go to state 127
    Factor1                        shift and go to state 118
    Factor3                        shift and go to state 120
    SuperExpr                      shift and go to state 248
    Factor                         shift and go to state 111
    Call                           shift and go to state 110
    Factor2                        shift and go to state 119
    Expr                           shift and go to state 121
    Expression                     shift and go to state 125

state 232

    (51) Params1 -> SuperExpr Params2 .

    RPAREN          reduce using rule 51 (Params1 -> SuperExpr Params2 .)


state 233

    (52) Params2 -> COMMA . Params1
    (51) Params1 -> . SuperExpr Params2
    (21) SuperExpr -> . Expression SuperExpr1
    (126) SuperExpr -> . Expression error SuperExpr1
    (25) Expression -> . Expr Expression1
    (33) Expr -> . Term Expr1
    (37) Term -> . Factor Term1
    (41) Factor -> . LPAREN SuperExpr RPAREN
    (42) Factor -> . Factor1
    (43) Factor1 -> . Factor2
    (44) Factor1 -> . Factor3
    (45) Factor2 -> . MINUS Factor3
    (46) Factor2 -> . PLUS Factor3
    (47) Factor3 -> . Constant
    (48) Factor3 -> . Call
    (112) Constant -> . ID
    (113) Constant -> . FCONST
    (114) Constant -> . ICONST
    (115) Constant -> . CCONST
    (116) Constant -> . FALSE
    (117) Constant -> . TRUE
    (63) Call -> . ID LPAREN Params RPAREN

    LPAREN          shift and go to state 123
    MINUS           shift and go to state 113
    PLUS            shift and go to state 115
    ID              shift and go to state 126
    FCONST          shift and go to state 114
    ICONST          shift and go to state 122
    CCONST          shift and go to state 129
    FALSE           shift and go to state 124
    TRUE            shift and go to state 112

    Params1                        shift and go to state 249
    Term                           shift and go to state 117
    Constant                       shift and go to state 127
    Factor1                        shift and go to state 118
    Factor3                        shift and go to state 120
    Factor2                        shift and go to state 119
    SuperExpr                      shift and go to state 195
    Factor                         shift and go to state 111
    Call                           shift and go to state 110
    Expr                           shift and go to state 121
    Expression                     shift and go to state 125

state 234

    (53) Params2 -> empty .

    RPAREN          reduce using rule 53 (Params2 -> empty .)


state 235

    (63) Call -> ID LPAREN Params RPAREN .

    DIVIDE          reduce using rule 63 (Call -> ID LPAREN Params RPAREN .)
    TIMES           reduce using rule 63 (Call -> ID LPAREN Params RPAREN .)
    MINUS           reduce using rule 63 (Call -> ID LPAREN Params RPAREN .)
    PLUS            reduce using rule 63 (Call -> ID LPAREN Params RPAREN .)
    error           reduce using rule 63 (Call -> ID LPAREN Params RPAREN .)
    AND             reduce using rule 63 (Call -> ID LPAREN Params RPAREN .)
    OR              reduce using rule 63 (Call -> ID LPAREN Params RPAREN .)
    SEMI            reduce using rule 63 (Call -> ID LPAREN Params RPAREN .)
    RPAREN          reduce using rule 63 (Call -> ID LPAREN Params RPAREN .)
    COMMA           reduce using rule 63 (Call -> ID LPAREN Params RPAREN .)
    LESSTHAN        reduce using rule 63 (Call -> ID LPAREN Params RPAREN .)
    GREATHAN        reduce using rule 63 (Call -> ID LPAREN Params RPAREN .)
    DIFFERENT       reduce using rule 63 (Call -> ID LPAREN Params RPAREN .)
    TWOEQUAL        reduce using rule 63 (Call -> ID LPAREN Params RPAREN .)
    GREATEQUAL      reduce using rule 63 (Call -> ID LPAREN Params RPAREN .)
    LESSEQUAL       reduce using rule 63 (Call -> ID LPAREN Params RPAREN .)


state 236

    (18) Conditional -> IF LPAREN SuperExpr RPAREN . Block Else
    (16) Block -> . LBRACE Instruction RBRACE
    (123) Block -> . LBRACE error RBRACE

    LBRACE          shift and go to state 250

    Block                          shift and go to state 251

state 237

    (73) Forward -> FD LPAREN SuperExpr RPAREN .

    SEMI            reduce using rule 73 (Forward -> FD LPAREN SuperExpr RPAREN .)


state 238

    (69) Color -> COLOR LPAREN SuperExpr COMMA . SuperExpr COMMA SuperExpr RPAREN
    (21) SuperExpr -> . Expression SuperExpr1
    (126) SuperExpr -> . Expression error SuperExpr1
    (25) Expression -> . Expr Expression1
    (33) Expr -> . Term Expr1
    (37) Term -> . Factor Term1
    (41) Factor -> . LPAREN SuperExpr RPAREN
    (42) Factor -> . Factor1
    (43) Factor1 -> . Factor2
    (44) Factor1 -> . Factor3
    (45) Factor2 -> . MINUS Factor3
    (46) Factor2 -> . PLUS Factor3
    (47) Factor3 -> . Constant
    (48) Factor3 -> . Call
    (112) Constant -> . ID
    (113) Constant -> . FCONST
    (114) Constant -> . ICONST
    (115) Constant -> . CCONST
    (116) Constant -> . FALSE
    (117) Constant -> . TRUE
    (63) Call -> . ID LPAREN Params RPAREN

    LPAREN          shift and go to state 123
    MINUS           shift and go to state 113
    PLUS            shift and go to state 115
    ID              shift and go to state 126
    FCONST          shift and go to state 114
    ICONST          shift and go to state 122
    CCONST          shift and go to state 129
    FALSE           shift and go to state 124
    TRUE            shift and go to state 112

    Term                           shift and go to state 117
    Constant                       shift and go to state 127
    Factor1                        shift and go to state 118
    Factor3                        shift and go to state 120
    Factor2                        shift and go to state 119
    SuperExpr                      shift and go to state 252
    Factor                         shift and go to state 111
    Call                           shift and go to state 110
    Expr                           shift and go to state 121
    Expression                     shift and go to state 125

state 239

    (75) Circle -> CIRCLE LPAREN SuperExpr RPAREN .

    SEMI            reduce using rule 75 (Circle -> CIRCLE LPAREN SuperExpr RPAREN .)


state 240

    (125) Circle -> CIRCLE LPAREN error RPAREN .

    SEMI            reduce using rule 125 (Circle -> CIRCLE LPAREN error RPAREN .)


state 241

    (58) Loop -> LOOP LPAREN SuperExpr RPAREN . Block
    (16) Block -> . LBRACE Instruction RBRACE
    (123) Block -> . LBRACE error RBRACE

    LBRACE          shift and go to state 250

    Block                          shift and go to state 253

state 242

    (7) Local_Declaration -> Primitive ID Array Array Seen_Variable SEMI . Local_Declaration
    (7) Local_Declaration -> . Primitive ID Array Array Seen_Variable SEMI Local_Declaration
    (8) Local_Declaration -> . empty
    (81) Primitive -> . INT
    (82) Primitive -> . FLOAT
    (83) Primitive -> . BOOL
    (84) Primitive -> . CHAR
    (121) empty -> .

    INT             shift and go to state 2
    FLOAT           shift and go to state 3
    BOOL            shift and go to state 6
    CHAR            shift and go to state 4
    error           reduce using rule 121 (empty -> .)
    LOOP            reduce using rule 121 (empty -> .)
    IF              reduce using rule 121 (empty -> .)
    ID              reduce using rule 121 (empty -> .)
    BRUSH           reduce using rule 121 (empty -> .)
    READ            reduce using rule 121 (empty -> .)
    PRINT           reduce using rule 121 (empty -> .)
    PD              reduce using rule 121 (empty -> .)
    PU              reduce using rule 121 (empty -> .)
    HOME            reduce using rule 121 (empty -> .)
    FD              reduce using rule 121 (empty -> .)
    RT              reduce using rule 121 (empty -> .)
    COLOR           reduce using rule 121 (empty -> .)
    CIRCLE          reduce using rule 121 (empty -> .)
    ARC             reduce using rule 121 (empty -> .)
    SQUARE          reduce using rule 121 (empty -> .)
    RETURN          reduce using rule 121 (empty -> .)
    RBRACE          reduce using rule 121 (empty -> .)

    Local_Declaration              shift and go to state 254
    Primitive                      shift and go to state 61
    empty                          shift and go to state 63

state 243

    (127) Term1 -> DIVIDE error Term .

    MINUS           reduce using rule 127 (Term1 -> DIVIDE error Term .)
    PLUS            reduce using rule 127 (Term1 -> DIVIDE error Term .)
    LESSTHAN        reduce using rule 127 (Term1 -> DIVIDE error Term .)
    GREATHAN        reduce using rule 127 (Term1 -> DIVIDE error Term .)
    DIFFERENT       reduce using rule 127 (Term1 -> DIVIDE error Term .)
    TWOEQUAL        reduce using rule 127 (Term1 -> DIVIDE error Term .)
    GREATEQUAL      reduce using rule 127 (Term1 -> DIVIDE error Term .)
    LESSEQUAL       reduce using rule 127 (Term1 -> DIVIDE error Term .)
    error           reduce using rule 127 (Term1 -> DIVIDE error Term .)
    AND             reduce using rule 127 (Term1 -> DIVIDE error Term .)
    OR              reduce using rule 127 (Term1 -> DIVIDE error Term .)
    SEMI            reduce using rule 127 (Term1 -> DIVIDE error Term .)
    RPAREN          reduce using rule 127 (Term1 -> DIVIDE error Term .)
    COMMA           reduce using rule 127 (Term1 -> DIVIDE error Term .)


state 244

    (128) Term1 -> TIMES error Term .

    MINUS           reduce using rule 128 (Term1 -> TIMES error Term .)
    PLUS            reduce using rule 128 (Term1 -> TIMES error Term .)
    LESSTHAN        reduce using rule 128 (Term1 -> TIMES error Term .)
    GREATHAN        reduce using rule 128 (Term1 -> TIMES error Term .)
    DIFFERENT       reduce using rule 128 (Term1 -> TIMES error Term .)
    TWOEQUAL        reduce using rule 128 (Term1 -> TIMES error Term .)
    GREATEQUAL      reduce using rule 128 (Term1 -> TIMES error Term .)
    LESSEQUAL       reduce using rule 128 (Term1 -> TIMES error Term .)
    error           reduce using rule 128 (Term1 -> TIMES error Term .)
    AND             reduce using rule 128 (Term1 -> TIMES error Term .)
    OR              reduce using rule 128 (Term1 -> TIMES error Term .)
    SEMI            reduce using rule 128 (Term1 -> TIMES error Term .)
    RPAREN          reduce using rule 128 (Term1 -> TIMES error Term .)
    COMMA           reduce using rule 128 (Term1 -> TIMES error Term .)


state 245

    (64) Read -> READ LPAREN Type COMMA ID . RPAREN

    RPAREN          shift and go to state 255


state 246

    (56) Params4 -> COMMA Params3 .

    RPAREN          reduce using rule 56 (Params4 -> COMMA Params3 .)


state 247

    (76) Arc -> ARC LPAREN SuperExpr COMMA SuperExpr . RPAREN

    RPAREN          shift and go to state 256


state 248

    (68) Brush -> BRUSH LPAREN Color COMMA SuperExpr . RPAREN

    RPAREN          shift and go to state 257


state 249

    (52) Params2 -> COMMA Params1 .

    RPAREN          reduce using rule 52 (Params2 -> COMMA Params1 .)


state 250

    (16) Block -> LBRACE . Instruction RBRACE
    (123) Block -> LBRACE . error RBRACE
    (90) Instruction -> . Instruction1 SEMI Instruction
    (91) Instruction -> . empty
    (92) Instruction1 -> . Loop
    (93) Instruction1 -> . Conditional
    (94) Instruction1 -> . Assign
    (95) Instruction1 -> . Call
    (96) Instruction1 -> . Brush
    (97) Instruction1 -> . Read
    (98) Instruction1 -> . Print
    (99) Instruction1 -> . PenDown
    (100) Instruction1 -> . PenUp
    (101) Instruction1 -> . Home
    (102) Instruction1 -> . Forward
    (103) Instruction1 -> . Rotate
    (104) Instruction1 -> . Color
    (105) Instruction1 -> . Circle
    (106) Instruction1 -> . Arc
    (107) Instruction1 -> . Square
    (108) Instruction1 -> . Return
    (121) empty -> .
    (58) Loop -> . LOOP LPAREN SuperExpr RPAREN Block
    (18) Conditional -> . IF LPAREN SuperExpr RPAREN Block Else
    (59) Assign -> . ID EQUAL Assign1
    (63) Call -> . ID LPAREN Params RPAREN
    (68) Brush -> . BRUSH LPAREN Color COMMA SuperExpr RPAREN
    (64) Read -> . READ LPAREN Type COMMA ID RPAREN
    (67) Print -> . PRINT LPAREN Params3 RPAREN
    (70) PenDown -> . PD LPAREN RPAREN
    (71) PenUp -> . PU LPAREN RPAREN
    (72) Home -> . HOME LPAREN RPAREN
    (73) Forward -> . FD LPAREN SuperExpr RPAREN
    (74) Rotate -> . RT LPAREN SuperExpr RPAREN
    (69) Color -> . COLOR LPAREN SuperExpr COMMA SuperExpr COMMA SuperExpr RPAREN
    (75) Circle -> . CIRCLE LPAREN SuperExpr RPAREN
    (125) Circle -> . CIRCLE LPAREN error RPAREN
    (76) Arc -> . ARC LPAREN SuperExpr COMMA SuperExpr RPAREN
    (77) Square -> . SQUARE LPAREN SuperExpr RPAREN
    (109) Return -> . RETURN RType

    error           shift and go to state 259
    RBRACE          reduce using rule 121 (empty -> .)
    LOOP            shift and go to state 104
    IF              shift and go to state 93
    ID              shift and go to state 90
    BRUSH           shift and go to state 86
    READ            shift and go to state 70
    PRINT           shift and go to state 71
    PD              shift and go to state 84
    PU              shift and go to state 81
    HOME            shift and go to state 77
    FD              shift and go to state 94
    RT              shift and go to state 79
    COLOR           shift and go to state 97
    CIRCLE          shift and go to state 102
    ARC             shift and go to state 83
    SQUARE          shift and go to state 74
    RETURN          shift and go to state 68

    PenUp                          shift and go to state 69
    Print                          shift and go to state 72
    PenDown                        shift and go to state 73
    Call                           shift and go to state 75
    Forward                        shift and go to state 76
    Circle                         shift and go to state 78
    Return                         shift and go to state 80
    Read                           shift and go to state 82
    Loop                           shift and go to state 92
    empty                          shift and go to state 85
    Rotate                         shift and go to state 87
    Instruction                    shift and go to state 258
    Assign                         shift and go to state 91
    Square                         shift and go to state 89
    Color                          shift and go to state 95
    Conditional                    shift and go to state 96
    Arc                            shift and go to state 98
    Brush                          shift and go to state 99
    Home                           shift and go to state 101
    Instruction1                   shift and go to state 103

state 251

    (18) Conditional -> IF LPAREN SuperExpr RPAREN Block . Else
    (19) Else -> . ELSE Block
    (20) Else -> . empty
    (121) empty -> .

    ELSE            shift and go to state 262
    SEMI            reduce using rule 121 (empty -> .)

    empty                          shift and go to state 261
    Else                           shift and go to state 260

state 252

    (69) Color -> COLOR LPAREN SuperExpr COMMA SuperExpr . COMMA SuperExpr RPAREN

    COMMA           shift and go to state 263


state 253

    (58) Loop -> LOOP LPAREN SuperExpr RPAREN Block .

    SEMI            reduce using rule 58 (Loop -> LOOP LPAREN SuperExpr RPAREN Block .)


state 254

    (7) Local_Declaration -> Primitive ID Array Array Seen_Variable SEMI Local_Declaration .

    error           reduce using rule 7 (Local_Declaration -> Primitive ID Array Array Seen_Variable SEMI Local_Declaration .)
    LOOP            reduce using rule 7 (Local_Declaration -> Primitive ID Array Array Seen_Variable SEMI Local_Declaration .)
    IF              reduce using rule 7 (Local_Declaration -> Primitive ID Array Array Seen_Variable SEMI Local_Declaration .)
    ID              reduce using rule 7 (Local_Declaration -> Primitive ID Array Array Seen_Variable SEMI Local_Declaration .)
    BRUSH           reduce using rule 7 (Local_Declaration -> Primitive ID Array Array Seen_Variable SEMI Local_Declaration .)
    READ            reduce using rule 7 (Local_Declaration -> Primitive ID Array Array Seen_Variable SEMI Local_Declaration .)
    PRINT           reduce using rule 7 (Local_Declaration -> Primitive ID Array Array Seen_Variable SEMI Local_Declaration .)
    PD              reduce using rule 7 (Local_Declaration -> Primitive ID Array Array Seen_Variable SEMI Local_Declaration .)
    PU              reduce using rule 7 (Local_Declaration -> Primitive ID Array Array Seen_Variable SEMI Local_Declaration .)
    HOME            reduce using rule 7 (Local_Declaration -> Primitive ID Array Array Seen_Variable SEMI Local_Declaration .)
    FD              reduce using rule 7 (Local_Declaration -> Primitive ID Array Array Seen_Variable SEMI Local_Declaration .)
    RT              reduce using rule 7 (Local_Declaration -> Primitive ID Array Array Seen_Variable SEMI Local_Declaration .)
    COLOR           reduce using rule 7 (Local_Declaration -> Primitive ID Array Array Seen_Variable SEMI Local_Declaration .)
    CIRCLE          reduce using rule 7 (Local_Declaration -> Primitive ID Array Array Seen_Variable SEMI Local_Declaration .)
    ARC             reduce using rule 7 (Local_Declaration -> Primitive ID Array Array Seen_Variable SEMI Local_Declaration .)
    SQUARE          reduce using rule 7 (Local_Declaration -> Primitive ID Array Array Seen_Variable SEMI Local_Declaration .)
    RETURN          reduce using rule 7 (Local_Declaration -> Primitive ID Array Array Seen_Variable SEMI Local_Declaration .)
    RBRACE          reduce using rule 7 (Local_Declaration -> Primitive ID Array Array Seen_Variable SEMI Local_Declaration .)


state 255

    (64) Read -> READ LPAREN Type COMMA ID RPAREN .

    SEMI            reduce using rule 64 (Read -> READ LPAREN Type COMMA ID RPAREN .)


state 256

    (76) Arc -> ARC LPAREN SuperExpr COMMA SuperExpr RPAREN .

    SEMI            reduce using rule 76 (Arc -> ARC LPAREN SuperExpr COMMA SuperExpr RPAREN .)


state 257

    (68) Brush -> BRUSH LPAREN Color COMMA SuperExpr RPAREN .

    SEMI            reduce using rule 68 (Brush -> BRUSH LPAREN Color COMMA SuperExpr RPAREN .)


state 258

    (16) Block -> LBRACE Instruction . RBRACE

    RBRACE          shift and go to state 264


state 259

    (123) Block -> LBRACE error . RBRACE

    RBRACE          shift and go to state 265


state 260

    (18) Conditional -> IF LPAREN SuperExpr RPAREN Block Else .

    SEMI            reduce using rule 18 (Conditional -> IF LPAREN SuperExpr RPAREN Block Else .)


state 261

    (20) Else -> empty .

    SEMI            reduce using rule 20 (Else -> empty .)


state 262

    (19) Else -> ELSE . Block
    (16) Block -> . LBRACE Instruction RBRACE
    (123) Block -> . LBRACE error RBRACE

    LBRACE          shift and go to state 250

    Block                          shift and go to state 266

state 263

    (69) Color -> COLOR LPAREN SuperExpr COMMA SuperExpr COMMA . SuperExpr RPAREN
    (21) SuperExpr -> . Expression SuperExpr1
    (126) SuperExpr -> . Expression error SuperExpr1
    (25) Expression -> . Expr Expression1
    (33) Expr -> . Term Expr1
    (37) Term -> . Factor Term1
    (41) Factor -> . LPAREN SuperExpr RPAREN
    (42) Factor -> . Factor1
    (43) Factor1 -> . Factor2
    (44) Factor1 -> . Factor3
    (45) Factor2 -> . MINUS Factor3
    (46) Factor2 -> . PLUS Factor3
    (47) Factor3 -> . Constant
    (48) Factor3 -> . Call
    (112) Constant -> . ID
    (113) Constant -> . FCONST
    (114) Constant -> . ICONST
    (115) Constant -> . CCONST
    (116) Constant -> . FALSE
    (117) Constant -> . TRUE
    (63) Call -> . ID LPAREN Params RPAREN

    LPAREN          shift and go to state 123
    MINUS           shift and go to state 113
    PLUS            shift and go to state 115
    ID              shift and go to state 126
    FCONST          shift and go to state 114
    ICONST          shift and go to state 122
    CCONST          shift and go to state 129
    FALSE           shift and go to state 124
    TRUE            shift and go to state 112

    Term                           shift and go to state 117
    Constant                       shift and go to state 127
    Factor1                        shift and go to state 118
    Factor3                        shift and go to state 120
    Factor2                        shift and go to state 119
    SuperExpr                      shift and go to state 267
    Factor                         shift and go to state 111
    Call                           shift and go to state 110
    Expr                           shift and go to state 121
    Expression                     shift and go to state 125

state 264

    (16) Block -> LBRACE Instruction RBRACE .

    SEMI            reduce using rule 16 (Block -> LBRACE Instruction RBRACE .)
    ELSE            reduce using rule 16 (Block -> LBRACE Instruction RBRACE .)


state 265

    (123) Block -> LBRACE error RBRACE .

    SEMI            reduce using rule 123 (Block -> LBRACE error RBRACE .)
    ELSE            reduce using rule 123 (Block -> LBRACE error RBRACE .)


state 266

    (19) Else -> ELSE Block .

    SEMI            reduce using rule 19 (Else -> ELSE Block .)


state 267

    (69) Color -> COLOR LPAREN SuperExpr COMMA SuperExpr COMMA SuperExpr . RPAREN

    RPAREN          shift and go to state 268


state 268

    (69) Color -> COLOR LPAREN SuperExpr COMMA SuperExpr COMMA SuperExpr RPAREN .

    SEMI            reduce using rule 69 (Color -> COLOR LPAREN SuperExpr COMMA SuperExpr COMMA SuperExpr RPAREN .)
    COMMA           reduce using rule 69 (Color -> COLOR LPAREN SuperExpr COMMA SuperExpr COMMA SuperExpr RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for INT in state 0 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 0 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 0 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 0 resolved as shift
WARNING: shift/reduce conflict for INT in state 8 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 8 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 8 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 8 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 10 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 38 resolved as shift
WARNING: shift/reduce conflict for INT in state 52 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 52 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 52 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 52 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 67 resolved as shift
WARNING: reduce/reduce conflict in state 190 resolved using rule (Factor3 -> Call)
WARNING: rejected rule (Assign1 -> Call) in state 190
WARNING: Rule (Assign1 -> Call) is never reduced
