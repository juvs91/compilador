Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> Program
Rule 1     Program -> Declaration Function Main
Rule 2     Main -> MAIN Push_Scope LPAREN RPAREN FBlock
Rule 3     Declaration -> Primitive ID Array Array Seen_Variable SEMI Declaration
Rule 4     Declaration -> empty
Rule 5     Array -> LBRACKET ICONST RBRACKET
Rule 6     Array -> empty
Rule 7     Function -> Function1
Rule 8     Function -> RFunction
Rule 9     Function -> empty
Rule 10    Function1 -> VOID ID Push_Scope LPAREN ParamList RPAREN FBlock Pop_Scope Function
Rule 11    RFunction -> Primitive ID Push_Scope LPAREN ParamList RPAREN RFBlock Pop_Scope Function
Rule 12    Block -> LBRACE Instruction RBRACE
Rule 13    FBlock -> LBRACE Declaration Instruction RBRACE
Rule 14    RFBlock -> LBRACE Declaration Instruction RETURN SuperExpr SEMI RBRACE
Rule 15    Conditional -> IF LPAREN SuperExpr RPAREN Block Else
Rule 16    Else -> ELSE Block
Rule 17    Else -> empty
Rule 18    SuperExpr -> Expression Gen_Quad4 SuperExpr1
Rule 19    SuperExpr1 -> AND Seen_Operator SuperExpr
Rule 20    SuperExpr1 -> OR Seen_Operator SuperExpr
Rule 21    SuperExpr1 -> empty
Rule 22    Expression -> Expr Expression1 Gen_Quad3
Rule 23    Expression1 -> LESSTHAN Seen_Operator Expr
Rule 24    Expression1 -> GREATHAN Seen_Operator Expr
Rule 25    Expression1 -> DIFFERENT Seen_Operator Expr
Rule 26    Expression1 -> TWOEQUAL Seen_Operator Expr
Rule 27    Expression1 -> GREATEQUAL Seen_Operator Expr
Rule 28    Expression1 -> LESSEQUAL Seen_Operator Expr
Rule 29    Expression1 -> empty
Rule 30    Expr -> Term Gen_Quad2 Expr1
Rule 31    Expr1 -> MINUS Seen_Operator Expr
Rule 32    Expr1 -> PLUS Seen_Operator Expr
Rule 33    Expr1 -> empty
Rule 34    Term -> Factor Gen_Quad1 Term1
Rule 35    Term1 -> DIVIDE Seen_Operator Term
Rule 36    Term1 -> TIMES Seen_Operator Term
Rule 37    Term1 -> empty
Rule 38    Factor -> LPAREN Push_Expr SuperExpr RPAREN Pop_Expr
Rule 39    Factor -> Factor1 Seen_Operand
Rule 40    Factor1 -> Factor2
Rule 41    Factor1 -> Constant
Rule 42    Factor2 -> MINUS Gen_Quad0 Constant
Rule 43    Factor2 -> PLUS Gen_Quad0 Constant
Rule 44    Params -> Params2
Rule 45    Params -> empty
Rule 46    Params1 -> Params2
Rule 47    Params2 -> SuperExpr Params3
Rule 48    Params2 -> STRING Params3
Rule 49    Params3 -> COMMA Params2
Rule 50    Params3 -> empty
Rule 51    Loop -> LOOP LPAREN SuperExpr RPAREN Block
Rule 52    Assign -> ID Seen_Operand EQUAL Seen_Operator Assign1
Rule 53    Assign1 -> SuperExpr Gen_Quad5
Rule 54    Assign1 -> Call
Rule 55    Assign1 -> STRING
Rule 56    Assign1 -> CCONST
Rule 57    Call -> ID LPAREN Params RPAREN
Rule 58    Read -> READ LPAREN Type COMMA ID RPAREN
Rule 59    Type -> Primitive
Rule 60    Type -> STRING
Rule 61    Print -> PRINT LPAREN Params1 RPAREN
Rule 62    Brush -> BRUSH LPAREN Color COMMA SuperExpr RPAREN
Rule 63    Color -> COLOR LPAREN SuperExpr COMMA SuperExpr COMMA SuperExpr RPAREN
Rule 64    PenDown -> PD LPAREN RPAREN
Rule 65    PenUp -> PU LPAREN RPAREN
Rule 66    Home -> HOME LPAREN RPAREN
Rule 67    Forward -> FD LPAREN SuperExpr RPAREN
Rule 68    Rotate -> RT LPAREN SuperExpr RPAREN
Rule 69    Circle -> CIRCLE LPAREN SuperExpr RPAREN
Rule 70    Arc -> ARC LPAREN SuperExpr COMMA SuperExpr RPAREN
Rule 71    Square -> SQUARE LPAREN SuperExpr RPAREN
Rule 72    Param -> Primitive ID Array1 Array1 Seen_Variable
Rule 73    Array1 -> LBRACKET RBRACKET
Rule 74    Array1 -> empty
Rule 75    Primitive -> INT
Rule 76    Primitive -> FLOAT
Rule 77    Primitive -> BOOL
Rule 78    Primitive -> CHAR
Rule 79    ParamList -> ParamList1
Rule 80    ParamList -> empty
Rule 81    ParamList1 -> Param ParamList2
Rule 82    ParamList2 -> COMMA ParamList1
Rule 83    ParamList2 -> empty
Rule 84    Instruction -> Instruction1 SEMI Seen_Semi Instruction
Rule 85    Instruction -> empty
Rule 86    Instruction1 -> Loop
Rule 87    Instruction1 -> Conditional
Rule 88    Instruction1 -> Assign
Rule 89    Instruction1 -> Call
Rule 90    Instruction1 -> Brush
Rule 91    Instruction1 -> Read
Rule 92    Instruction1 -> Print
Rule 93    Instruction1 -> PenDown
Rule 94    Instruction1 -> PenUp
Rule 95    Instruction1 -> Home
Rule 96    Instruction1 -> Forward
Rule 97    Instruction1 -> Rotate
Rule 98    Instruction1 -> Color
Rule 99    Instruction1 -> Circle
Rule 100   Instruction1 -> Arc
Rule 101   Instruction1 -> Square
Rule 102   Constant -> ID
Rule 103   Constant -> FCONST
Rule 104   Constant -> ICONST
Rule 105   Constant -> FALSE
Rule 106   Constant -> TRUE
Rule 107   Seen_Operand -> <empty>
Rule 108   Seen_Operator -> <empty>
Rule 109   Push_Expr -> <empty>
Rule 110   Pop_Expr -> <empty>
Rule 111   Gen_Quad0 -> <empty>
Rule 112   Gen_Quad1 -> <empty>
Rule 113   Gen_Quad2 -> <empty>
Rule 114   Gen_Quad3 -> <empty>
Rule 115   Gen_Quad4 -> <empty>
Rule 116   Gen_Quad5 -> <empty>
Rule 117   Seen_Variable -> <empty>
Rule 118   Seen_Semi -> <empty>
Rule 119   Push_Scope -> <empty>
Rule 120   Pop_Scope -> <empty>
Rule 121   empty -> <empty>
Rule 122   Program -> ASCII Program
Rule 123   Block -> LBRACE error RBRACE
Rule 124   FBlock -> LBRACE Declaration error RBRACE
Rule 125   RFBlock -> LBRACE Declaration error RETURN SuperExpr SEMI RBRACE
Rule 126   Circle -> CIRCLE LPAREN error RPAREN
Rule 127   SuperExpr -> Expression error SuperExpr1
Rule 128   Term1 -> DIVIDE error Term
Rule 129   Term1 -> TIMES error Term

Terminals, with rules where they appear

AND                  : 19
ARC                  : 70
ASCII                : 122
BOOL                 : 77
BRUSH                : 62
CCONST               : 56
CHAR                 : 78
CIRCLE               : 69 126
COLOR                : 63
COMMA                : 49 58 62 63 63 70 82
DIFFERENT            : 25
DIVIDE               : 35 128
ELSE                 : 16
EQUAL                : 52
FALSE                : 105
FCONST               : 103
FD                   : 67
FLOAT                : 76
GREATEQUAL           : 27
GREATHAN             : 24
HOME                 : 66
ICONST               : 5 104
ID                   : 3 10 11 52 57 58 72 102
IF                   : 15
INT                  : 75
LBRACE               : 12 13 14 123 124 125
LBRACKET             : 5 73
LESSEQUAL            : 28
LESSTHAN             : 23
LOOP                 : 51
LPAREN               : 2 10 11 15 38 51 57 58 61 62 63 64 65 66 67 68 69 70 71 126
MAIN                 : 2
MINUS                : 31 42
OR                   : 20
PD                   : 64
PLUS                 : 32 43
PRINT                : 61
PU                   : 65
RBRACE               : 12 13 14 123 124 125
RBRACKET             : 5 73
READ                 : 58
RETURN               : 14 125
RPAREN               : 2 10 11 15 38 51 57 58 61 62 63 64 65 66 67 68 69 70 71 126
RT                   : 68
SEMI                 : 3 14 84 125
SQUARE               : 71
STRING               : 48 55 60
TIMES                : 36 129
TRUE                 : 106
TWOEQUAL             : 26
VOID                 : 10
error                : 123 124 125 126 127 128 129

Nonterminals, with rules where they appear

Arc                  : 100
Array                : 3 3
Array1               : 72 72
Assign               : 88
Assign1              : 52
Block                : 15 16 51
Brush                : 90
Call                 : 54 89
Circle               : 99
Color                : 62 98
Conditional          : 87
Constant             : 41 42 43
Declaration          : 1 3 13 14 124 125
Else                 : 15
Expr                 : 22 23 24 25 26 27 28 31 32
Expr1                : 30
Expression           : 18 127
Expression1          : 22
FBlock               : 2 10
Factor               : 34
Factor1              : 39
Factor2              : 40
Forward              : 96
Function             : 1 10 11
Function1            : 7
Gen_Quad0            : 42 43
Gen_Quad1            : 34
Gen_Quad2            : 30
Gen_Quad3            : 22
Gen_Quad4            : 18
Gen_Quad5            : 53
Home                 : 95
Instruction          : 12 13 14 84
Instruction1         : 84
Loop                 : 86
Main                 : 1
Param                : 81
ParamList            : 10 11
ParamList1           : 79 82
ParamList2           : 81
Params               : 57
Params1              : 61
Params2              : 44 46 49
Params3              : 47 48
PenDown              : 93
PenUp                : 94
Pop_Expr             : 38
Pop_Scope            : 10 11
Primitive            : 3 11 59 72
Print                : 92
Program              : 122 0
Push_Expr            : 38
Push_Scope           : 2 10 11
RFBlock              : 11
RFunction            : 8
Read                 : 91
Rotate               : 97
Seen_Operand         : 39 52
Seen_Operator        : 19 20 23 24 25 26 27 28 31 32 35 36 52
Seen_Semi            : 84
Seen_Variable        : 3 72
Square               : 101
SuperExpr            : 14 15 19 20 38 47 51 53 62 63 63 63 67 68 69 70 70 71 125
SuperExpr1           : 18 127
Term                 : 30 35 36 128 129
Term1                : 34
Type                 : 58
empty                : 4 6 9 17 21 29 33 37 45 50 74 80 83 85

Parsing method: LALR

state 0

    (0) S' -> . Program
    (1) Program -> . Declaration Function Main
    (122) Program -> . ASCII Program
    (3) Declaration -> . Primitive ID Array Array Seen_Variable SEMI Declaration
    (4) Declaration -> . empty
    (75) Primitive -> . INT
    (76) Primitive -> . FLOAT
    (77) Primitive -> . BOOL
    (78) Primitive -> . CHAR
    (121) empty -> .

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    ASCII           shift and go to state 8
    INT             shift and go to state 2
    FLOAT           shift and go to state 3
    BOOL            shift and go to state 6
    CHAR            shift and go to state 4
    VOID            reduce using rule 121 (empty -> .)
    MAIN            reduce using rule 121 (empty -> .)

  ! INT             [ reduce using rule 121 (empty -> .) ]
  ! FLOAT           [ reduce using rule 121 (empty -> .) ]
  ! BOOL            [ reduce using rule 121 (empty -> .) ]
  ! CHAR            [ reduce using rule 121 (empty -> .) ]

    Primitive                      shift and go to state 1
    Program                        shift and go to state 5
    Declaration                    shift and go to state 7
    empty                          shift and go to state 9

state 1

    (3) Declaration -> Primitive . ID Array Array Seen_Variable SEMI Declaration

    ID              shift and go to state 10


state 2

    (75) Primitive -> INT .

    ID              reduce using rule 75 (Primitive -> INT .)
    COMMA           reduce using rule 75 (Primitive -> INT .)


state 3

    (76) Primitive -> FLOAT .

    ID              reduce using rule 76 (Primitive -> FLOAT .)
    COMMA           reduce using rule 76 (Primitive -> FLOAT .)


state 4

    (78) Primitive -> CHAR .

    ID              reduce using rule 78 (Primitive -> CHAR .)
    COMMA           reduce using rule 78 (Primitive -> CHAR .)


state 5

    (0) S' -> Program .



state 6

    (77) Primitive -> BOOL .

    ID              reduce using rule 77 (Primitive -> BOOL .)
    COMMA           reduce using rule 77 (Primitive -> BOOL .)


state 7

    (1) Program -> Declaration . Function Main
    (7) Function -> . Function1
    (8) Function -> . RFunction
    (9) Function -> . empty
    (10) Function1 -> . VOID ID Push_Scope LPAREN ParamList RPAREN FBlock Pop_Scope Function
    (11) RFunction -> . Primitive ID Push_Scope LPAREN ParamList RPAREN RFBlock Pop_Scope Function
    (121) empty -> .
    (75) Primitive -> . INT
    (76) Primitive -> . FLOAT
    (77) Primitive -> . BOOL
    (78) Primitive -> . CHAR

    VOID            shift and go to state 14
    MAIN            reduce using rule 121 (empty -> .)
    INT             shift and go to state 2
    FLOAT           shift and go to state 3
    BOOL            shift and go to state 6
    CHAR            shift and go to state 4

    Function                       shift and go to state 11
    Function1                      shift and go to state 12
    Primitive                      shift and go to state 13
    RFunction                      shift and go to state 15
    empty                          shift and go to state 16

state 8

    (122) Program -> ASCII . Program
    (1) Program -> . Declaration Function Main
    (122) Program -> . ASCII Program
    (3) Declaration -> . Primitive ID Array Array Seen_Variable SEMI Declaration
    (4) Declaration -> . empty
    (75) Primitive -> . INT
    (76) Primitive -> . FLOAT
    (77) Primitive -> . BOOL
    (78) Primitive -> . CHAR
    (121) empty -> .

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    ASCII           shift and go to state 8
    INT             shift and go to state 2
    FLOAT           shift and go to state 3
    BOOL            shift and go to state 6
    CHAR            shift and go to state 4
    VOID            reduce using rule 121 (empty -> .)
    MAIN            reduce using rule 121 (empty -> .)

  ! INT             [ reduce using rule 121 (empty -> .) ]
  ! FLOAT           [ reduce using rule 121 (empty -> .) ]
  ! BOOL            [ reduce using rule 121 (empty -> .) ]
  ! CHAR            [ reduce using rule 121 (empty -> .) ]

    Primitive                      shift and go to state 1
    Program                        shift and go to state 17
    Declaration                    shift and go to state 7
    empty                          shift and go to state 9

state 9

    (4) Declaration -> empty .

    VOID            reduce using rule 4 (Declaration -> empty .)
    INT             reduce using rule 4 (Declaration -> empty .)
    FLOAT           reduce using rule 4 (Declaration -> empty .)
    BOOL            reduce using rule 4 (Declaration -> empty .)
    CHAR            reduce using rule 4 (Declaration -> empty .)
    MAIN            reduce using rule 4 (Declaration -> empty .)
    error           reduce using rule 4 (Declaration -> empty .)
    LOOP            reduce using rule 4 (Declaration -> empty .)
    IF              reduce using rule 4 (Declaration -> empty .)
    ID              reduce using rule 4 (Declaration -> empty .)
    BRUSH           reduce using rule 4 (Declaration -> empty .)
    READ            reduce using rule 4 (Declaration -> empty .)
    PRINT           reduce using rule 4 (Declaration -> empty .)
    PD              reduce using rule 4 (Declaration -> empty .)
    PU              reduce using rule 4 (Declaration -> empty .)
    HOME            reduce using rule 4 (Declaration -> empty .)
    FD              reduce using rule 4 (Declaration -> empty .)
    RT              reduce using rule 4 (Declaration -> empty .)
    COLOR           reduce using rule 4 (Declaration -> empty .)
    CIRCLE          reduce using rule 4 (Declaration -> empty .)
    ARC             reduce using rule 4 (Declaration -> empty .)
    SQUARE          reduce using rule 4 (Declaration -> empty .)
    RBRACE          reduce using rule 4 (Declaration -> empty .)
    RETURN          reduce using rule 4 (Declaration -> empty .)


state 10

    (3) Declaration -> Primitive ID . Array Array Seen_Variable SEMI Declaration
    (5) Array -> . LBRACKET ICONST RBRACKET
    (6) Array -> . empty
    (121) empty -> .

  ! shift/reduce conflict for LBRACKET resolved as shift
    LBRACKET        shift and go to state 18
    SEMI            reduce using rule 121 (empty -> .)

  ! LBRACKET        [ reduce using rule 121 (empty -> .) ]

    Array                          shift and go to state 19
    empty                          shift and go to state 20

state 11

    (1) Program -> Declaration Function . Main
    (2) Main -> . MAIN Push_Scope LPAREN RPAREN FBlock

    MAIN            shift and go to state 21

    Main                           shift and go to state 22

state 12

    (7) Function -> Function1 .

    MAIN            reduce using rule 7 (Function -> Function1 .)


state 13

    (11) RFunction -> Primitive . ID Push_Scope LPAREN ParamList RPAREN RFBlock Pop_Scope Function

    ID              shift and go to state 23


state 14

    (10) Function1 -> VOID . ID Push_Scope LPAREN ParamList RPAREN FBlock Pop_Scope Function

    ID              shift and go to state 24


state 15

    (8) Function -> RFunction .

    MAIN            reduce using rule 8 (Function -> RFunction .)


state 16

    (9) Function -> empty .

    MAIN            reduce using rule 9 (Function -> empty .)


state 17

    (122) Program -> ASCII Program .

    $end            reduce using rule 122 (Program -> ASCII Program .)


state 18

    (5) Array -> LBRACKET . ICONST RBRACKET

    ICONST          shift and go to state 25


state 19

    (3) Declaration -> Primitive ID Array . Array Seen_Variable SEMI Declaration
    (5) Array -> . LBRACKET ICONST RBRACKET
    (6) Array -> . empty
    (121) empty -> .

    LBRACKET        shift and go to state 18
    SEMI            reduce using rule 121 (empty -> .)

    Array                          shift and go to state 26
    empty                          shift and go to state 20

state 20

    (6) Array -> empty .

    SEMI            reduce using rule 6 (Array -> empty .)
    LBRACKET        reduce using rule 6 (Array -> empty .)


state 21

    (2) Main -> MAIN . Push_Scope LPAREN RPAREN FBlock
    (119) Push_Scope -> .

    LPAREN          reduce using rule 119 (Push_Scope -> .)

    Push_Scope                     shift and go to state 27

state 22

    (1) Program -> Declaration Function Main .

    $end            reduce using rule 1 (Program -> Declaration Function Main .)


state 23

    (11) RFunction -> Primitive ID . Push_Scope LPAREN ParamList RPAREN RFBlock Pop_Scope Function
    (119) Push_Scope -> .

    LPAREN          reduce using rule 119 (Push_Scope -> .)

    Push_Scope                     shift and go to state 28

state 24

    (10) Function1 -> VOID ID . Push_Scope LPAREN ParamList RPAREN FBlock Pop_Scope Function
    (119) Push_Scope -> .

    LPAREN          reduce using rule 119 (Push_Scope -> .)

    Push_Scope                     shift and go to state 29

state 25

    (5) Array -> LBRACKET ICONST . RBRACKET

    RBRACKET        shift and go to state 30


state 26

    (3) Declaration -> Primitive ID Array Array . Seen_Variable SEMI Declaration
    (117) Seen_Variable -> .

    SEMI            reduce using rule 117 (Seen_Variable -> .)

    Seen_Variable                  shift and go to state 31

state 27

    (2) Main -> MAIN Push_Scope . LPAREN RPAREN FBlock

    LPAREN          shift and go to state 32


state 28

    (11) RFunction -> Primitive ID Push_Scope . LPAREN ParamList RPAREN RFBlock Pop_Scope Function

    LPAREN          shift and go to state 33


state 29

    (10) Function1 -> VOID ID Push_Scope . LPAREN ParamList RPAREN FBlock Pop_Scope Function

    LPAREN          shift and go to state 34


state 30

    (5) Array -> LBRACKET ICONST RBRACKET .

    SEMI            reduce using rule 5 (Array -> LBRACKET ICONST RBRACKET .)
    LBRACKET        reduce using rule 5 (Array -> LBRACKET ICONST RBRACKET .)


state 31

    (3) Declaration -> Primitive ID Array Array Seen_Variable . SEMI Declaration

    SEMI            shift and go to state 35


state 32

    (2) Main -> MAIN Push_Scope LPAREN . RPAREN FBlock

    RPAREN          shift and go to state 36


state 33

    (11) RFunction -> Primitive ID Push_Scope LPAREN . ParamList RPAREN RFBlock Pop_Scope Function
    (79) ParamList -> . ParamList1
    (80) ParamList -> . empty
    (81) ParamList1 -> . Param ParamList2
    (121) empty -> .
    (72) Param -> . Primitive ID Array1 Array1 Seen_Variable
    (75) Primitive -> . INT
    (76) Primitive -> . FLOAT
    (77) Primitive -> . BOOL
    (78) Primitive -> . CHAR

    RPAREN          reduce using rule 121 (empty -> .)
    INT             shift and go to state 2
    FLOAT           shift and go to state 3
    BOOL            shift and go to state 6
    CHAR            shift and go to state 4

    Primitive                      shift and go to state 37
    ParamList1                     shift and go to state 38
    Param                          shift and go to state 39
    ParamList                      shift and go to state 40
    empty                          shift and go to state 41

state 34

    (10) Function1 -> VOID ID Push_Scope LPAREN . ParamList RPAREN FBlock Pop_Scope Function
    (79) ParamList -> . ParamList1
    (80) ParamList -> . empty
    (81) ParamList1 -> . Param ParamList2
    (121) empty -> .
    (72) Param -> . Primitive ID Array1 Array1 Seen_Variable
    (75) Primitive -> . INT
    (76) Primitive -> . FLOAT
    (77) Primitive -> . BOOL
    (78) Primitive -> . CHAR

    RPAREN          reduce using rule 121 (empty -> .)
    INT             shift and go to state 2
    FLOAT           shift and go to state 3
    BOOL            shift and go to state 6
    CHAR            shift and go to state 4

    Primitive                      shift and go to state 37
    ParamList1                     shift and go to state 38
    Param                          shift and go to state 39
    ParamList                      shift and go to state 42
    empty                          shift and go to state 41

state 35

    (3) Declaration -> Primitive ID Array Array Seen_Variable SEMI . Declaration
    (3) Declaration -> . Primitive ID Array Array Seen_Variable SEMI Declaration
    (4) Declaration -> . empty
    (75) Primitive -> . INT
    (76) Primitive -> . FLOAT
    (77) Primitive -> . BOOL
    (78) Primitive -> . CHAR
    (121) empty -> .

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    INT             shift and go to state 2
    FLOAT           shift and go to state 3
    BOOL            shift and go to state 6
    CHAR            shift and go to state 4
    VOID            reduce using rule 121 (empty -> .)
    MAIN            reduce using rule 121 (empty -> .)
    error           reduce using rule 121 (empty -> .)
    LOOP            reduce using rule 121 (empty -> .)
    IF              reduce using rule 121 (empty -> .)
    ID              reduce using rule 121 (empty -> .)
    BRUSH           reduce using rule 121 (empty -> .)
    READ            reduce using rule 121 (empty -> .)
    PRINT           reduce using rule 121 (empty -> .)
    PD              reduce using rule 121 (empty -> .)
    PU              reduce using rule 121 (empty -> .)
    HOME            reduce using rule 121 (empty -> .)
    FD              reduce using rule 121 (empty -> .)
    RT              reduce using rule 121 (empty -> .)
    COLOR           reduce using rule 121 (empty -> .)
    CIRCLE          reduce using rule 121 (empty -> .)
    ARC             reduce using rule 121 (empty -> .)
    SQUARE          reduce using rule 121 (empty -> .)
    RBRACE          reduce using rule 121 (empty -> .)
    RETURN          reduce using rule 121 (empty -> .)

  ! INT             [ reduce using rule 121 (empty -> .) ]
  ! FLOAT           [ reduce using rule 121 (empty -> .) ]
  ! BOOL            [ reduce using rule 121 (empty -> .) ]
  ! CHAR            [ reduce using rule 121 (empty -> .) ]

    Primitive                      shift and go to state 1
    Declaration                    shift and go to state 43
    empty                          shift and go to state 9

state 36

    (2) Main -> MAIN Push_Scope LPAREN RPAREN . FBlock
    (13) FBlock -> . LBRACE Declaration Instruction RBRACE
    (124) FBlock -> . LBRACE Declaration error RBRACE

    LBRACE          shift and go to state 44

    FBlock                         shift and go to state 45

state 37

    (72) Param -> Primitive . ID Array1 Array1 Seen_Variable

    ID              shift and go to state 46


state 38

    (79) ParamList -> ParamList1 .

    RPAREN          reduce using rule 79 (ParamList -> ParamList1 .)


state 39

    (81) ParamList1 -> Param . ParamList2
    (82) ParamList2 -> . COMMA ParamList1
    (83) ParamList2 -> . empty
    (121) empty -> .

    COMMA           shift and go to state 48
    RPAREN          reduce using rule 121 (empty -> .)

    empty                          shift and go to state 47
    ParamList2                     shift and go to state 49

state 40

    (11) RFunction -> Primitive ID Push_Scope LPAREN ParamList . RPAREN RFBlock Pop_Scope Function

    RPAREN          shift and go to state 50


state 41

    (80) ParamList -> empty .

    RPAREN          reduce using rule 80 (ParamList -> empty .)


state 42

    (10) Function1 -> VOID ID Push_Scope LPAREN ParamList . RPAREN FBlock Pop_Scope Function

    RPAREN          shift and go to state 51


state 43

    (3) Declaration -> Primitive ID Array Array Seen_Variable SEMI Declaration .

    VOID            reduce using rule 3 (Declaration -> Primitive ID Array Array Seen_Variable SEMI Declaration .)
    INT             reduce using rule 3 (Declaration -> Primitive ID Array Array Seen_Variable SEMI Declaration .)
    FLOAT           reduce using rule 3 (Declaration -> Primitive ID Array Array Seen_Variable SEMI Declaration .)
    BOOL            reduce using rule 3 (Declaration -> Primitive ID Array Array Seen_Variable SEMI Declaration .)
    CHAR            reduce using rule 3 (Declaration -> Primitive ID Array Array Seen_Variable SEMI Declaration .)
    MAIN            reduce using rule 3 (Declaration -> Primitive ID Array Array Seen_Variable SEMI Declaration .)
    error           reduce using rule 3 (Declaration -> Primitive ID Array Array Seen_Variable SEMI Declaration .)
    LOOP            reduce using rule 3 (Declaration -> Primitive ID Array Array Seen_Variable SEMI Declaration .)
    IF              reduce using rule 3 (Declaration -> Primitive ID Array Array Seen_Variable SEMI Declaration .)
    ID              reduce using rule 3 (Declaration -> Primitive ID Array Array Seen_Variable SEMI Declaration .)
    BRUSH           reduce using rule 3 (Declaration -> Primitive ID Array Array Seen_Variable SEMI Declaration .)
    READ            reduce using rule 3 (Declaration -> Primitive ID Array Array Seen_Variable SEMI Declaration .)
    PRINT           reduce using rule 3 (Declaration -> Primitive ID Array Array Seen_Variable SEMI Declaration .)
    PD              reduce using rule 3 (Declaration -> Primitive ID Array Array Seen_Variable SEMI Declaration .)
    PU              reduce using rule 3 (Declaration -> Primitive ID Array Array Seen_Variable SEMI Declaration .)
    HOME            reduce using rule 3 (Declaration -> Primitive ID Array Array Seen_Variable SEMI Declaration .)
    FD              reduce using rule 3 (Declaration -> Primitive ID Array Array Seen_Variable SEMI Declaration .)
    RT              reduce using rule 3 (Declaration -> Primitive ID Array Array Seen_Variable SEMI Declaration .)
    COLOR           reduce using rule 3 (Declaration -> Primitive ID Array Array Seen_Variable SEMI Declaration .)
    CIRCLE          reduce using rule 3 (Declaration -> Primitive ID Array Array Seen_Variable SEMI Declaration .)
    ARC             reduce using rule 3 (Declaration -> Primitive ID Array Array Seen_Variable SEMI Declaration .)
    SQUARE          reduce using rule 3 (Declaration -> Primitive ID Array Array Seen_Variable SEMI Declaration .)
    RBRACE          reduce using rule 3 (Declaration -> Primitive ID Array Array Seen_Variable SEMI Declaration .)
    RETURN          reduce using rule 3 (Declaration -> Primitive ID Array Array Seen_Variable SEMI Declaration .)


state 44

    (13) FBlock -> LBRACE . Declaration Instruction RBRACE
    (124) FBlock -> LBRACE . Declaration error RBRACE
    (3) Declaration -> . Primitive ID Array Array Seen_Variable SEMI Declaration
    (4) Declaration -> . empty
    (75) Primitive -> . INT
    (76) Primitive -> . FLOAT
    (77) Primitive -> . BOOL
    (78) Primitive -> . CHAR
    (121) empty -> .

    INT             shift and go to state 2
    FLOAT           shift and go to state 3
    BOOL            shift and go to state 6
    CHAR            shift and go to state 4
    error           reduce using rule 121 (empty -> .)
    LOOP            reduce using rule 121 (empty -> .)
    IF              reduce using rule 121 (empty -> .)
    ID              reduce using rule 121 (empty -> .)
    BRUSH           reduce using rule 121 (empty -> .)
    READ            reduce using rule 121 (empty -> .)
    PRINT           reduce using rule 121 (empty -> .)
    PD              reduce using rule 121 (empty -> .)
    PU              reduce using rule 121 (empty -> .)
    HOME            reduce using rule 121 (empty -> .)
    FD              reduce using rule 121 (empty -> .)
    RT              reduce using rule 121 (empty -> .)
    COLOR           reduce using rule 121 (empty -> .)
    CIRCLE          reduce using rule 121 (empty -> .)
    ARC             reduce using rule 121 (empty -> .)
    SQUARE          reduce using rule 121 (empty -> .)
    RBRACE          reduce using rule 121 (empty -> .)

    Primitive                      shift and go to state 1
    Declaration                    shift and go to state 52
    empty                          shift and go to state 9

state 45

    (2) Main -> MAIN Push_Scope LPAREN RPAREN FBlock .

    $end            reduce using rule 2 (Main -> MAIN Push_Scope LPAREN RPAREN FBlock .)


state 46

    (72) Param -> Primitive ID . Array1 Array1 Seen_Variable
    (73) Array1 -> . LBRACKET RBRACKET
    (74) Array1 -> . empty
    (121) empty -> .

  ! shift/reduce conflict for LBRACKET resolved as shift
    LBRACKET        shift and go to state 54
    COMMA           reduce using rule 121 (empty -> .)
    RPAREN          reduce using rule 121 (empty -> .)

  ! LBRACKET        [ reduce using rule 121 (empty -> .) ]

    Array1                         shift and go to state 53
    empty                          shift and go to state 55

state 47

    (83) ParamList2 -> empty .

    RPAREN          reduce using rule 83 (ParamList2 -> empty .)


state 48

    (82) ParamList2 -> COMMA . ParamList1
    (81) ParamList1 -> . Param ParamList2
    (72) Param -> . Primitive ID Array1 Array1 Seen_Variable
    (75) Primitive -> . INT
    (76) Primitive -> . FLOAT
    (77) Primitive -> . BOOL
    (78) Primitive -> . CHAR

    INT             shift and go to state 2
    FLOAT           shift and go to state 3
    BOOL            shift and go to state 6
    CHAR            shift and go to state 4

    Primitive                      shift and go to state 37
    ParamList1                     shift and go to state 56
    Param                          shift and go to state 39

state 49

    (81) ParamList1 -> Param ParamList2 .

    RPAREN          reduce using rule 81 (ParamList1 -> Param ParamList2 .)


state 50

    (11) RFunction -> Primitive ID Push_Scope LPAREN ParamList RPAREN . RFBlock Pop_Scope Function
    (14) RFBlock -> . LBRACE Declaration Instruction RETURN SuperExpr SEMI RBRACE
    (125) RFBlock -> . LBRACE Declaration error RETURN SuperExpr SEMI RBRACE

    LBRACE          shift and go to state 57

    RFBlock                        shift and go to state 58

state 51

    (10) Function1 -> VOID ID Push_Scope LPAREN ParamList RPAREN . FBlock Pop_Scope Function
    (13) FBlock -> . LBRACE Declaration Instruction RBRACE
    (124) FBlock -> . LBRACE Declaration error RBRACE

    LBRACE          shift and go to state 44

    FBlock                         shift and go to state 59

state 52

    (13) FBlock -> LBRACE Declaration . Instruction RBRACE
    (124) FBlock -> LBRACE Declaration . error RBRACE
    (84) Instruction -> . Instruction1 SEMI Seen_Semi Instruction
    (85) Instruction -> . empty
    (86) Instruction1 -> . Loop
    (87) Instruction1 -> . Conditional
    (88) Instruction1 -> . Assign
    (89) Instruction1 -> . Call
    (90) Instruction1 -> . Brush
    (91) Instruction1 -> . Read
    (92) Instruction1 -> . Print
    (93) Instruction1 -> . PenDown
    (94) Instruction1 -> . PenUp
    (95) Instruction1 -> . Home
    (96) Instruction1 -> . Forward
    (97) Instruction1 -> . Rotate
    (98) Instruction1 -> . Color
    (99) Instruction1 -> . Circle
    (100) Instruction1 -> . Arc
    (101) Instruction1 -> . Square
    (121) empty -> .
    (51) Loop -> . LOOP LPAREN SuperExpr RPAREN Block
    (15) Conditional -> . IF LPAREN SuperExpr RPAREN Block Else
    (52) Assign -> . ID Seen_Operand EQUAL Seen_Operator Assign1
    (57) Call -> . ID LPAREN Params RPAREN
    (62) Brush -> . BRUSH LPAREN Color COMMA SuperExpr RPAREN
    (58) Read -> . READ LPAREN Type COMMA ID RPAREN
    (61) Print -> . PRINT LPAREN Params1 RPAREN
    (64) PenDown -> . PD LPAREN RPAREN
    (65) PenUp -> . PU LPAREN RPAREN
    (66) Home -> . HOME LPAREN RPAREN
    (67) Forward -> . FD LPAREN SuperExpr RPAREN
    (68) Rotate -> . RT LPAREN SuperExpr RPAREN
    (63) Color -> . COLOR LPAREN SuperExpr COMMA SuperExpr COMMA SuperExpr RPAREN
    (69) Circle -> . CIRCLE LPAREN SuperExpr RPAREN
    (126) Circle -> . CIRCLE LPAREN error RPAREN
    (70) Arc -> . ARC LPAREN SuperExpr COMMA SuperExpr RPAREN
    (71) Square -> . SQUARE LPAREN SuperExpr RPAREN

    error           shift and go to state 90
    RBRACE          reduce using rule 121 (empty -> .)
    LOOP            shift and go to state 94
    IF              shift and go to state 83
    ID              shift and go to state 80
    BRUSH           shift and go to state 76
    READ            shift and go to state 61
    PRINT           shift and go to state 62
    PD              shift and go to state 74
    PU              shift and go to state 71
    HOME            shift and go to state 68
    FD              shift and go to state 84
    RT              shift and go to state 70
    COLOR           shift and go to state 87
    CIRCLE          shift and go to state 92
    ARC             shift and go to state 73
    SQUARE          shift and go to state 65

    PenUp                          shift and go to state 60
    Print                          shift and go to state 63
    PenDown                        shift and go to state 64
    Call                           shift and go to state 66
    Forward                        shift and go to state 67
    Circle                         shift and go to state 69
    Read                           shift and go to state 72
    empty                          shift and go to state 75
    Rotate                         shift and go to state 77
    Instruction                    shift and go to state 78
    Square                         shift and go to state 79
    Assign                         shift and go to state 81
    Loop                           shift and go to state 82
    Color                          shift and go to state 85
    Conditional                    shift and go to state 86
    Arc                            shift and go to state 88
    Brush                          shift and go to state 89
    Home                           shift and go to state 91
    Instruction1                   shift and go to state 93

state 53

    (72) Param -> Primitive ID Array1 . Array1 Seen_Variable
    (73) Array1 -> . LBRACKET RBRACKET
    (74) Array1 -> . empty
    (121) empty -> .

    LBRACKET        shift and go to state 54
    COMMA           reduce using rule 121 (empty -> .)
    RPAREN          reduce using rule 121 (empty -> .)

    Array1                         shift and go to state 95
    empty                          shift and go to state 55

state 54

    (73) Array1 -> LBRACKET . RBRACKET

    RBRACKET        shift and go to state 96


state 55

    (74) Array1 -> empty .

    COMMA           reduce using rule 74 (Array1 -> empty .)
    RPAREN          reduce using rule 74 (Array1 -> empty .)
    LBRACKET        reduce using rule 74 (Array1 -> empty .)


state 56

    (82) ParamList2 -> COMMA ParamList1 .

    RPAREN          reduce using rule 82 (ParamList2 -> COMMA ParamList1 .)


state 57

    (14) RFBlock -> LBRACE . Declaration Instruction RETURN SuperExpr SEMI RBRACE
    (125) RFBlock -> LBRACE . Declaration error RETURN SuperExpr SEMI RBRACE
    (3) Declaration -> . Primitive ID Array Array Seen_Variable SEMI Declaration
    (4) Declaration -> . empty
    (75) Primitive -> . INT
    (76) Primitive -> . FLOAT
    (77) Primitive -> . BOOL
    (78) Primitive -> . CHAR
    (121) empty -> .

    INT             shift and go to state 2
    FLOAT           shift and go to state 3
    BOOL            shift and go to state 6
    CHAR            shift and go to state 4
    error           reduce using rule 121 (empty -> .)
    LOOP            reduce using rule 121 (empty -> .)
    IF              reduce using rule 121 (empty -> .)
    ID              reduce using rule 121 (empty -> .)
    BRUSH           reduce using rule 121 (empty -> .)
    READ            reduce using rule 121 (empty -> .)
    PRINT           reduce using rule 121 (empty -> .)
    PD              reduce using rule 121 (empty -> .)
    PU              reduce using rule 121 (empty -> .)
    HOME            reduce using rule 121 (empty -> .)
    FD              reduce using rule 121 (empty -> .)
    RT              reduce using rule 121 (empty -> .)
    COLOR           reduce using rule 121 (empty -> .)
    CIRCLE          reduce using rule 121 (empty -> .)
    ARC             reduce using rule 121 (empty -> .)
    SQUARE          reduce using rule 121 (empty -> .)
    RETURN          reduce using rule 121 (empty -> .)

    Primitive                      shift and go to state 1
    Declaration                    shift and go to state 97
    empty                          shift and go to state 9

state 58

    (11) RFunction -> Primitive ID Push_Scope LPAREN ParamList RPAREN RFBlock . Pop_Scope Function
    (120) Pop_Scope -> .

    VOID            reduce using rule 120 (Pop_Scope -> .)
    INT             reduce using rule 120 (Pop_Scope -> .)
    FLOAT           reduce using rule 120 (Pop_Scope -> .)
    BOOL            reduce using rule 120 (Pop_Scope -> .)
    CHAR            reduce using rule 120 (Pop_Scope -> .)
    MAIN            reduce using rule 120 (Pop_Scope -> .)

    Pop_Scope                      shift and go to state 98

state 59

    (10) Function1 -> VOID ID Push_Scope LPAREN ParamList RPAREN FBlock . Pop_Scope Function
    (120) Pop_Scope -> .

    VOID            reduce using rule 120 (Pop_Scope -> .)
    INT             reduce using rule 120 (Pop_Scope -> .)
    FLOAT           reduce using rule 120 (Pop_Scope -> .)
    BOOL            reduce using rule 120 (Pop_Scope -> .)
    CHAR            reduce using rule 120 (Pop_Scope -> .)
    MAIN            reduce using rule 120 (Pop_Scope -> .)

    Pop_Scope                      shift and go to state 99

state 60

    (94) Instruction1 -> PenUp .

    SEMI            reduce using rule 94 (Instruction1 -> PenUp .)


state 61

    (58) Read -> READ . LPAREN Type COMMA ID RPAREN

    LPAREN          shift and go to state 100


state 62

    (61) Print -> PRINT . LPAREN Params1 RPAREN

    LPAREN          shift and go to state 101


state 63

    (92) Instruction1 -> Print .

    SEMI            reduce using rule 92 (Instruction1 -> Print .)


state 64

    (93) Instruction1 -> PenDown .

    SEMI            reduce using rule 93 (Instruction1 -> PenDown .)


state 65

    (71) Square -> SQUARE . LPAREN SuperExpr RPAREN

    LPAREN          shift and go to state 102


state 66

    (89) Instruction1 -> Call .

    SEMI            reduce using rule 89 (Instruction1 -> Call .)


state 67

    (96) Instruction1 -> Forward .

    SEMI            reduce using rule 96 (Instruction1 -> Forward .)


state 68

    (66) Home -> HOME . LPAREN RPAREN

    LPAREN          shift and go to state 103


state 69

    (99) Instruction1 -> Circle .

    SEMI            reduce using rule 99 (Instruction1 -> Circle .)


state 70

    (68) Rotate -> RT . LPAREN SuperExpr RPAREN

    LPAREN          shift and go to state 104


state 71

    (65) PenUp -> PU . LPAREN RPAREN

    LPAREN          shift and go to state 105


state 72

    (91) Instruction1 -> Read .

    SEMI            reduce using rule 91 (Instruction1 -> Read .)


state 73

    (70) Arc -> ARC . LPAREN SuperExpr COMMA SuperExpr RPAREN

    LPAREN          shift and go to state 106


state 74

    (64) PenDown -> PD . LPAREN RPAREN

    LPAREN          shift and go to state 107


state 75

    (85) Instruction -> empty .

    RBRACE          reduce using rule 85 (Instruction -> empty .)
    RETURN          reduce using rule 85 (Instruction -> empty .)


state 76

    (62) Brush -> BRUSH . LPAREN Color COMMA SuperExpr RPAREN

    LPAREN          shift and go to state 108


state 77

    (97) Instruction1 -> Rotate .

    SEMI            reduce using rule 97 (Instruction1 -> Rotate .)


state 78

    (13) FBlock -> LBRACE Declaration Instruction . RBRACE

    RBRACE          shift and go to state 109


state 79

    (101) Instruction1 -> Square .

    SEMI            reduce using rule 101 (Instruction1 -> Square .)


state 80

    (52) Assign -> ID . Seen_Operand EQUAL Seen_Operator Assign1
    (57) Call -> ID . LPAREN Params RPAREN
    (107) Seen_Operand -> .

    LPAREN          shift and go to state 110
    EQUAL           reduce using rule 107 (Seen_Operand -> .)

    Seen_Operand                   shift and go to state 111

state 81

    (88) Instruction1 -> Assign .

    SEMI            reduce using rule 88 (Instruction1 -> Assign .)


state 82

    (86) Instruction1 -> Loop .

    SEMI            reduce using rule 86 (Instruction1 -> Loop .)


state 83

    (15) Conditional -> IF . LPAREN SuperExpr RPAREN Block Else

    LPAREN          shift and go to state 112


state 84

    (67) Forward -> FD . LPAREN SuperExpr RPAREN

    LPAREN          shift and go to state 113


state 85

    (98) Instruction1 -> Color .

    SEMI            reduce using rule 98 (Instruction1 -> Color .)


state 86

    (87) Instruction1 -> Conditional .

    SEMI            reduce using rule 87 (Instruction1 -> Conditional .)


state 87

    (63) Color -> COLOR . LPAREN SuperExpr COMMA SuperExpr COMMA SuperExpr RPAREN

    LPAREN          shift and go to state 114


state 88

    (100) Instruction1 -> Arc .

    SEMI            reduce using rule 100 (Instruction1 -> Arc .)


state 89

    (90) Instruction1 -> Brush .

    SEMI            reduce using rule 90 (Instruction1 -> Brush .)


state 90

    (124) FBlock -> LBRACE Declaration error . RBRACE

    RBRACE          shift and go to state 115


state 91

    (95) Instruction1 -> Home .

    SEMI            reduce using rule 95 (Instruction1 -> Home .)


state 92

    (69) Circle -> CIRCLE . LPAREN SuperExpr RPAREN
    (126) Circle -> CIRCLE . LPAREN error RPAREN

    LPAREN          shift and go to state 116


state 93

    (84) Instruction -> Instruction1 . SEMI Seen_Semi Instruction

    SEMI            shift and go to state 117


state 94

    (51) Loop -> LOOP . LPAREN SuperExpr RPAREN Block

    LPAREN          shift and go to state 118


state 95

    (72) Param -> Primitive ID Array1 Array1 . Seen_Variable
    (117) Seen_Variable -> .

    COMMA           reduce using rule 117 (Seen_Variable -> .)
    RPAREN          reduce using rule 117 (Seen_Variable -> .)

    Seen_Variable                  shift and go to state 119

state 96

    (73) Array1 -> LBRACKET RBRACKET .

    COMMA           reduce using rule 73 (Array1 -> LBRACKET RBRACKET .)
    RPAREN          reduce using rule 73 (Array1 -> LBRACKET RBRACKET .)
    LBRACKET        reduce using rule 73 (Array1 -> LBRACKET RBRACKET .)


state 97

    (14) RFBlock -> LBRACE Declaration . Instruction RETURN SuperExpr SEMI RBRACE
    (125) RFBlock -> LBRACE Declaration . error RETURN SuperExpr SEMI RBRACE
    (84) Instruction -> . Instruction1 SEMI Seen_Semi Instruction
    (85) Instruction -> . empty
    (86) Instruction1 -> . Loop
    (87) Instruction1 -> . Conditional
    (88) Instruction1 -> . Assign
    (89) Instruction1 -> . Call
    (90) Instruction1 -> . Brush
    (91) Instruction1 -> . Read
    (92) Instruction1 -> . Print
    (93) Instruction1 -> . PenDown
    (94) Instruction1 -> . PenUp
    (95) Instruction1 -> . Home
    (96) Instruction1 -> . Forward
    (97) Instruction1 -> . Rotate
    (98) Instruction1 -> . Color
    (99) Instruction1 -> . Circle
    (100) Instruction1 -> . Arc
    (101) Instruction1 -> . Square
    (121) empty -> .
    (51) Loop -> . LOOP LPAREN SuperExpr RPAREN Block
    (15) Conditional -> . IF LPAREN SuperExpr RPAREN Block Else
    (52) Assign -> . ID Seen_Operand EQUAL Seen_Operator Assign1
    (57) Call -> . ID LPAREN Params RPAREN
    (62) Brush -> . BRUSH LPAREN Color COMMA SuperExpr RPAREN
    (58) Read -> . READ LPAREN Type COMMA ID RPAREN
    (61) Print -> . PRINT LPAREN Params1 RPAREN
    (64) PenDown -> . PD LPAREN RPAREN
    (65) PenUp -> . PU LPAREN RPAREN
    (66) Home -> . HOME LPAREN RPAREN
    (67) Forward -> . FD LPAREN SuperExpr RPAREN
    (68) Rotate -> . RT LPAREN SuperExpr RPAREN
    (63) Color -> . COLOR LPAREN SuperExpr COMMA SuperExpr COMMA SuperExpr RPAREN
    (69) Circle -> . CIRCLE LPAREN SuperExpr RPAREN
    (126) Circle -> . CIRCLE LPAREN error RPAREN
    (70) Arc -> . ARC LPAREN SuperExpr COMMA SuperExpr RPAREN
    (71) Square -> . SQUARE LPAREN SuperExpr RPAREN

    error           shift and go to state 121
    RETURN          reduce using rule 121 (empty -> .)
    LOOP            shift and go to state 94
    IF              shift and go to state 83
    ID              shift and go to state 80
    BRUSH           shift and go to state 76
    READ            shift and go to state 61
    PRINT           shift and go to state 62
    PD              shift and go to state 74
    PU              shift and go to state 71
    HOME            shift and go to state 68
    FD              shift and go to state 84
    RT              shift and go to state 70
    COLOR           shift and go to state 87
    CIRCLE          shift and go to state 92
    ARC             shift and go to state 73
    SQUARE          shift and go to state 65

    PenUp                          shift and go to state 60
    Print                          shift and go to state 63
    PenDown                        shift and go to state 64
    Call                           shift and go to state 66
    Forward                        shift and go to state 67
    Circle                         shift and go to state 69
    Read                           shift and go to state 72
    empty                          shift and go to state 75
    Rotate                         shift and go to state 77
    Instruction                    shift and go to state 120
    Square                         shift and go to state 79
    Assign                         shift and go to state 81
    Loop                           shift and go to state 82
    Color                          shift and go to state 85
    Conditional                    shift and go to state 86
    Arc                            shift and go to state 88
    Brush                          shift and go to state 89
    Home                           shift and go to state 91
    Instruction1                   shift and go to state 93

state 98

    (11) RFunction -> Primitive ID Push_Scope LPAREN ParamList RPAREN RFBlock Pop_Scope . Function
    (7) Function -> . Function1
    (8) Function -> . RFunction
    (9) Function -> . empty
    (10) Function1 -> . VOID ID Push_Scope LPAREN ParamList RPAREN FBlock Pop_Scope Function
    (11) RFunction -> . Primitive ID Push_Scope LPAREN ParamList RPAREN RFBlock Pop_Scope Function
    (121) empty -> .
    (75) Primitive -> . INT
    (76) Primitive -> . FLOAT
    (77) Primitive -> . BOOL
    (78) Primitive -> . CHAR

    VOID            shift and go to state 14
    MAIN            reduce using rule 121 (empty -> .)
    INT             shift and go to state 2
    FLOAT           shift and go to state 3
    BOOL            shift and go to state 6
    CHAR            shift and go to state 4

    Function                       shift and go to state 122
    Function1                      shift and go to state 12
    Primitive                      shift and go to state 13
    RFunction                      shift and go to state 15
    empty                          shift and go to state 16

state 99

    (10) Function1 -> VOID ID Push_Scope LPAREN ParamList RPAREN FBlock Pop_Scope . Function
    (7) Function -> . Function1
    (8) Function -> . RFunction
    (9) Function -> . empty
    (10) Function1 -> . VOID ID Push_Scope LPAREN ParamList RPAREN FBlock Pop_Scope Function
    (11) RFunction -> . Primitive ID Push_Scope LPAREN ParamList RPAREN RFBlock Pop_Scope Function
    (121) empty -> .
    (75) Primitive -> . INT
    (76) Primitive -> . FLOAT
    (77) Primitive -> . BOOL
    (78) Primitive -> . CHAR

    VOID            shift and go to state 14
    MAIN            reduce using rule 121 (empty -> .)
    INT             shift and go to state 2
    FLOAT           shift and go to state 3
    BOOL            shift and go to state 6
    CHAR            shift and go to state 4

    Function                       shift and go to state 123
    Function1                      shift and go to state 12
    Primitive                      shift and go to state 13
    RFunction                      shift and go to state 15
    empty                          shift and go to state 16

state 100

    (58) Read -> READ LPAREN . Type COMMA ID RPAREN
    (59) Type -> . Primitive
    (60) Type -> . STRING
    (75) Primitive -> . INT
    (76) Primitive -> . FLOAT
    (77) Primitive -> . BOOL
    (78) Primitive -> . CHAR

    STRING          shift and go to state 125
    INT             shift and go to state 2
    FLOAT           shift and go to state 3
    BOOL            shift and go to state 6
    CHAR            shift and go to state 4

    Primitive                      shift and go to state 124
    Type                           shift and go to state 126

state 101

    (61) Print -> PRINT LPAREN . Params1 RPAREN
    (46) Params1 -> . Params2
    (47) Params2 -> . SuperExpr Params3
    (48) Params2 -> . STRING Params3
    (18) SuperExpr -> . Expression Gen_Quad4 SuperExpr1
    (127) SuperExpr -> . Expression error SuperExpr1
    (22) Expression -> . Expr Expression1 Gen_Quad3
    (30) Expr -> . Term Gen_Quad2 Expr1
    (34) Term -> . Factor Gen_Quad1 Term1
    (38) Factor -> . LPAREN Push_Expr SuperExpr RPAREN Pop_Expr
    (39) Factor -> . Factor1 Seen_Operand
    (40) Factor1 -> . Factor2
    (41) Factor1 -> . Constant
    (42) Factor2 -> . MINUS Gen_Quad0 Constant
    (43) Factor2 -> . PLUS Gen_Quad0 Constant
    (102) Constant -> . ID
    (103) Constant -> . FCONST
    (104) Constant -> . ICONST
    (105) Constant -> . FALSE
    (106) Constant -> . TRUE

    STRING          shift and go to state 137
    LPAREN          shift and go to state 141
    MINUS           shift and go to state 132
    PLUS            shift and go to state 135
    ID              shift and go to state 144
    FCONST          shift and go to state 134
    ICONST          shift and go to state 140
    FALSE           shift and go to state 142
    TRUE            shift and go to state 131

    Params1                        shift and go to state 127
    Params2                        shift and go to state 128
    SuperExpr                      shift and go to state 129
    Factor                         shift and go to state 130
    Term                           shift and go to state 136
    Factor1                        shift and go to state 133
    Factor2                        shift and go to state 138
    Expr                           shift and go to state 139
    Expression                     shift and go to state 143
    Constant                       shift and go to state 145

state 102

    (71) Square -> SQUARE LPAREN . SuperExpr RPAREN
    (18) SuperExpr -> . Expression Gen_Quad4 SuperExpr1
    (127) SuperExpr -> . Expression error SuperExpr1
    (22) Expression -> . Expr Expression1 Gen_Quad3
    (30) Expr -> . Term Gen_Quad2 Expr1
    (34) Term -> . Factor Gen_Quad1 Term1
    (38) Factor -> . LPAREN Push_Expr SuperExpr RPAREN Pop_Expr
    (39) Factor -> . Factor1 Seen_Operand
    (40) Factor1 -> . Factor2
    (41) Factor1 -> . Constant
    (42) Factor2 -> . MINUS Gen_Quad0 Constant
    (43) Factor2 -> . PLUS Gen_Quad0 Constant
    (102) Constant -> . ID
    (103) Constant -> . FCONST
    (104) Constant -> . ICONST
    (105) Constant -> . FALSE
    (106) Constant -> . TRUE

    LPAREN          shift and go to state 141
    MINUS           shift and go to state 132
    PLUS            shift and go to state 135
    ID              shift and go to state 144
    FCONST          shift and go to state 134
    ICONST          shift and go to state 140
    FALSE           shift and go to state 142
    TRUE            shift and go to state 131

    Term                           shift and go to state 136
    Constant                       shift and go to state 145
    Factor1                        shift and go to state 133
    Factor2                        shift and go to state 138
    SuperExpr                      shift and go to state 146
    Factor                         shift and go to state 130
    Expr                           shift and go to state 139
    Expression                     shift and go to state 143

state 103

    (66) Home -> HOME LPAREN . RPAREN

    RPAREN          shift and go to state 147


state 104

    (68) Rotate -> RT LPAREN . SuperExpr RPAREN
    (18) SuperExpr -> . Expression Gen_Quad4 SuperExpr1
    (127) SuperExpr -> . Expression error SuperExpr1
    (22) Expression -> . Expr Expression1 Gen_Quad3
    (30) Expr -> . Term Gen_Quad2 Expr1
    (34) Term -> . Factor Gen_Quad1 Term1
    (38) Factor -> . LPAREN Push_Expr SuperExpr RPAREN Pop_Expr
    (39) Factor -> . Factor1 Seen_Operand
    (40) Factor1 -> . Factor2
    (41) Factor1 -> . Constant
    (42) Factor2 -> . MINUS Gen_Quad0 Constant
    (43) Factor2 -> . PLUS Gen_Quad0 Constant
    (102) Constant -> . ID
    (103) Constant -> . FCONST
    (104) Constant -> . ICONST
    (105) Constant -> . FALSE
    (106) Constant -> . TRUE

    LPAREN          shift and go to state 141
    MINUS           shift and go to state 132
    PLUS            shift and go to state 135
    ID              shift and go to state 144
    FCONST          shift and go to state 134
    ICONST          shift and go to state 140
    FALSE           shift and go to state 142
    TRUE            shift and go to state 131

    Term                           shift and go to state 136
    Constant                       shift and go to state 145
    Factor1                        shift and go to state 133
    Factor2                        shift and go to state 138
    SuperExpr                      shift and go to state 148
    Factor                         shift and go to state 130
    Expr                           shift and go to state 139
    Expression                     shift and go to state 143

state 105

    (65) PenUp -> PU LPAREN . RPAREN

    RPAREN          shift and go to state 149


state 106

    (70) Arc -> ARC LPAREN . SuperExpr COMMA SuperExpr RPAREN
    (18) SuperExpr -> . Expression Gen_Quad4 SuperExpr1
    (127) SuperExpr -> . Expression error SuperExpr1
    (22) Expression -> . Expr Expression1 Gen_Quad3
    (30) Expr -> . Term Gen_Quad2 Expr1
    (34) Term -> . Factor Gen_Quad1 Term1
    (38) Factor -> . LPAREN Push_Expr SuperExpr RPAREN Pop_Expr
    (39) Factor -> . Factor1 Seen_Operand
    (40) Factor1 -> . Factor2
    (41) Factor1 -> . Constant
    (42) Factor2 -> . MINUS Gen_Quad0 Constant
    (43) Factor2 -> . PLUS Gen_Quad0 Constant
    (102) Constant -> . ID
    (103) Constant -> . FCONST
    (104) Constant -> . ICONST
    (105) Constant -> . FALSE
    (106) Constant -> . TRUE

    LPAREN          shift and go to state 141
    MINUS           shift and go to state 132
    PLUS            shift and go to state 135
    ID              shift and go to state 144
    FCONST          shift and go to state 134
    ICONST          shift and go to state 140
    FALSE           shift and go to state 142
    TRUE            shift and go to state 131

    Term                           shift and go to state 136
    Constant                       shift and go to state 145
    Factor1                        shift and go to state 133
    Factor2                        shift and go to state 138
    SuperExpr                      shift and go to state 150
    Factor                         shift and go to state 130
    Expr                           shift and go to state 139
    Expression                     shift and go to state 143

state 107

    (64) PenDown -> PD LPAREN . RPAREN

    RPAREN          shift and go to state 151


state 108

    (62) Brush -> BRUSH LPAREN . Color COMMA SuperExpr RPAREN
    (63) Color -> . COLOR LPAREN SuperExpr COMMA SuperExpr COMMA SuperExpr RPAREN

    COLOR           shift and go to state 87

    Color                          shift and go to state 152

state 109

    (13) FBlock -> LBRACE Declaration Instruction RBRACE .

    $end            reduce using rule 13 (FBlock -> LBRACE Declaration Instruction RBRACE .)
    VOID            reduce using rule 13 (FBlock -> LBRACE Declaration Instruction RBRACE .)
    INT             reduce using rule 13 (FBlock -> LBRACE Declaration Instruction RBRACE .)
    FLOAT           reduce using rule 13 (FBlock -> LBRACE Declaration Instruction RBRACE .)
    BOOL            reduce using rule 13 (FBlock -> LBRACE Declaration Instruction RBRACE .)
    CHAR            reduce using rule 13 (FBlock -> LBRACE Declaration Instruction RBRACE .)
    MAIN            reduce using rule 13 (FBlock -> LBRACE Declaration Instruction RBRACE .)


state 110

    (57) Call -> ID LPAREN . Params RPAREN
    (44) Params -> . Params2
    (45) Params -> . empty
    (47) Params2 -> . SuperExpr Params3
    (48) Params2 -> . STRING Params3
    (121) empty -> .
    (18) SuperExpr -> . Expression Gen_Quad4 SuperExpr1
    (127) SuperExpr -> . Expression error SuperExpr1
    (22) Expression -> . Expr Expression1 Gen_Quad3
    (30) Expr -> . Term Gen_Quad2 Expr1
    (34) Term -> . Factor Gen_Quad1 Term1
    (38) Factor -> . LPAREN Push_Expr SuperExpr RPAREN Pop_Expr
    (39) Factor -> . Factor1 Seen_Operand
    (40) Factor1 -> . Factor2
    (41) Factor1 -> . Constant
    (42) Factor2 -> . MINUS Gen_Quad0 Constant
    (43) Factor2 -> . PLUS Gen_Quad0 Constant
    (102) Constant -> . ID
    (103) Constant -> . FCONST
    (104) Constant -> . ICONST
    (105) Constant -> . FALSE
    (106) Constant -> . TRUE

    STRING          shift and go to state 137
    RPAREN          reduce using rule 121 (empty -> .)
    LPAREN          shift and go to state 141
    MINUS           shift and go to state 132
    PLUS            shift and go to state 135
    ID              shift and go to state 144
    FCONST          shift and go to state 134
    ICONST          shift and go to state 140
    FALSE           shift and go to state 142
    TRUE            shift and go to state 131

    Params2                        shift and go to state 153
    SuperExpr                      shift and go to state 129
    Params                         shift and go to state 154
    Factor                         shift and go to state 130
    empty                          shift and go to state 155
    Term                           shift and go to state 136
    Factor1                        shift and go to state 133
    Factor2                        shift and go to state 138
    Expr                           shift and go to state 139
    Expression                     shift and go to state 143
    Constant                       shift and go to state 145

state 111

    (52) Assign -> ID Seen_Operand . EQUAL Seen_Operator Assign1

    EQUAL           shift and go to state 156


state 112

    (15) Conditional -> IF LPAREN . SuperExpr RPAREN Block Else
    (18) SuperExpr -> . Expression Gen_Quad4 SuperExpr1
    (127) SuperExpr -> . Expression error SuperExpr1
    (22) Expression -> . Expr Expression1 Gen_Quad3
    (30) Expr -> . Term Gen_Quad2 Expr1
    (34) Term -> . Factor Gen_Quad1 Term1
    (38) Factor -> . LPAREN Push_Expr SuperExpr RPAREN Pop_Expr
    (39) Factor -> . Factor1 Seen_Operand
    (40) Factor1 -> . Factor2
    (41) Factor1 -> . Constant
    (42) Factor2 -> . MINUS Gen_Quad0 Constant
    (43) Factor2 -> . PLUS Gen_Quad0 Constant
    (102) Constant -> . ID
    (103) Constant -> . FCONST
    (104) Constant -> . ICONST
    (105) Constant -> . FALSE
    (106) Constant -> . TRUE

    LPAREN          shift and go to state 141
    MINUS           shift and go to state 132
    PLUS            shift and go to state 135
    ID              shift and go to state 144
    FCONST          shift and go to state 134
    ICONST          shift and go to state 140
    FALSE           shift and go to state 142
    TRUE            shift and go to state 131

    SuperExpr                      shift and go to state 157
    Factor                         shift and go to state 130
    Term                           shift and go to state 136
    Factor1                        shift and go to state 133
    Factor2                        shift and go to state 138
    Expr                           shift and go to state 139
    Expression                     shift and go to state 143
    Constant                       shift and go to state 145

state 113

    (67) Forward -> FD LPAREN . SuperExpr RPAREN
    (18) SuperExpr -> . Expression Gen_Quad4 SuperExpr1
    (127) SuperExpr -> . Expression error SuperExpr1
    (22) Expression -> . Expr Expression1 Gen_Quad3
    (30) Expr -> . Term Gen_Quad2 Expr1
    (34) Term -> . Factor Gen_Quad1 Term1
    (38) Factor -> . LPAREN Push_Expr SuperExpr RPAREN Pop_Expr
    (39) Factor -> . Factor1 Seen_Operand
    (40) Factor1 -> . Factor2
    (41) Factor1 -> . Constant
    (42) Factor2 -> . MINUS Gen_Quad0 Constant
    (43) Factor2 -> . PLUS Gen_Quad0 Constant
    (102) Constant -> . ID
    (103) Constant -> . FCONST
    (104) Constant -> . ICONST
    (105) Constant -> . FALSE
    (106) Constant -> . TRUE

    LPAREN          shift and go to state 141
    MINUS           shift and go to state 132
    PLUS            shift and go to state 135
    ID              shift and go to state 144
    FCONST          shift and go to state 134
    ICONST          shift and go to state 140
    FALSE           shift and go to state 142
    TRUE            shift and go to state 131

    Term                           shift and go to state 136
    Constant                       shift and go to state 145
    Factor1                        shift and go to state 133
    Factor2                        shift and go to state 138
    SuperExpr                      shift and go to state 158
    Factor                         shift and go to state 130
    Expr                           shift and go to state 139
    Expression                     shift and go to state 143

state 114

    (63) Color -> COLOR LPAREN . SuperExpr COMMA SuperExpr COMMA SuperExpr RPAREN
    (18) SuperExpr -> . Expression Gen_Quad4 SuperExpr1
    (127) SuperExpr -> . Expression error SuperExpr1
    (22) Expression -> . Expr Expression1 Gen_Quad3
    (30) Expr -> . Term Gen_Quad2 Expr1
    (34) Term -> . Factor Gen_Quad1 Term1
    (38) Factor -> . LPAREN Push_Expr SuperExpr RPAREN Pop_Expr
    (39) Factor -> . Factor1 Seen_Operand
    (40) Factor1 -> . Factor2
    (41) Factor1 -> . Constant
    (42) Factor2 -> . MINUS Gen_Quad0 Constant
    (43) Factor2 -> . PLUS Gen_Quad0 Constant
    (102) Constant -> . ID
    (103) Constant -> . FCONST
    (104) Constant -> . ICONST
    (105) Constant -> . FALSE
    (106) Constant -> . TRUE

    LPAREN          shift and go to state 141
    MINUS           shift and go to state 132
    PLUS            shift and go to state 135
    ID              shift and go to state 144
    FCONST          shift and go to state 134
    ICONST          shift and go to state 140
    FALSE           shift and go to state 142
    TRUE            shift and go to state 131

    Term                           shift and go to state 136
    Constant                       shift and go to state 145
    Factor1                        shift and go to state 133
    Factor2                        shift and go to state 138
    SuperExpr                      shift and go to state 159
    Factor                         shift and go to state 130
    Expr                           shift and go to state 139
    Expression                     shift and go to state 143

state 115

    (124) FBlock -> LBRACE Declaration error RBRACE .

    $end            reduce using rule 124 (FBlock -> LBRACE Declaration error RBRACE .)
    VOID            reduce using rule 124 (FBlock -> LBRACE Declaration error RBRACE .)
    INT             reduce using rule 124 (FBlock -> LBRACE Declaration error RBRACE .)
    FLOAT           reduce using rule 124 (FBlock -> LBRACE Declaration error RBRACE .)
    BOOL            reduce using rule 124 (FBlock -> LBRACE Declaration error RBRACE .)
    CHAR            reduce using rule 124 (FBlock -> LBRACE Declaration error RBRACE .)
    MAIN            reduce using rule 124 (FBlock -> LBRACE Declaration error RBRACE .)


state 116

    (69) Circle -> CIRCLE LPAREN . SuperExpr RPAREN
    (126) Circle -> CIRCLE LPAREN . error RPAREN
    (18) SuperExpr -> . Expression Gen_Quad4 SuperExpr1
    (127) SuperExpr -> . Expression error SuperExpr1
    (22) Expression -> . Expr Expression1 Gen_Quad3
    (30) Expr -> . Term Gen_Quad2 Expr1
    (34) Term -> . Factor Gen_Quad1 Term1
    (38) Factor -> . LPAREN Push_Expr SuperExpr RPAREN Pop_Expr
    (39) Factor -> . Factor1 Seen_Operand
    (40) Factor1 -> . Factor2
    (41) Factor1 -> . Constant
    (42) Factor2 -> . MINUS Gen_Quad0 Constant
    (43) Factor2 -> . PLUS Gen_Quad0 Constant
    (102) Constant -> . ID
    (103) Constant -> . FCONST
    (104) Constant -> . ICONST
    (105) Constant -> . FALSE
    (106) Constant -> . TRUE

    error           shift and go to state 161
    LPAREN          shift and go to state 141
    MINUS           shift and go to state 132
    PLUS            shift and go to state 135
    ID              shift and go to state 144
    FCONST          shift and go to state 134
    ICONST          shift and go to state 140
    FALSE           shift and go to state 142
    TRUE            shift and go to state 131

    Term                           shift and go to state 136
    Constant                       shift and go to state 145
    Factor1                        shift and go to state 133
    Factor2                        shift and go to state 138
    SuperExpr                      shift and go to state 160
    Factor                         shift and go to state 130
    Expr                           shift and go to state 139
    Expression                     shift and go to state 143

state 117

    (84) Instruction -> Instruction1 SEMI . Seen_Semi Instruction
    (118) Seen_Semi -> .

    LOOP            reduce using rule 118 (Seen_Semi -> .)
    IF              reduce using rule 118 (Seen_Semi -> .)
    ID              reduce using rule 118 (Seen_Semi -> .)
    BRUSH           reduce using rule 118 (Seen_Semi -> .)
    READ            reduce using rule 118 (Seen_Semi -> .)
    PRINT           reduce using rule 118 (Seen_Semi -> .)
    PD              reduce using rule 118 (Seen_Semi -> .)
    PU              reduce using rule 118 (Seen_Semi -> .)
    HOME            reduce using rule 118 (Seen_Semi -> .)
    FD              reduce using rule 118 (Seen_Semi -> .)
    RT              reduce using rule 118 (Seen_Semi -> .)
    COLOR           reduce using rule 118 (Seen_Semi -> .)
    CIRCLE          reduce using rule 118 (Seen_Semi -> .)
    ARC             reduce using rule 118 (Seen_Semi -> .)
    SQUARE          reduce using rule 118 (Seen_Semi -> .)
    RBRACE          reduce using rule 118 (Seen_Semi -> .)
    RETURN          reduce using rule 118 (Seen_Semi -> .)

    Seen_Semi                      shift and go to state 162

state 118

    (51) Loop -> LOOP LPAREN . SuperExpr RPAREN Block
    (18) SuperExpr -> . Expression Gen_Quad4 SuperExpr1
    (127) SuperExpr -> . Expression error SuperExpr1
    (22) Expression -> . Expr Expression1 Gen_Quad3
    (30) Expr -> . Term Gen_Quad2 Expr1
    (34) Term -> . Factor Gen_Quad1 Term1
    (38) Factor -> . LPAREN Push_Expr SuperExpr RPAREN Pop_Expr
    (39) Factor -> . Factor1 Seen_Operand
    (40) Factor1 -> . Factor2
    (41) Factor1 -> . Constant
    (42) Factor2 -> . MINUS Gen_Quad0 Constant
    (43) Factor2 -> . PLUS Gen_Quad0 Constant
    (102) Constant -> . ID
    (103) Constant -> . FCONST
    (104) Constant -> . ICONST
    (105) Constant -> . FALSE
    (106) Constant -> . TRUE

    LPAREN          shift and go to state 141
    MINUS           shift and go to state 132
    PLUS            shift and go to state 135
    ID              shift and go to state 144
    FCONST          shift and go to state 134
    ICONST          shift and go to state 140
    FALSE           shift and go to state 142
    TRUE            shift and go to state 131

    Term                           shift and go to state 136
    Constant                       shift and go to state 145
    Factor1                        shift and go to state 133
    Factor2                        shift and go to state 138
    SuperExpr                      shift and go to state 163
    Factor                         shift and go to state 130
    Expr                           shift and go to state 139
    Expression                     shift and go to state 143

state 119

    (72) Param -> Primitive ID Array1 Array1 Seen_Variable .

    COMMA           reduce using rule 72 (Param -> Primitive ID Array1 Array1 Seen_Variable .)
    RPAREN          reduce using rule 72 (Param -> Primitive ID Array1 Array1 Seen_Variable .)


state 120

    (14) RFBlock -> LBRACE Declaration Instruction . RETURN SuperExpr SEMI RBRACE

    RETURN          shift and go to state 164


state 121

    (125) RFBlock -> LBRACE Declaration error . RETURN SuperExpr SEMI RBRACE

    RETURN          shift and go to state 165


state 122

    (11) RFunction -> Primitive ID Push_Scope LPAREN ParamList RPAREN RFBlock Pop_Scope Function .

    MAIN            reduce using rule 11 (RFunction -> Primitive ID Push_Scope LPAREN ParamList RPAREN RFBlock Pop_Scope Function .)


state 123

    (10) Function1 -> VOID ID Push_Scope LPAREN ParamList RPAREN FBlock Pop_Scope Function .

    MAIN            reduce using rule 10 (Function1 -> VOID ID Push_Scope LPAREN ParamList RPAREN FBlock Pop_Scope Function .)


state 124

    (59) Type -> Primitive .

    COMMA           reduce using rule 59 (Type -> Primitive .)


state 125

    (60) Type -> STRING .

    COMMA           reduce using rule 60 (Type -> STRING .)


state 126

    (58) Read -> READ LPAREN Type . COMMA ID RPAREN

    COMMA           shift and go to state 166


state 127

    (61) Print -> PRINT LPAREN Params1 . RPAREN

    RPAREN          shift and go to state 167


state 128

    (46) Params1 -> Params2 .

    RPAREN          reduce using rule 46 (Params1 -> Params2 .)


state 129

    (47) Params2 -> SuperExpr . Params3
    (49) Params3 -> . COMMA Params2
    (50) Params3 -> . empty
    (121) empty -> .

    COMMA           shift and go to state 169
    RPAREN          reduce using rule 121 (empty -> .)

    Params3                        shift and go to state 168
    empty                          shift and go to state 170

state 130

    (34) Term -> Factor . Gen_Quad1 Term1
    (112) Gen_Quad1 -> .

    DIVIDE          reduce using rule 112 (Gen_Quad1 -> .)
    TIMES           reduce using rule 112 (Gen_Quad1 -> .)
    MINUS           reduce using rule 112 (Gen_Quad1 -> .)
    PLUS            reduce using rule 112 (Gen_Quad1 -> .)
    LESSTHAN        reduce using rule 112 (Gen_Quad1 -> .)
    GREATHAN        reduce using rule 112 (Gen_Quad1 -> .)
    DIFFERENT       reduce using rule 112 (Gen_Quad1 -> .)
    TWOEQUAL        reduce using rule 112 (Gen_Quad1 -> .)
    GREATEQUAL      reduce using rule 112 (Gen_Quad1 -> .)
    LESSEQUAL       reduce using rule 112 (Gen_Quad1 -> .)
    error           reduce using rule 112 (Gen_Quad1 -> .)
    AND             reduce using rule 112 (Gen_Quad1 -> .)
    OR              reduce using rule 112 (Gen_Quad1 -> .)
    COMMA           reduce using rule 112 (Gen_Quad1 -> .)
    RPAREN          reduce using rule 112 (Gen_Quad1 -> .)
    SEMI            reduce using rule 112 (Gen_Quad1 -> .)

    Gen_Quad1                      shift and go to state 171

state 131

    (106) Constant -> TRUE .

    DIVIDE          reduce using rule 106 (Constant -> TRUE .)
    TIMES           reduce using rule 106 (Constant -> TRUE .)
    MINUS           reduce using rule 106 (Constant -> TRUE .)
    PLUS            reduce using rule 106 (Constant -> TRUE .)
    error           reduce using rule 106 (Constant -> TRUE .)
    AND             reduce using rule 106 (Constant -> TRUE .)
    OR              reduce using rule 106 (Constant -> TRUE .)
    COMMA           reduce using rule 106 (Constant -> TRUE .)
    RPAREN          reduce using rule 106 (Constant -> TRUE .)
    SEMI            reduce using rule 106 (Constant -> TRUE .)
    LESSTHAN        reduce using rule 106 (Constant -> TRUE .)
    GREATHAN        reduce using rule 106 (Constant -> TRUE .)
    DIFFERENT       reduce using rule 106 (Constant -> TRUE .)
    TWOEQUAL        reduce using rule 106 (Constant -> TRUE .)
    GREATEQUAL      reduce using rule 106 (Constant -> TRUE .)
    LESSEQUAL       reduce using rule 106 (Constant -> TRUE .)


state 132

    (42) Factor2 -> MINUS . Gen_Quad0 Constant
    (111) Gen_Quad0 -> .

    ID              reduce using rule 111 (Gen_Quad0 -> .)
    FCONST          reduce using rule 111 (Gen_Quad0 -> .)
    ICONST          reduce using rule 111 (Gen_Quad0 -> .)
    FALSE           reduce using rule 111 (Gen_Quad0 -> .)
    TRUE            reduce using rule 111 (Gen_Quad0 -> .)

    Gen_Quad0                      shift and go to state 172

state 133

    (39) Factor -> Factor1 . Seen_Operand
    (107) Seen_Operand -> .

    DIVIDE          reduce using rule 107 (Seen_Operand -> .)
    TIMES           reduce using rule 107 (Seen_Operand -> .)
    MINUS           reduce using rule 107 (Seen_Operand -> .)
    PLUS            reduce using rule 107 (Seen_Operand -> .)
    LESSTHAN        reduce using rule 107 (Seen_Operand -> .)
    GREATHAN        reduce using rule 107 (Seen_Operand -> .)
    DIFFERENT       reduce using rule 107 (Seen_Operand -> .)
    TWOEQUAL        reduce using rule 107 (Seen_Operand -> .)
    GREATEQUAL      reduce using rule 107 (Seen_Operand -> .)
    LESSEQUAL       reduce using rule 107 (Seen_Operand -> .)
    error           reduce using rule 107 (Seen_Operand -> .)
    AND             reduce using rule 107 (Seen_Operand -> .)
    OR              reduce using rule 107 (Seen_Operand -> .)
    COMMA           reduce using rule 107 (Seen_Operand -> .)
    RPAREN          reduce using rule 107 (Seen_Operand -> .)
    SEMI            reduce using rule 107 (Seen_Operand -> .)

    Seen_Operand                   shift and go to state 173

state 134

    (103) Constant -> FCONST .

    DIVIDE          reduce using rule 103 (Constant -> FCONST .)
    TIMES           reduce using rule 103 (Constant -> FCONST .)
    MINUS           reduce using rule 103 (Constant -> FCONST .)
    PLUS            reduce using rule 103 (Constant -> FCONST .)
    error           reduce using rule 103 (Constant -> FCONST .)
    AND             reduce using rule 103 (Constant -> FCONST .)
    OR              reduce using rule 103 (Constant -> FCONST .)
    COMMA           reduce using rule 103 (Constant -> FCONST .)
    RPAREN          reduce using rule 103 (Constant -> FCONST .)
    SEMI            reduce using rule 103 (Constant -> FCONST .)
    LESSTHAN        reduce using rule 103 (Constant -> FCONST .)
    GREATHAN        reduce using rule 103 (Constant -> FCONST .)
    DIFFERENT       reduce using rule 103 (Constant -> FCONST .)
    TWOEQUAL        reduce using rule 103 (Constant -> FCONST .)
    GREATEQUAL      reduce using rule 103 (Constant -> FCONST .)
    LESSEQUAL       reduce using rule 103 (Constant -> FCONST .)


state 135

    (43) Factor2 -> PLUS . Gen_Quad0 Constant
    (111) Gen_Quad0 -> .

    ID              reduce using rule 111 (Gen_Quad0 -> .)
    FCONST          reduce using rule 111 (Gen_Quad0 -> .)
    ICONST          reduce using rule 111 (Gen_Quad0 -> .)
    FALSE           reduce using rule 111 (Gen_Quad0 -> .)
    TRUE            reduce using rule 111 (Gen_Quad0 -> .)

    Gen_Quad0                      shift and go to state 174

state 136

    (30) Expr -> Term . Gen_Quad2 Expr1
    (113) Gen_Quad2 -> .

    MINUS           reduce using rule 113 (Gen_Quad2 -> .)
    PLUS            reduce using rule 113 (Gen_Quad2 -> .)
    LESSTHAN        reduce using rule 113 (Gen_Quad2 -> .)
    GREATHAN        reduce using rule 113 (Gen_Quad2 -> .)
    DIFFERENT       reduce using rule 113 (Gen_Quad2 -> .)
    TWOEQUAL        reduce using rule 113 (Gen_Quad2 -> .)
    GREATEQUAL      reduce using rule 113 (Gen_Quad2 -> .)
    LESSEQUAL       reduce using rule 113 (Gen_Quad2 -> .)
    error           reduce using rule 113 (Gen_Quad2 -> .)
    AND             reduce using rule 113 (Gen_Quad2 -> .)
    OR              reduce using rule 113 (Gen_Quad2 -> .)
    COMMA           reduce using rule 113 (Gen_Quad2 -> .)
    RPAREN          reduce using rule 113 (Gen_Quad2 -> .)
    SEMI            reduce using rule 113 (Gen_Quad2 -> .)

    Gen_Quad2                      shift and go to state 175

state 137

    (48) Params2 -> STRING . Params3
    (49) Params3 -> . COMMA Params2
    (50) Params3 -> . empty
    (121) empty -> .

    COMMA           shift and go to state 169
    RPAREN          reduce using rule 121 (empty -> .)

    Params3                        shift and go to state 176
    empty                          shift and go to state 170

state 138

    (40) Factor1 -> Factor2 .

    DIVIDE          reduce using rule 40 (Factor1 -> Factor2 .)
    TIMES           reduce using rule 40 (Factor1 -> Factor2 .)
    MINUS           reduce using rule 40 (Factor1 -> Factor2 .)
    PLUS            reduce using rule 40 (Factor1 -> Factor2 .)
    LESSTHAN        reduce using rule 40 (Factor1 -> Factor2 .)
    GREATHAN        reduce using rule 40 (Factor1 -> Factor2 .)
    DIFFERENT       reduce using rule 40 (Factor1 -> Factor2 .)
    TWOEQUAL        reduce using rule 40 (Factor1 -> Factor2 .)
    GREATEQUAL      reduce using rule 40 (Factor1 -> Factor2 .)
    LESSEQUAL       reduce using rule 40 (Factor1 -> Factor2 .)
    error           reduce using rule 40 (Factor1 -> Factor2 .)
    AND             reduce using rule 40 (Factor1 -> Factor2 .)
    OR              reduce using rule 40 (Factor1 -> Factor2 .)
    SEMI            reduce using rule 40 (Factor1 -> Factor2 .)
    COMMA           reduce using rule 40 (Factor1 -> Factor2 .)
    RPAREN          reduce using rule 40 (Factor1 -> Factor2 .)


state 139

    (22) Expression -> Expr . Expression1 Gen_Quad3
    (23) Expression1 -> . LESSTHAN Seen_Operator Expr
    (24) Expression1 -> . GREATHAN Seen_Operator Expr
    (25) Expression1 -> . DIFFERENT Seen_Operator Expr
    (26) Expression1 -> . TWOEQUAL Seen_Operator Expr
    (27) Expression1 -> . GREATEQUAL Seen_Operator Expr
    (28) Expression1 -> . LESSEQUAL Seen_Operator Expr
    (29) Expression1 -> . empty
    (121) empty -> .

    LESSTHAN        shift and go to state 182
    GREATHAN        shift and go to state 178
    DIFFERENT       shift and go to state 177
    TWOEQUAL        shift and go to state 179
    GREATEQUAL      shift and go to state 180
    LESSEQUAL       shift and go to state 181
    error           reduce using rule 121 (empty -> .)
    AND             reduce using rule 121 (empty -> .)
    OR              reduce using rule 121 (empty -> .)
    COMMA           reduce using rule 121 (empty -> .)
    RPAREN          reduce using rule 121 (empty -> .)
    SEMI            reduce using rule 121 (empty -> .)

    Expression1                    shift and go to state 183
    empty                          shift and go to state 184

state 140

    (104) Constant -> ICONST .

    DIVIDE          reduce using rule 104 (Constant -> ICONST .)
    TIMES           reduce using rule 104 (Constant -> ICONST .)
    MINUS           reduce using rule 104 (Constant -> ICONST .)
    PLUS            reduce using rule 104 (Constant -> ICONST .)
    error           reduce using rule 104 (Constant -> ICONST .)
    AND             reduce using rule 104 (Constant -> ICONST .)
    OR              reduce using rule 104 (Constant -> ICONST .)
    COMMA           reduce using rule 104 (Constant -> ICONST .)
    RPAREN          reduce using rule 104 (Constant -> ICONST .)
    SEMI            reduce using rule 104 (Constant -> ICONST .)
    LESSTHAN        reduce using rule 104 (Constant -> ICONST .)
    GREATHAN        reduce using rule 104 (Constant -> ICONST .)
    DIFFERENT       reduce using rule 104 (Constant -> ICONST .)
    TWOEQUAL        reduce using rule 104 (Constant -> ICONST .)
    GREATEQUAL      reduce using rule 104 (Constant -> ICONST .)
    LESSEQUAL       reduce using rule 104 (Constant -> ICONST .)


state 141

    (38) Factor -> LPAREN . Push_Expr SuperExpr RPAREN Pop_Expr
    (109) Push_Expr -> .

    LPAREN          reduce using rule 109 (Push_Expr -> .)
    MINUS           reduce using rule 109 (Push_Expr -> .)
    PLUS            reduce using rule 109 (Push_Expr -> .)
    ID              reduce using rule 109 (Push_Expr -> .)
    FCONST          reduce using rule 109 (Push_Expr -> .)
    ICONST          reduce using rule 109 (Push_Expr -> .)
    FALSE           reduce using rule 109 (Push_Expr -> .)
    TRUE            reduce using rule 109 (Push_Expr -> .)

    Push_Expr                      shift and go to state 185

state 142

    (105) Constant -> FALSE .

    DIVIDE          reduce using rule 105 (Constant -> FALSE .)
    TIMES           reduce using rule 105 (Constant -> FALSE .)
    MINUS           reduce using rule 105 (Constant -> FALSE .)
    PLUS            reduce using rule 105 (Constant -> FALSE .)
    error           reduce using rule 105 (Constant -> FALSE .)
    AND             reduce using rule 105 (Constant -> FALSE .)
    OR              reduce using rule 105 (Constant -> FALSE .)
    COMMA           reduce using rule 105 (Constant -> FALSE .)
    RPAREN          reduce using rule 105 (Constant -> FALSE .)
    SEMI            reduce using rule 105 (Constant -> FALSE .)
    LESSTHAN        reduce using rule 105 (Constant -> FALSE .)
    GREATHAN        reduce using rule 105 (Constant -> FALSE .)
    DIFFERENT       reduce using rule 105 (Constant -> FALSE .)
    TWOEQUAL        reduce using rule 105 (Constant -> FALSE .)
    GREATEQUAL      reduce using rule 105 (Constant -> FALSE .)
    LESSEQUAL       reduce using rule 105 (Constant -> FALSE .)


state 143

    (18) SuperExpr -> Expression . Gen_Quad4 SuperExpr1
    (127) SuperExpr -> Expression . error SuperExpr1
    (115) Gen_Quad4 -> .

    error           shift and go to state 187
    AND             reduce using rule 115 (Gen_Quad4 -> .)
    OR              reduce using rule 115 (Gen_Quad4 -> .)
    COMMA           reduce using rule 115 (Gen_Quad4 -> .)
    RPAREN          reduce using rule 115 (Gen_Quad4 -> .)
    SEMI            reduce using rule 115 (Gen_Quad4 -> .)

    Gen_Quad4                      shift and go to state 186

state 144

    (102) Constant -> ID .

    DIVIDE          reduce using rule 102 (Constant -> ID .)
    TIMES           reduce using rule 102 (Constant -> ID .)
    MINUS           reduce using rule 102 (Constant -> ID .)
    PLUS            reduce using rule 102 (Constant -> ID .)
    error           reduce using rule 102 (Constant -> ID .)
    AND             reduce using rule 102 (Constant -> ID .)
    OR              reduce using rule 102 (Constant -> ID .)
    COMMA           reduce using rule 102 (Constant -> ID .)
    RPAREN          reduce using rule 102 (Constant -> ID .)
    SEMI            reduce using rule 102 (Constant -> ID .)
    LESSTHAN        reduce using rule 102 (Constant -> ID .)
    GREATHAN        reduce using rule 102 (Constant -> ID .)
    DIFFERENT       reduce using rule 102 (Constant -> ID .)
    TWOEQUAL        reduce using rule 102 (Constant -> ID .)
    GREATEQUAL      reduce using rule 102 (Constant -> ID .)
    LESSEQUAL       reduce using rule 102 (Constant -> ID .)


state 145

    (41) Factor1 -> Constant .

    DIVIDE          reduce using rule 41 (Factor1 -> Constant .)
    TIMES           reduce using rule 41 (Factor1 -> Constant .)
    MINUS           reduce using rule 41 (Factor1 -> Constant .)
    PLUS            reduce using rule 41 (Factor1 -> Constant .)
    LESSTHAN        reduce using rule 41 (Factor1 -> Constant .)
    GREATHAN        reduce using rule 41 (Factor1 -> Constant .)
    DIFFERENT       reduce using rule 41 (Factor1 -> Constant .)
    TWOEQUAL        reduce using rule 41 (Factor1 -> Constant .)
    GREATEQUAL      reduce using rule 41 (Factor1 -> Constant .)
    LESSEQUAL       reduce using rule 41 (Factor1 -> Constant .)
    error           reduce using rule 41 (Factor1 -> Constant .)
    AND             reduce using rule 41 (Factor1 -> Constant .)
    OR              reduce using rule 41 (Factor1 -> Constant .)
    SEMI            reduce using rule 41 (Factor1 -> Constant .)
    COMMA           reduce using rule 41 (Factor1 -> Constant .)
    RPAREN          reduce using rule 41 (Factor1 -> Constant .)


state 146

    (71) Square -> SQUARE LPAREN SuperExpr . RPAREN

    RPAREN          shift and go to state 188


state 147

    (66) Home -> HOME LPAREN RPAREN .

    SEMI            reduce using rule 66 (Home -> HOME LPAREN RPAREN .)


state 148

    (68) Rotate -> RT LPAREN SuperExpr . RPAREN

    RPAREN          shift and go to state 189


state 149

    (65) PenUp -> PU LPAREN RPAREN .

    SEMI            reduce using rule 65 (PenUp -> PU LPAREN RPAREN .)


state 150

    (70) Arc -> ARC LPAREN SuperExpr . COMMA SuperExpr RPAREN

    COMMA           shift and go to state 190


state 151

    (64) PenDown -> PD LPAREN RPAREN .

    SEMI            reduce using rule 64 (PenDown -> PD LPAREN RPAREN .)


state 152

    (62) Brush -> BRUSH LPAREN Color . COMMA SuperExpr RPAREN

    COMMA           shift and go to state 191


state 153

    (44) Params -> Params2 .

    RPAREN          reduce using rule 44 (Params -> Params2 .)


state 154

    (57) Call -> ID LPAREN Params . RPAREN

    RPAREN          shift and go to state 192


state 155

    (45) Params -> empty .

    RPAREN          reduce using rule 45 (Params -> empty .)


state 156

    (52) Assign -> ID Seen_Operand EQUAL . Seen_Operator Assign1
    (108) Seen_Operator -> .

    STRING          reduce using rule 108 (Seen_Operator -> .)
    CCONST          reduce using rule 108 (Seen_Operator -> .)
    ID              reduce using rule 108 (Seen_Operator -> .)
    LPAREN          reduce using rule 108 (Seen_Operator -> .)
    MINUS           reduce using rule 108 (Seen_Operator -> .)
    PLUS            reduce using rule 108 (Seen_Operator -> .)
    FCONST          reduce using rule 108 (Seen_Operator -> .)
    ICONST          reduce using rule 108 (Seen_Operator -> .)
    FALSE           reduce using rule 108 (Seen_Operator -> .)
    TRUE            reduce using rule 108 (Seen_Operator -> .)

    Seen_Operator                  shift and go to state 193

state 157

    (15) Conditional -> IF LPAREN SuperExpr . RPAREN Block Else

    RPAREN          shift and go to state 194


state 158

    (67) Forward -> FD LPAREN SuperExpr . RPAREN

    RPAREN          shift and go to state 195


state 159

    (63) Color -> COLOR LPAREN SuperExpr . COMMA SuperExpr COMMA SuperExpr RPAREN

    COMMA           shift and go to state 196


state 160

    (69) Circle -> CIRCLE LPAREN SuperExpr . RPAREN

    RPAREN          shift and go to state 197


state 161

    (126) Circle -> CIRCLE LPAREN error . RPAREN

    RPAREN          shift and go to state 198


state 162

    (84) Instruction -> Instruction1 SEMI Seen_Semi . Instruction
    (84) Instruction -> . Instruction1 SEMI Seen_Semi Instruction
    (85) Instruction -> . empty
    (86) Instruction1 -> . Loop
    (87) Instruction1 -> . Conditional
    (88) Instruction1 -> . Assign
    (89) Instruction1 -> . Call
    (90) Instruction1 -> . Brush
    (91) Instruction1 -> . Read
    (92) Instruction1 -> . Print
    (93) Instruction1 -> . PenDown
    (94) Instruction1 -> . PenUp
    (95) Instruction1 -> . Home
    (96) Instruction1 -> . Forward
    (97) Instruction1 -> . Rotate
    (98) Instruction1 -> . Color
    (99) Instruction1 -> . Circle
    (100) Instruction1 -> . Arc
    (101) Instruction1 -> . Square
    (121) empty -> .
    (51) Loop -> . LOOP LPAREN SuperExpr RPAREN Block
    (15) Conditional -> . IF LPAREN SuperExpr RPAREN Block Else
    (52) Assign -> . ID Seen_Operand EQUAL Seen_Operator Assign1
    (57) Call -> . ID LPAREN Params RPAREN
    (62) Brush -> . BRUSH LPAREN Color COMMA SuperExpr RPAREN
    (58) Read -> . READ LPAREN Type COMMA ID RPAREN
    (61) Print -> . PRINT LPAREN Params1 RPAREN
    (64) PenDown -> . PD LPAREN RPAREN
    (65) PenUp -> . PU LPAREN RPAREN
    (66) Home -> . HOME LPAREN RPAREN
    (67) Forward -> . FD LPAREN SuperExpr RPAREN
    (68) Rotate -> . RT LPAREN SuperExpr RPAREN
    (63) Color -> . COLOR LPAREN SuperExpr COMMA SuperExpr COMMA SuperExpr RPAREN
    (69) Circle -> . CIRCLE LPAREN SuperExpr RPAREN
    (126) Circle -> . CIRCLE LPAREN error RPAREN
    (70) Arc -> . ARC LPAREN SuperExpr COMMA SuperExpr RPAREN
    (71) Square -> . SQUARE LPAREN SuperExpr RPAREN

    RBRACE          reduce using rule 121 (empty -> .)
    RETURN          reduce using rule 121 (empty -> .)
    LOOP            shift and go to state 94
    IF              shift and go to state 83
    ID              shift and go to state 80
    BRUSH           shift and go to state 76
    READ            shift and go to state 61
    PRINT           shift and go to state 62
    PD              shift and go to state 74
    PU              shift and go to state 71
    HOME            shift and go to state 68
    FD              shift and go to state 84
    RT              shift and go to state 70
    COLOR           shift and go to state 87
    CIRCLE          shift and go to state 92
    ARC             shift and go to state 73
    SQUARE          shift and go to state 65

    PenUp                          shift and go to state 60
    Print                          shift and go to state 63
    PenDown                        shift and go to state 64
    Call                           shift and go to state 66
    Forward                        shift and go to state 67
    Circle                         shift and go to state 69
    Read                           shift and go to state 72
    Loop                           shift and go to state 82
    empty                          shift and go to state 75
    Rotate                         shift and go to state 77
    Instruction                    shift and go to state 199
    Square                         shift and go to state 79
    Assign                         shift and go to state 81
    Color                          shift and go to state 85
    Conditional                    shift and go to state 86
    Arc                            shift and go to state 88
    Brush                          shift and go to state 89
    Home                           shift and go to state 91
    Instruction1                   shift and go to state 93

state 163

    (51) Loop -> LOOP LPAREN SuperExpr . RPAREN Block

    RPAREN          shift and go to state 200


state 164

    (14) RFBlock -> LBRACE Declaration Instruction RETURN . SuperExpr SEMI RBRACE
    (18) SuperExpr -> . Expression Gen_Quad4 SuperExpr1
    (127) SuperExpr -> . Expression error SuperExpr1
    (22) Expression -> . Expr Expression1 Gen_Quad3
    (30) Expr -> . Term Gen_Quad2 Expr1
    (34) Term -> . Factor Gen_Quad1 Term1
    (38) Factor -> . LPAREN Push_Expr SuperExpr RPAREN Pop_Expr
    (39) Factor -> . Factor1 Seen_Operand
    (40) Factor1 -> . Factor2
    (41) Factor1 -> . Constant
    (42) Factor2 -> . MINUS Gen_Quad0 Constant
    (43) Factor2 -> . PLUS Gen_Quad0 Constant
    (102) Constant -> . ID
    (103) Constant -> . FCONST
    (104) Constant -> . ICONST
    (105) Constant -> . FALSE
    (106) Constant -> . TRUE

    LPAREN          shift and go to state 141
    MINUS           shift and go to state 132
    PLUS            shift and go to state 135
    ID              shift and go to state 144
    FCONST          shift and go to state 134
    ICONST          shift and go to state 140
    FALSE           shift and go to state 142
    TRUE            shift and go to state 131

    SuperExpr                      shift and go to state 201
    Factor                         shift and go to state 130
    Term                           shift and go to state 136
    Factor1                        shift and go to state 133
    Factor2                        shift and go to state 138
    Expr                           shift and go to state 139
    Expression                     shift and go to state 143
    Constant                       shift and go to state 145

state 165

    (125) RFBlock -> LBRACE Declaration error RETURN . SuperExpr SEMI RBRACE
    (18) SuperExpr -> . Expression Gen_Quad4 SuperExpr1
    (127) SuperExpr -> . Expression error SuperExpr1
    (22) Expression -> . Expr Expression1 Gen_Quad3
    (30) Expr -> . Term Gen_Quad2 Expr1
    (34) Term -> . Factor Gen_Quad1 Term1
    (38) Factor -> . LPAREN Push_Expr SuperExpr RPAREN Pop_Expr
    (39) Factor -> . Factor1 Seen_Operand
    (40) Factor1 -> . Factor2
    (41) Factor1 -> . Constant
    (42) Factor2 -> . MINUS Gen_Quad0 Constant
    (43) Factor2 -> . PLUS Gen_Quad0 Constant
    (102) Constant -> . ID
    (103) Constant -> . FCONST
    (104) Constant -> . ICONST
    (105) Constant -> . FALSE
    (106) Constant -> . TRUE

    LPAREN          shift and go to state 141
    MINUS           shift and go to state 132
    PLUS            shift and go to state 135
    ID              shift and go to state 144
    FCONST          shift and go to state 134
    ICONST          shift and go to state 140
    FALSE           shift and go to state 142
    TRUE            shift and go to state 131

    Term                           shift and go to state 136
    Constant                       shift and go to state 145
    Factor1                        shift and go to state 133
    Factor2                        shift and go to state 138
    SuperExpr                      shift and go to state 202
    Factor                         shift and go to state 130
    Expr                           shift and go to state 139
    Expression                     shift and go to state 143

state 166

    (58) Read -> READ LPAREN Type COMMA . ID RPAREN

    ID              shift and go to state 203


state 167

    (61) Print -> PRINT LPAREN Params1 RPAREN .

    SEMI            reduce using rule 61 (Print -> PRINT LPAREN Params1 RPAREN .)


state 168

    (47) Params2 -> SuperExpr Params3 .

    RPAREN          reduce using rule 47 (Params2 -> SuperExpr Params3 .)


state 169

    (49) Params3 -> COMMA . Params2
    (47) Params2 -> . SuperExpr Params3
    (48) Params2 -> . STRING Params3
    (18) SuperExpr -> . Expression Gen_Quad4 SuperExpr1
    (127) SuperExpr -> . Expression error SuperExpr1
    (22) Expression -> . Expr Expression1 Gen_Quad3
    (30) Expr -> . Term Gen_Quad2 Expr1
    (34) Term -> . Factor Gen_Quad1 Term1
    (38) Factor -> . LPAREN Push_Expr SuperExpr RPAREN Pop_Expr
    (39) Factor -> . Factor1 Seen_Operand
    (40) Factor1 -> . Factor2
    (41) Factor1 -> . Constant
    (42) Factor2 -> . MINUS Gen_Quad0 Constant
    (43) Factor2 -> . PLUS Gen_Quad0 Constant
    (102) Constant -> . ID
    (103) Constant -> . FCONST
    (104) Constant -> . ICONST
    (105) Constant -> . FALSE
    (106) Constant -> . TRUE

    STRING          shift and go to state 137
    LPAREN          shift and go to state 141
    MINUS           shift and go to state 132
    PLUS            shift and go to state 135
    ID              shift and go to state 144
    FCONST          shift and go to state 134
    ICONST          shift and go to state 140
    FALSE           shift and go to state 142
    TRUE            shift and go to state 131

    Params2                        shift and go to state 204
    SuperExpr                      shift and go to state 129
    Factor                         shift and go to state 130
    Term                           shift and go to state 136
    Factor1                        shift and go to state 133
    Factor2                        shift and go to state 138
    Expr                           shift and go to state 139
    Expression                     shift and go to state 143
    Constant                       shift and go to state 145

state 170

    (50) Params3 -> empty .

    RPAREN          reduce using rule 50 (Params3 -> empty .)


state 171

    (34) Term -> Factor Gen_Quad1 . Term1
    (35) Term1 -> . DIVIDE Seen_Operator Term
    (36) Term1 -> . TIMES Seen_Operator Term
    (37) Term1 -> . empty
    (128) Term1 -> . DIVIDE error Term
    (129) Term1 -> . TIMES error Term
    (121) empty -> .

    DIVIDE          shift and go to state 205
    TIMES           shift and go to state 207
    MINUS           reduce using rule 121 (empty -> .)
    PLUS            reduce using rule 121 (empty -> .)
    LESSTHAN        reduce using rule 121 (empty -> .)
    GREATHAN        reduce using rule 121 (empty -> .)
    DIFFERENT       reduce using rule 121 (empty -> .)
    TWOEQUAL        reduce using rule 121 (empty -> .)
    GREATEQUAL      reduce using rule 121 (empty -> .)
    LESSEQUAL       reduce using rule 121 (empty -> .)
    error           reduce using rule 121 (empty -> .)
    AND             reduce using rule 121 (empty -> .)
    OR              reduce using rule 121 (empty -> .)
    COMMA           reduce using rule 121 (empty -> .)
    RPAREN          reduce using rule 121 (empty -> .)
    SEMI            reduce using rule 121 (empty -> .)

    Term1                          shift and go to state 206
    empty                          shift and go to state 208

state 172

    (42) Factor2 -> MINUS Gen_Quad0 . Constant
    (102) Constant -> . ID
    (103) Constant -> . FCONST
    (104) Constant -> . ICONST
    (105) Constant -> . FALSE
    (106) Constant -> . TRUE

    ID              shift and go to state 144
    FCONST          shift and go to state 134
    ICONST          shift and go to state 140
    FALSE           shift and go to state 142
    TRUE            shift and go to state 131

    Constant                       shift and go to state 209

state 173

    (39) Factor -> Factor1 Seen_Operand .

    DIVIDE          reduce using rule 39 (Factor -> Factor1 Seen_Operand .)
    TIMES           reduce using rule 39 (Factor -> Factor1 Seen_Operand .)
    MINUS           reduce using rule 39 (Factor -> Factor1 Seen_Operand .)
    PLUS            reduce using rule 39 (Factor -> Factor1 Seen_Operand .)
    LESSTHAN        reduce using rule 39 (Factor -> Factor1 Seen_Operand .)
    GREATHAN        reduce using rule 39 (Factor -> Factor1 Seen_Operand .)
    DIFFERENT       reduce using rule 39 (Factor -> Factor1 Seen_Operand .)
    TWOEQUAL        reduce using rule 39 (Factor -> Factor1 Seen_Operand .)
    GREATEQUAL      reduce using rule 39 (Factor -> Factor1 Seen_Operand .)
    LESSEQUAL       reduce using rule 39 (Factor -> Factor1 Seen_Operand .)
    error           reduce using rule 39 (Factor -> Factor1 Seen_Operand .)
    AND             reduce using rule 39 (Factor -> Factor1 Seen_Operand .)
    OR              reduce using rule 39 (Factor -> Factor1 Seen_Operand .)
    COMMA           reduce using rule 39 (Factor -> Factor1 Seen_Operand .)
    RPAREN          reduce using rule 39 (Factor -> Factor1 Seen_Operand .)
    SEMI            reduce using rule 39 (Factor -> Factor1 Seen_Operand .)


state 174

    (43) Factor2 -> PLUS Gen_Quad0 . Constant
    (102) Constant -> . ID
    (103) Constant -> . FCONST
    (104) Constant -> . ICONST
    (105) Constant -> . FALSE
    (106) Constant -> . TRUE

    ID              shift and go to state 144
    FCONST          shift and go to state 134
    ICONST          shift and go to state 140
    FALSE           shift and go to state 142
    TRUE            shift and go to state 131

    Constant                       shift and go to state 210

state 175

    (30) Expr -> Term Gen_Quad2 . Expr1
    (31) Expr1 -> . MINUS Seen_Operator Expr
    (32) Expr1 -> . PLUS Seen_Operator Expr
    (33) Expr1 -> . empty
    (121) empty -> .

    MINUS           shift and go to state 213
    PLUS            shift and go to state 212
    LESSTHAN        reduce using rule 121 (empty -> .)
    GREATHAN        reduce using rule 121 (empty -> .)
    DIFFERENT       reduce using rule 121 (empty -> .)
    TWOEQUAL        reduce using rule 121 (empty -> .)
    GREATEQUAL      reduce using rule 121 (empty -> .)
    LESSEQUAL       reduce using rule 121 (empty -> .)
    error           reduce using rule 121 (empty -> .)
    AND             reduce using rule 121 (empty -> .)
    OR              reduce using rule 121 (empty -> .)
    COMMA           reduce using rule 121 (empty -> .)
    RPAREN          reduce using rule 121 (empty -> .)
    SEMI            reduce using rule 121 (empty -> .)

    Expr1                          shift and go to state 211
    empty                          shift and go to state 214

state 176

    (48) Params2 -> STRING Params3 .

    RPAREN          reduce using rule 48 (Params2 -> STRING Params3 .)


state 177

    (25) Expression1 -> DIFFERENT . Seen_Operator Expr
    (108) Seen_Operator -> .

    LPAREN          reduce using rule 108 (Seen_Operator -> .)
    MINUS           reduce using rule 108 (Seen_Operator -> .)
    PLUS            reduce using rule 108 (Seen_Operator -> .)
    ID              reduce using rule 108 (Seen_Operator -> .)
    FCONST          reduce using rule 108 (Seen_Operator -> .)
    ICONST          reduce using rule 108 (Seen_Operator -> .)
    FALSE           reduce using rule 108 (Seen_Operator -> .)
    TRUE            reduce using rule 108 (Seen_Operator -> .)

    Seen_Operator                  shift and go to state 215

state 178

    (24) Expression1 -> GREATHAN . Seen_Operator Expr
    (108) Seen_Operator -> .

    LPAREN          reduce using rule 108 (Seen_Operator -> .)
    MINUS           reduce using rule 108 (Seen_Operator -> .)
    PLUS            reduce using rule 108 (Seen_Operator -> .)
    ID              reduce using rule 108 (Seen_Operator -> .)
    FCONST          reduce using rule 108 (Seen_Operator -> .)
    ICONST          reduce using rule 108 (Seen_Operator -> .)
    FALSE           reduce using rule 108 (Seen_Operator -> .)
    TRUE            reduce using rule 108 (Seen_Operator -> .)

    Seen_Operator                  shift and go to state 216

state 179

    (26) Expression1 -> TWOEQUAL . Seen_Operator Expr
    (108) Seen_Operator -> .

    LPAREN          reduce using rule 108 (Seen_Operator -> .)
    MINUS           reduce using rule 108 (Seen_Operator -> .)
    PLUS            reduce using rule 108 (Seen_Operator -> .)
    ID              reduce using rule 108 (Seen_Operator -> .)
    FCONST          reduce using rule 108 (Seen_Operator -> .)
    ICONST          reduce using rule 108 (Seen_Operator -> .)
    FALSE           reduce using rule 108 (Seen_Operator -> .)
    TRUE            reduce using rule 108 (Seen_Operator -> .)

    Seen_Operator                  shift and go to state 217

state 180

    (27) Expression1 -> GREATEQUAL . Seen_Operator Expr
    (108) Seen_Operator -> .

    LPAREN          reduce using rule 108 (Seen_Operator -> .)
    MINUS           reduce using rule 108 (Seen_Operator -> .)
    PLUS            reduce using rule 108 (Seen_Operator -> .)
    ID              reduce using rule 108 (Seen_Operator -> .)
    FCONST          reduce using rule 108 (Seen_Operator -> .)
    ICONST          reduce using rule 108 (Seen_Operator -> .)
    FALSE           reduce using rule 108 (Seen_Operator -> .)
    TRUE            reduce using rule 108 (Seen_Operator -> .)

    Seen_Operator                  shift and go to state 218

state 181

    (28) Expression1 -> LESSEQUAL . Seen_Operator Expr
    (108) Seen_Operator -> .

    LPAREN          reduce using rule 108 (Seen_Operator -> .)
    MINUS           reduce using rule 108 (Seen_Operator -> .)
    PLUS            reduce using rule 108 (Seen_Operator -> .)
    ID              reduce using rule 108 (Seen_Operator -> .)
    FCONST          reduce using rule 108 (Seen_Operator -> .)
    ICONST          reduce using rule 108 (Seen_Operator -> .)
    FALSE           reduce using rule 108 (Seen_Operator -> .)
    TRUE            reduce using rule 108 (Seen_Operator -> .)

    Seen_Operator                  shift and go to state 219

state 182

    (23) Expression1 -> LESSTHAN . Seen_Operator Expr
    (108) Seen_Operator -> .

    LPAREN          reduce using rule 108 (Seen_Operator -> .)
    MINUS           reduce using rule 108 (Seen_Operator -> .)
    PLUS            reduce using rule 108 (Seen_Operator -> .)
    ID              reduce using rule 108 (Seen_Operator -> .)
    FCONST          reduce using rule 108 (Seen_Operator -> .)
    ICONST          reduce using rule 108 (Seen_Operator -> .)
    FALSE           reduce using rule 108 (Seen_Operator -> .)
    TRUE            reduce using rule 108 (Seen_Operator -> .)

    Seen_Operator                  shift and go to state 220

state 183

    (22) Expression -> Expr Expression1 . Gen_Quad3
    (114) Gen_Quad3 -> .

    error           reduce using rule 114 (Gen_Quad3 -> .)
    AND             reduce using rule 114 (Gen_Quad3 -> .)
    OR              reduce using rule 114 (Gen_Quad3 -> .)
    COMMA           reduce using rule 114 (Gen_Quad3 -> .)
    RPAREN          reduce using rule 114 (Gen_Quad3 -> .)
    SEMI            reduce using rule 114 (Gen_Quad3 -> .)

    Gen_Quad3                      shift and go to state 221

state 184

    (29) Expression1 -> empty .

    error           reduce using rule 29 (Expression1 -> empty .)
    AND             reduce using rule 29 (Expression1 -> empty .)
    OR              reduce using rule 29 (Expression1 -> empty .)
    COMMA           reduce using rule 29 (Expression1 -> empty .)
    RPAREN          reduce using rule 29 (Expression1 -> empty .)
    SEMI            reduce using rule 29 (Expression1 -> empty .)


state 185

    (38) Factor -> LPAREN Push_Expr . SuperExpr RPAREN Pop_Expr
    (18) SuperExpr -> . Expression Gen_Quad4 SuperExpr1
    (127) SuperExpr -> . Expression error SuperExpr1
    (22) Expression -> . Expr Expression1 Gen_Quad3
    (30) Expr -> . Term Gen_Quad2 Expr1
    (34) Term -> . Factor Gen_Quad1 Term1
    (38) Factor -> . LPAREN Push_Expr SuperExpr RPAREN Pop_Expr
    (39) Factor -> . Factor1 Seen_Operand
    (40) Factor1 -> . Factor2
    (41) Factor1 -> . Constant
    (42) Factor2 -> . MINUS Gen_Quad0 Constant
    (43) Factor2 -> . PLUS Gen_Quad0 Constant
    (102) Constant -> . ID
    (103) Constant -> . FCONST
    (104) Constant -> . ICONST
    (105) Constant -> . FALSE
    (106) Constant -> . TRUE

    LPAREN          shift and go to state 141
    MINUS           shift and go to state 132
    PLUS            shift and go to state 135
    ID              shift and go to state 144
    FCONST          shift and go to state 134
    ICONST          shift and go to state 140
    FALSE           shift and go to state 142
    TRUE            shift and go to state 131

    Term                           shift and go to state 136
    Constant                       shift and go to state 145
    Factor1                        shift and go to state 133
    Factor2                        shift and go to state 138
    SuperExpr                      shift and go to state 222
    Factor                         shift and go to state 130
    Expr                           shift and go to state 139
    Expression                     shift and go to state 143

state 186

    (18) SuperExpr -> Expression Gen_Quad4 . SuperExpr1
    (19) SuperExpr1 -> . AND Seen_Operator SuperExpr
    (20) SuperExpr1 -> . OR Seen_Operator SuperExpr
    (21) SuperExpr1 -> . empty
    (121) empty -> .

    AND             shift and go to state 223
    OR              shift and go to state 224
    COMMA           reduce using rule 121 (empty -> .)
    RPAREN          reduce using rule 121 (empty -> .)
    SEMI            reduce using rule 121 (empty -> .)

    SuperExpr1                     shift and go to state 225
    empty                          shift and go to state 226

state 187

    (127) SuperExpr -> Expression error . SuperExpr1
    (19) SuperExpr1 -> . AND Seen_Operator SuperExpr
    (20) SuperExpr1 -> . OR Seen_Operator SuperExpr
    (21) SuperExpr1 -> . empty
    (121) empty -> .

    AND             shift and go to state 223
    OR              shift and go to state 224
    COMMA           reduce using rule 121 (empty -> .)
    RPAREN          reduce using rule 121 (empty -> .)
    SEMI            reduce using rule 121 (empty -> .)

    SuperExpr1                     shift and go to state 227
    empty                          shift and go to state 226

state 188

    (71) Square -> SQUARE LPAREN SuperExpr RPAREN .

    SEMI            reduce using rule 71 (Square -> SQUARE LPAREN SuperExpr RPAREN .)


state 189

    (68) Rotate -> RT LPAREN SuperExpr RPAREN .

    SEMI            reduce using rule 68 (Rotate -> RT LPAREN SuperExpr RPAREN .)


state 190

    (70) Arc -> ARC LPAREN SuperExpr COMMA . SuperExpr RPAREN
    (18) SuperExpr -> . Expression Gen_Quad4 SuperExpr1
    (127) SuperExpr -> . Expression error SuperExpr1
    (22) Expression -> . Expr Expression1 Gen_Quad3
    (30) Expr -> . Term Gen_Quad2 Expr1
    (34) Term -> . Factor Gen_Quad1 Term1
    (38) Factor -> . LPAREN Push_Expr SuperExpr RPAREN Pop_Expr
    (39) Factor -> . Factor1 Seen_Operand
    (40) Factor1 -> . Factor2
    (41) Factor1 -> . Constant
    (42) Factor2 -> . MINUS Gen_Quad0 Constant
    (43) Factor2 -> . PLUS Gen_Quad0 Constant
    (102) Constant -> . ID
    (103) Constant -> . FCONST
    (104) Constant -> . ICONST
    (105) Constant -> . FALSE
    (106) Constant -> . TRUE

    LPAREN          shift and go to state 141
    MINUS           shift and go to state 132
    PLUS            shift and go to state 135
    ID              shift and go to state 144
    FCONST          shift and go to state 134
    ICONST          shift and go to state 140
    FALSE           shift and go to state 142
    TRUE            shift and go to state 131

    Term                           shift and go to state 136
    Constant                       shift and go to state 145
    Factor1                        shift and go to state 133
    Factor2                        shift and go to state 138
    SuperExpr                      shift and go to state 228
    Factor                         shift and go to state 130
    Expr                           shift and go to state 139
    Expression                     shift and go to state 143

state 191

    (62) Brush -> BRUSH LPAREN Color COMMA . SuperExpr RPAREN
    (18) SuperExpr -> . Expression Gen_Quad4 SuperExpr1
    (127) SuperExpr -> . Expression error SuperExpr1
    (22) Expression -> . Expr Expression1 Gen_Quad3
    (30) Expr -> . Term Gen_Quad2 Expr1
    (34) Term -> . Factor Gen_Quad1 Term1
    (38) Factor -> . LPAREN Push_Expr SuperExpr RPAREN Pop_Expr
    (39) Factor -> . Factor1 Seen_Operand
    (40) Factor1 -> . Factor2
    (41) Factor1 -> . Constant
    (42) Factor2 -> . MINUS Gen_Quad0 Constant
    (43) Factor2 -> . PLUS Gen_Quad0 Constant
    (102) Constant -> . ID
    (103) Constant -> . FCONST
    (104) Constant -> . ICONST
    (105) Constant -> . FALSE
    (106) Constant -> . TRUE

    LPAREN          shift and go to state 141
    MINUS           shift and go to state 132
    PLUS            shift and go to state 135
    ID              shift and go to state 144
    FCONST          shift and go to state 134
    ICONST          shift and go to state 140
    FALSE           shift and go to state 142
    TRUE            shift and go to state 131

    Term                           shift and go to state 136
    Constant                       shift and go to state 145
    Factor1                        shift and go to state 133
    SuperExpr                      shift and go to state 229
    Factor                         shift and go to state 130
    Factor2                        shift and go to state 138
    Expr                           shift and go to state 139
    Expression                     shift and go to state 143

state 192

    (57) Call -> ID LPAREN Params RPAREN .

    SEMI            reduce using rule 57 (Call -> ID LPAREN Params RPAREN .)


state 193

    (52) Assign -> ID Seen_Operand EQUAL Seen_Operator . Assign1
    (53) Assign1 -> . SuperExpr Gen_Quad5
    (54) Assign1 -> . Call
    (55) Assign1 -> . STRING
    (56) Assign1 -> . CCONST
    (18) SuperExpr -> . Expression Gen_Quad4 SuperExpr1
    (127) SuperExpr -> . Expression error SuperExpr1
    (57) Call -> . ID LPAREN Params RPAREN
    (22) Expression -> . Expr Expression1 Gen_Quad3
    (30) Expr -> . Term Gen_Quad2 Expr1
    (34) Term -> . Factor Gen_Quad1 Term1
    (38) Factor -> . LPAREN Push_Expr SuperExpr RPAREN Pop_Expr
    (39) Factor -> . Factor1 Seen_Operand
    (40) Factor1 -> . Factor2
    (41) Factor1 -> . Constant
    (42) Factor2 -> . MINUS Gen_Quad0 Constant
    (43) Factor2 -> . PLUS Gen_Quad0 Constant
    (102) Constant -> . ID
    (103) Constant -> . FCONST
    (104) Constant -> . ICONST
    (105) Constant -> . FALSE
    (106) Constant -> . TRUE

    STRING          shift and go to state 233
    CCONST          shift and go to state 232
    ID              shift and go to state 234
    LPAREN          shift and go to state 141
    MINUS           shift and go to state 132
    PLUS            shift and go to state 135
    FCONST          shift and go to state 134
    ICONST          shift and go to state 140
    FALSE           shift and go to state 142
    TRUE            shift and go to state 131

    SuperExpr                      shift and go to state 230
    Call                           shift and go to state 231
    Factor                         shift and go to state 130
    Term                           shift and go to state 136
    Factor1                        shift and go to state 133
    Factor2                        shift and go to state 138
    Expr                           shift and go to state 139
    Expression                     shift and go to state 143
    Constant                       shift and go to state 145
    Assign1                        shift and go to state 235

state 194

    (15) Conditional -> IF LPAREN SuperExpr RPAREN . Block Else
    (12) Block -> . LBRACE Instruction RBRACE
    (123) Block -> . LBRACE error RBRACE

    LBRACE          shift and go to state 236

    Block                          shift and go to state 237

state 195

    (67) Forward -> FD LPAREN SuperExpr RPAREN .

    SEMI            reduce using rule 67 (Forward -> FD LPAREN SuperExpr RPAREN .)


state 196

    (63) Color -> COLOR LPAREN SuperExpr COMMA . SuperExpr COMMA SuperExpr RPAREN
    (18) SuperExpr -> . Expression Gen_Quad4 SuperExpr1
    (127) SuperExpr -> . Expression error SuperExpr1
    (22) Expression -> . Expr Expression1 Gen_Quad3
    (30) Expr -> . Term Gen_Quad2 Expr1
    (34) Term -> . Factor Gen_Quad1 Term1
    (38) Factor -> . LPAREN Push_Expr SuperExpr RPAREN Pop_Expr
    (39) Factor -> . Factor1 Seen_Operand
    (40) Factor1 -> . Factor2
    (41) Factor1 -> . Constant
    (42) Factor2 -> . MINUS Gen_Quad0 Constant
    (43) Factor2 -> . PLUS Gen_Quad0 Constant
    (102) Constant -> . ID
    (103) Constant -> . FCONST
    (104) Constant -> . ICONST
    (105) Constant -> . FALSE
    (106) Constant -> . TRUE

    LPAREN          shift and go to state 141
    MINUS           shift and go to state 132
    PLUS            shift and go to state 135
    ID              shift and go to state 144
    FCONST          shift and go to state 134
    ICONST          shift and go to state 140
    FALSE           shift and go to state 142
    TRUE            shift and go to state 131

    Term                           shift and go to state 136
    Constant                       shift and go to state 145
    Factor1                        shift and go to state 133
    Factor2                        shift and go to state 138
    SuperExpr                      shift and go to state 238
    Factor                         shift and go to state 130
    Expr                           shift and go to state 139
    Expression                     shift and go to state 143

state 197

    (69) Circle -> CIRCLE LPAREN SuperExpr RPAREN .

    SEMI            reduce using rule 69 (Circle -> CIRCLE LPAREN SuperExpr RPAREN .)


state 198

    (126) Circle -> CIRCLE LPAREN error RPAREN .

    SEMI            reduce using rule 126 (Circle -> CIRCLE LPAREN error RPAREN .)


state 199

    (84) Instruction -> Instruction1 SEMI Seen_Semi Instruction .

    RBRACE          reduce using rule 84 (Instruction -> Instruction1 SEMI Seen_Semi Instruction .)
    RETURN          reduce using rule 84 (Instruction -> Instruction1 SEMI Seen_Semi Instruction .)


state 200

    (51) Loop -> LOOP LPAREN SuperExpr RPAREN . Block
    (12) Block -> . LBRACE Instruction RBRACE
    (123) Block -> . LBRACE error RBRACE

    LBRACE          shift and go to state 236

    Block                          shift and go to state 239

state 201

    (14) RFBlock -> LBRACE Declaration Instruction RETURN SuperExpr . SEMI RBRACE

    SEMI            shift and go to state 240


state 202

    (125) RFBlock -> LBRACE Declaration error RETURN SuperExpr . SEMI RBRACE

    SEMI            shift and go to state 241


state 203

    (58) Read -> READ LPAREN Type COMMA ID . RPAREN

    RPAREN          shift and go to state 242


state 204

    (49) Params3 -> COMMA Params2 .

    RPAREN          reduce using rule 49 (Params3 -> COMMA Params2 .)


state 205

    (35) Term1 -> DIVIDE . Seen_Operator Term
    (128) Term1 -> DIVIDE . error Term
    (108) Seen_Operator -> .

    error           shift and go to state 243
    LPAREN          reduce using rule 108 (Seen_Operator -> .)
    MINUS           reduce using rule 108 (Seen_Operator -> .)
    PLUS            reduce using rule 108 (Seen_Operator -> .)
    ID              reduce using rule 108 (Seen_Operator -> .)
    FCONST          reduce using rule 108 (Seen_Operator -> .)
    ICONST          reduce using rule 108 (Seen_Operator -> .)
    FALSE           reduce using rule 108 (Seen_Operator -> .)
    TRUE            reduce using rule 108 (Seen_Operator -> .)

    Seen_Operator                  shift and go to state 244

state 206

    (34) Term -> Factor Gen_Quad1 Term1 .

    MINUS           reduce using rule 34 (Term -> Factor Gen_Quad1 Term1 .)
    PLUS            reduce using rule 34 (Term -> Factor Gen_Quad1 Term1 .)
    LESSTHAN        reduce using rule 34 (Term -> Factor Gen_Quad1 Term1 .)
    GREATHAN        reduce using rule 34 (Term -> Factor Gen_Quad1 Term1 .)
    DIFFERENT       reduce using rule 34 (Term -> Factor Gen_Quad1 Term1 .)
    TWOEQUAL        reduce using rule 34 (Term -> Factor Gen_Quad1 Term1 .)
    GREATEQUAL      reduce using rule 34 (Term -> Factor Gen_Quad1 Term1 .)
    LESSEQUAL       reduce using rule 34 (Term -> Factor Gen_Quad1 Term1 .)
    error           reduce using rule 34 (Term -> Factor Gen_Quad1 Term1 .)
    AND             reduce using rule 34 (Term -> Factor Gen_Quad1 Term1 .)
    OR              reduce using rule 34 (Term -> Factor Gen_Quad1 Term1 .)
    COMMA           reduce using rule 34 (Term -> Factor Gen_Quad1 Term1 .)
    RPAREN          reduce using rule 34 (Term -> Factor Gen_Quad1 Term1 .)
    SEMI            reduce using rule 34 (Term -> Factor Gen_Quad1 Term1 .)


state 207

    (36) Term1 -> TIMES . Seen_Operator Term
    (129) Term1 -> TIMES . error Term
    (108) Seen_Operator -> .

    error           shift and go to state 245
    LPAREN          reduce using rule 108 (Seen_Operator -> .)
    MINUS           reduce using rule 108 (Seen_Operator -> .)
    PLUS            reduce using rule 108 (Seen_Operator -> .)
    ID              reduce using rule 108 (Seen_Operator -> .)
    FCONST          reduce using rule 108 (Seen_Operator -> .)
    ICONST          reduce using rule 108 (Seen_Operator -> .)
    FALSE           reduce using rule 108 (Seen_Operator -> .)
    TRUE            reduce using rule 108 (Seen_Operator -> .)

    Seen_Operator                  shift and go to state 246

state 208

    (37) Term1 -> empty .

    MINUS           reduce using rule 37 (Term1 -> empty .)
    PLUS            reduce using rule 37 (Term1 -> empty .)
    LESSTHAN        reduce using rule 37 (Term1 -> empty .)
    GREATHAN        reduce using rule 37 (Term1 -> empty .)
    DIFFERENT       reduce using rule 37 (Term1 -> empty .)
    TWOEQUAL        reduce using rule 37 (Term1 -> empty .)
    GREATEQUAL      reduce using rule 37 (Term1 -> empty .)
    LESSEQUAL       reduce using rule 37 (Term1 -> empty .)
    error           reduce using rule 37 (Term1 -> empty .)
    AND             reduce using rule 37 (Term1 -> empty .)
    OR              reduce using rule 37 (Term1 -> empty .)
    COMMA           reduce using rule 37 (Term1 -> empty .)
    RPAREN          reduce using rule 37 (Term1 -> empty .)
    SEMI            reduce using rule 37 (Term1 -> empty .)


state 209

    (42) Factor2 -> MINUS Gen_Quad0 Constant .

    DIVIDE          reduce using rule 42 (Factor2 -> MINUS Gen_Quad0 Constant .)
    TIMES           reduce using rule 42 (Factor2 -> MINUS Gen_Quad0 Constant .)
    MINUS           reduce using rule 42 (Factor2 -> MINUS Gen_Quad0 Constant .)
    PLUS            reduce using rule 42 (Factor2 -> MINUS Gen_Quad0 Constant .)
    error           reduce using rule 42 (Factor2 -> MINUS Gen_Quad0 Constant .)
    AND             reduce using rule 42 (Factor2 -> MINUS Gen_Quad0 Constant .)
    OR              reduce using rule 42 (Factor2 -> MINUS Gen_Quad0 Constant .)
    COMMA           reduce using rule 42 (Factor2 -> MINUS Gen_Quad0 Constant .)
    RPAREN          reduce using rule 42 (Factor2 -> MINUS Gen_Quad0 Constant .)
    SEMI            reduce using rule 42 (Factor2 -> MINUS Gen_Quad0 Constant .)
    LESSTHAN        reduce using rule 42 (Factor2 -> MINUS Gen_Quad0 Constant .)
    GREATHAN        reduce using rule 42 (Factor2 -> MINUS Gen_Quad0 Constant .)
    DIFFERENT       reduce using rule 42 (Factor2 -> MINUS Gen_Quad0 Constant .)
    TWOEQUAL        reduce using rule 42 (Factor2 -> MINUS Gen_Quad0 Constant .)
    GREATEQUAL      reduce using rule 42 (Factor2 -> MINUS Gen_Quad0 Constant .)
    LESSEQUAL       reduce using rule 42 (Factor2 -> MINUS Gen_Quad0 Constant .)


state 210

    (43) Factor2 -> PLUS Gen_Quad0 Constant .

    DIVIDE          reduce using rule 43 (Factor2 -> PLUS Gen_Quad0 Constant .)
    TIMES           reduce using rule 43 (Factor2 -> PLUS Gen_Quad0 Constant .)
    MINUS           reduce using rule 43 (Factor2 -> PLUS Gen_Quad0 Constant .)
    PLUS            reduce using rule 43 (Factor2 -> PLUS Gen_Quad0 Constant .)
    error           reduce using rule 43 (Factor2 -> PLUS Gen_Quad0 Constant .)
    AND             reduce using rule 43 (Factor2 -> PLUS Gen_Quad0 Constant .)
    OR              reduce using rule 43 (Factor2 -> PLUS Gen_Quad0 Constant .)
    COMMA           reduce using rule 43 (Factor2 -> PLUS Gen_Quad0 Constant .)
    RPAREN          reduce using rule 43 (Factor2 -> PLUS Gen_Quad0 Constant .)
    SEMI            reduce using rule 43 (Factor2 -> PLUS Gen_Quad0 Constant .)
    LESSTHAN        reduce using rule 43 (Factor2 -> PLUS Gen_Quad0 Constant .)
    GREATHAN        reduce using rule 43 (Factor2 -> PLUS Gen_Quad0 Constant .)
    DIFFERENT       reduce using rule 43 (Factor2 -> PLUS Gen_Quad0 Constant .)
    TWOEQUAL        reduce using rule 43 (Factor2 -> PLUS Gen_Quad0 Constant .)
    GREATEQUAL      reduce using rule 43 (Factor2 -> PLUS Gen_Quad0 Constant .)
    LESSEQUAL       reduce using rule 43 (Factor2 -> PLUS Gen_Quad0 Constant .)


state 211

    (30) Expr -> Term Gen_Quad2 Expr1 .

    LESSTHAN        reduce using rule 30 (Expr -> Term Gen_Quad2 Expr1 .)
    GREATHAN        reduce using rule 30 (Expr -> Term Gen_Quad2 Expr1 .)
    DIFFERENT       reduce using rule 30 (Expr -> Term Gen_Quad2 Expr1 .)
    TWOEQUAL        reduce using rule 30 (Expr -> Term Gen_Quad2 Expr1 .)
    GREATEQUAL      reduce using rule 30 (Expr -> Term Gen_Quad2 Expr1 .)
    LESSEQUAL       reduce using rule 30 (Expr -> Term Gen_Quad2 Expr1 .)
    error           reduce using rule 30 (Expr -> Term Gen_Quad2 Expr1 .)
    AND             reduce using rule 30 (Expr -> Term Gen_Quad2 Expr1 .)
    OR              reduce using rule 30 (Expr -> Term Gen_Quad2 Expr1 .)
    SEMI            reduce using rule 30 (Expr -> Term Gen_Quad2 Expr1 .)
    COMMA           reduce using rule 30 (Expr -> Term Gen_Quad2 Expr1 .)
    RPAREN          reduce using rule 30 (Expr -> Term Gen_Quad2 Expr1 .)


state 212

    (32) Expr1 -> PLUS . Seen_Operator Expr
    (108) Seen_Operator -> .

    LPAREN          reduce using rule 108 (Seen_Operator -> .)
    MINUS           reduce using rule 108 (Seen_Operator -> .)
    PLUS            reduce using rule 108 (Seen_Operator -> .)
    ID              reduce using rule 108 (Seen_Operator -> .)
    FCONST          reduce using rule 108 (Seen_Operator -> .)
    ICONST          reduce using rule 108 (Seen_Operator -> .)
    FALSE           reduce using rule 108 (Seen_Operator -> .)
    TRUE            reduce using rule 108 (Seen_Operator -> .)

    Seen_Operator                  shift and go to state 247

state 213

    (31) Expr1 -> MINUS . Seen_Operator Expr
    (108) Seen_Operator -> .

    LPAREN          reduce using rule 108 (Seen_Operator -> .)
    MINUS           reduce using rule 108 (Seen_Operator -> .)
    PLUS            reduce using rule 108 (Seen_Operator -> .)
    ID              reduce using rule 108 (Seen_Operator -> .)
    FCONST          reduce using rule 108 (Seen_Operator -> .)
    ICONST          reduce using rule 108 (Seen_Operator -> .)
    FALSE           reduce using rule 108 (Seen_Operator -> .)
    TRUE            reduce using rule 108 (Seen_Operator -> .)

    Seen_Operator                  shift and go to state 248

state 214

    (33) Expr1 -> empty .

    LESSTHAN        reduce using rule 33 (Expr1 -> empty .)
    GREATHAN        reduce using rule 33 (Expr1 -> empty .)
    DIFFERENT       reduce using rule 33 (Expr1 -> empty .)
    TWOEQUAL        reduce using rule 33 (Expr1 -> empty .)
    GREATEQUAL      reduce using rule 33 (Expr1 -> empty .)
    LESSEQUAL       reduce using rule 33 (Expr1 -> empty .)
    error           reduce using rule 33 (Expr1 -> empty .)
    AND             reduce using rule 33 (Expr1 -> empty .)
    OR              reduce using rule 33 (Expr1 -> empty .)
    COMMA           reduce using rule 33 (Expr1 -> empty .)
    RPAREN          reduce using rule 33 (Expr1 -> empty .)
    SEMI            reduce using rule 33 (Expr1 -> empty .)


state 215

    (25) Expression1 -> DIFFERENT Seen_Operator . Expr
    (30) Expr -> . Term Gen_Quad2 Expr1
    (34) Term -> . Factor Gen_Quad1 Term1
    (38) Factor -> . LPAREN Push_Expr SuperExpr RPAREN Pop_Expr
    (39) Factor -> . Factor1 Seen_Operand
    (40) Factor1 -> . Factor2
    (41) Factor1 -> . Constant
    (42) Factor2 -> . MINUS Gen_Quad0 Constant
    (43) Factor2 -> . PLUS Gen_Quad0 Constant
    (102) Constant -> . ID
    (103) Constant -> . FCONST
    (104) Constant -> . ICONST
    (105) Constant -> . FALSE
    (106) Constant -> . TRUE

    LPAREN          shift and go to state 141
    MINUS           shift and go to state 132
    PLUS            shift and go to state 135
    ID              shift and go to state 144
    FCONST          shift and go to state 134
    ICONST          shift and go to state 140
    FALSE           shift and go to state 142
    TRUE            shift and go to state 131

    Term                           shift and go to state 136
    Factor1                        shift and go to state 133
    Factor2                        shift and go to state 138
    Expr                           shift and go to state 249
    Factor                         shift and go to state 130
    Constant                       shift and go to state 145

state 216

    (24) Expression1 -> GREATHAN Seen_Operator . Expr
    (30) Expr -> . Term Gen_Quad2 Expr1
    (34) Term -> . Factor Gen_Quad1 Term1
    (38) Factor -> . LPAREN Push_Expr SuperExpr RPAREN Pop_Expr
    (39) Factor -> . Factor1 Seen_Operand
    (40) Factor1 -> . Factor2
    (41) Factor1 -> . Constant
    (42) Factor2 -> . MINUS Gen_Quad0 Constant
    (43) Factor2 -> . PLUS Gen_Quad0 Constant
    (102) Constant -> . ID
    (103) Constant -> . FCONST
    (104) Constant -> . ICONST
    (105) Constant -> . FALSE
    (106) Constant -> . TRUE

    LPAREN          shift and go to state 141
    MINUS           shift and go to state 132
    PLUS            shift and go to state 135
    ID              shift and go to state 144
    FCONST          shift and go to state 134
    ICONST          shift and go to state 140
    FALSE           shift and go to state 142
    TRUE            shift and go to state 131

    Term                           shift and go to state 136
    Factor1                        shift and go to state 133
    Factor2                        shift and go to state 138
    Expr                           shift and go to state 250
    Factor                         shift and go to state 130
    Constant                       shift and go to state 145

state 217

    (26) Expression1 -> TWOEQUAL Seen_Operator . Expr
    (30) Expr -> . Term Gen_Quad2 Expr1
    (34) Term -> . Factor Gen_Quad1 Term1
    (38) Factor -> . LPAREN Push_Expr SuperExpr RPAREN Pop_Expr
    (39) Factor -> . Factor1 Seen_Operand
    (40) Factor1 -> . Factor2
    (41) Factor1 -> . Constant
    (42) Factor2 -> . MINUS Gen_Quad0 Constant
    (43) Factor2 -> . PLUS Gen_Quad0 Constant
    (102) Constant -> . ID
    (103) Constant -> . FCONST
    (104) Constant -> . ICONST
    (105) Constant -> . FALSE
    (106) Constant -> . TRUE

    LPAREN          shift and go to state 141
    MINUS           shift and go to state 132
    PLUS            shift and go to state 135
    ID              shift and go to state 144
    FCONST          shift and go to state 134
    ICONST          shift and go to state 140
    FALSE           shift and go to state 142
    TRUE            shift and go to state 131

    Term                           shift and go to state 136
    Factor1                        shift and go to state 133
    Factor2                        shift and go to state 138
    Expr                           shift and go to state 251
    Factor                         shift and go to state 130
    Constant                       shift and go to state 145

state 218

    (27) Expression1 -> GREATEQUAL Seen_Operator . Expr
    (30) Expr -> . Term Gen_Quad2 Expr1
    (34) Term -> . Factor Gen_Quad1 Term1
    (38) Factor -> . LPAREN Push_Expr SuperExpr RPAREN Pop_Expr
    (39) Factor -> . Factor1 Seen_Operand
    (40) Factor1 -> . Factor2
    (41) Factor1 -> . Constant
    (42) Factor2 -> . MINUS Gen_Quad0 Constant
    (43) Factor2 -> . PLUS Gen_Quad0 Constant
    (102) Constant -> . ID
    (103) Constant -> . FCONST
    (104) Constant -> . ICONST
    (105) Constant -> . FALSE
    (106) Constant -> . TRUE

    LPAREN          shift and go to state 141
    MINUS           shift and go to state 132
    PLUS            shift and go to state 135
    ID              shift and go to state 144
    FCONST          shift and go to state 134
    ICONST          shift and go to state 140
    FALSE           shift and go to state 142
    TRUE            shift and go to state 131

    Term                           shift and go to state 136
    Factor1                        shift and go to state 133
    Factor2                        shift and go to state 138
    Expr                           shift and go to state 252
    Factor                         shift and go to state 130
    Constant                       shift and go to state 145

state 219

    (28) Expression1 -> LESSEQUAL Seen_Operator . Expr
    (30) Expr -> . Term Gen_Quad2 Expr1
    (34) Term -> . Factor Gen_Quad1 Term1
    (38) Factor -> . LPAREN Push_Expr SuperExpr RPAREN Pop_Expr
    (39) Factor -> . Factor1 Seen_Operand
    (40) Factor1 -> . Factor2
    (41) Factor1 -> . Constant
    (42) Factor2 -> . MINUS Gen_Quad0 Constant
    (43) Factor2 -> . PLUS Gen_Quad0 Constant
    (102) Constant -> . ID
    (103) Constant -> . FCONST
    (104) Constant -> . ICONST
    (105) Constant -> . FALSE
    (106) Constant -> . TRUE

    LPAREN          shift and go to state 141
    MINUS           shift and go to state 132
    PLUS            shift and go to state 135
    ID              shift and go to state 144
    FCONST          shift and go to state 134
    ICONST          shift and go to state 140
    FALSE           shift and go to state 142
    TRUE            shift and go to state 131

    Term                           shift and go to state 136
    Factor1                        shift and go to state 133
    Factor2                        shift and go to state 138
    Expr                           shift and go to state 253
    Factor                         shift and go to state 130
    Constant                       shift and go to state 145

state 220

    (23) Expression1 -> LESSTHAN Seen_Operator . Expr
    (30) Expr -> . Term Gen_Quad2 Expr1
    (34) Term -> . Factor Gen_Quad1 Term1
    (38) Factor -> . LPAREN Push_Expr SuperExpr RPAREN Pop_Expr
    (39) Factor -> . Factor1 Seen_Operand
    (40) Factor1 -> . Factor2
    (41) Factor1 -> . Constant
    (42) Factor2 -> . MINUS Gen_Quad0 Constant
    (43) Factor2 -> . PLUS Gen_Quad0 Constant
    (102) Constant -> . ID
    (103) Constant -> . FCONST
    (104) Constant -> . ICONST
    (105) Constant -> . FALSE
    (106) Constant -> . TRUE

    LPAREN          shift and go to state 141
    MINUS           shift and go to state 132
    PLUS            shift and go to state 135
    ID              shift and go to state 144
    FCONST          shift and go to state 134
    ICONST          shift and go to state 140
    FALSE           shift and go to state 142
    TRUE            shift and go to state 131

    Term                           shift and go to state 136
    Factor1                        shift and go to state 133
    Factor2                        shift and go to state 138
    Expr                           shift and go to state 254
    Factor                         shift and go to state 130
    Constant                       shift and go to state 145

state 221

    (22) Expression -> Expr Expression1 Gen_Quad3 .

    error           reduce using rule 22 (Expression -> Expr Expression1 Gen_Quad3 .)
    AND             reduce using rule 22 (Expression -> Expr Expression1 Gen_Quad3 .)
    OR              reduce using rule 22 (Expression -> Expr Expression1 Gen_Quad3 .)
    RPAREN          reduce using rule 22 (Expression -> Expr Expression1 Gen_Quad3 .)
    COMMA           reduce using rule 22 (Expression -> Expr Expression1 Gen_Quad3 .)
    SEMI            reduce using rule 22 (Expression -> Expr Expression1 Gen_Quad3 .)


state 222

    (38) Factor -> LPAREN Push_Expr SuperExpr . RPAREN Pop_Expr

    RPAREN          shift and go to state 255


state 223

    (19) SuperExpr1 -> AND . Seen_Operator SuperExpr
    (108) Seen_Operator -> .

    LPAREN          reduce using rule 108 (Seen_Operator -> .)
    MINUS           reduce using rule 108 (Seen_Operator -> .)
    PLUS            reduce using rule 108 (Seen_Operator -> .)
    ID              reduce using rule 108 (Seen_Operator -> .)
    FCONST          reduce using rule 108 (Seen_Operator -> .)
    ICONST          reduce using rule 108 (Seen_Operator -> .)
    FALSE           reduce using rule 108 (Seen_Operator -> .)
    TRUE            reduce using rule 108 (Seen_Operator -> .)

    Seen_Operator                  shift and go to state 256

state 224

    (20) SuperExpr1 -> OR . Seen_Operator SuperExpr
    (108) Seen_Operator -> .

    LPAREN          reduce using rule 108 (Seen_Operator -> .)
    MINUS           reduce using rule 108 (Seen_Operator -> .)
    PLUS            reduce using rule 108 (Seen_Operator -> .)
    ID              reduce using rule 108 (Seen_Operator -> .)
    FCONST          reduce using rule 108 (Seen_Operator -> .)
    ICONST          reduce using rule 108 (Seen_Operator -> .)
    FALSE           reduce using rule 108 (Seen_Operator -> .)
    TRUE            reduce using rule 108 (Seen_Operator -> .)

    Seen_Operator                  shift and go to state 257

state 225

    (18) SuperExpr -> Expression Gen_Quad4 SuperExpr1 .

    SEMI            reduce using rule 18 (SuperExpr -> Expression Gen_Quad4 SuperExpr1 .)
    RPAREN          reduce using rule 18 (SuperExpr -> Expression Gen_Quad4 SuperExpr1 .)
    COMMA           reduce using rule 18 (SuperExpr -> Expression Gen_Quad4 SuperExpr1 .)


state 226

    (21) SuperExpr1 -> empty .

    COMMA           reduce using rule 21 (SuperExpr1 -> empty .)
    RPAREN          reduce using rule 21 (SuperExpr1 -> empty .)
    SEMI            reduce using rule 21 (SuperExpr1 -> empty .)


state 227

    (127) SuperExpr -> Expression error SuperExpr1 .

    SEMI            reduce using rule 127 (SuperExpr -> Expression error SuperExpr1 .)
    RPAREN          reduce using rule 127 (SuperExpr -> Expression error SuperExpr1 .)
    COMMA           reduce using rule 127 (SuperExpr -> Expression error SuperExpr1 .)


state 228

    (70) Arc -> ARC LPAREN SuperExpr COMMA SuperExpr . RPAREN

    RPAREN          shift and go to state 258


state 229

    (62) Brush -> BRUSH LPAREN Color COMMA SuperExpr . RPAREN

    RPAREN          shift and go to state 259


state 230

    (53) Assign1 -> SuperExpr . Gen_Quad5
    (116) Gen_Quad5 -> .

    SEMI            reduce using rule 116 (Gen_Quad5 -> .)

    Gen_Quad5                      shift and go to state 260

state 231

    (54) Assign1 -> Call .

    SEMI            reduce using rule 54 (Assign1 -> Call .)


state 232

    (56) Assign1 -> CCONST .

    SEMI            reduce using rule 56 (Assign1 -> CCONST .)


state 233

    (55) Assign1 -> STRING .

    SEMI            reduce using rule 55 (Assign1 -> STRING .)


state 234

    (57) Call -> ID . LPAREN Params RPAREN
    (102) Constant -> ID .

    LPAREN          shift and go to state 110
    DIVIDE          reduce using rule 102 (Constant -> ID .)
    TIMES           reduce using rule 102 (Constant -> ID .)
    MINUS           reduce using rule 102 (Constant -> ID .)
    PLUS            reduce using rule 102 (Constant -> ID .)
    LESSTHAN        reduce using rule 102 (Constant -> ID .)
    GREATHAN        reduce using rule 102 (Constant -> ID .)
    DIFFERENT       reduce using rule 102 (Constant -> ID .)
    TWOEQUAL        reduce using rule 102 (Constant -> ID .)
    GREATEQUAL      reduce using rule 102 (Constant -> ID .)
    LESSEQUAL       reduce using rule 102 (Constant -> ID .)
    error           reduce using rule 102 (Constant -> ID .)
    AND             reduce using rule 102 (Constant -> ID .)
    OR              reduce using rule 102 (Constant -> ID .)
    SEMI            reduce using rule 102 (Constant -> ID .)


state 235

    (52) Assign -> ID Seen_Operand EQUAL Seen_Operator Assign1 .

    SEMI            reduce using rule 52 (Assign -> ID Seen_Operand EQUAL Seen_Operator Assign1 .)


state 236

    (12) Block -> LBRACE . Instruction RBRACE
    (123) Block -> LBRACE . error RBRACE
    (84) Instruction -> . Instruction1 SEMI Seen_Semi Instruction
    (85) Instruction -> . empty
    (86) Instruction1 -> . Loop
    (87) Instruction1 -> . Conditional
    (88) Instruction1 -> . Assign
    (89) Instruction1 -> . Call
    (90) Instruction1 -> . Brush
    (91) Instruction1 -> . Read
    (92) Instruction1 -> . Print
    (93) Instruction1 -> . PenDown
    (94) Instruction1 -> . PenUp
    (95) Instruction1 -> . Home
    (96) Instruction1 -> . Forward
    (97) Instruction1 -> . Rotate
    (98) Instruction1 -> . Color
    (99) Instruction1 -> . Circle
    (100) Instruction1 -> . Arc
    (101) Instruction1 -> . Square
    (121) empty -> .
    (51) Loop -> . LOOP LPAREN SuperExpr RPAREN Block
    (15) Conditional -> . IF LPAREN SuperExpr RPAREN Block Else
    (52) Assign -> . ID Seen_Operand EQUAL Seen_Operator Assign1
    (57) Call -> . ID LPAREN Params RPAREN
    (62) Brush -> . BRUSH LPAREN Color COMMA SuperExpr RPAREN
    (58) Read -> . READ LPAREN Type COMMA ID RPAREN
    (61) Print -> . PRINT LPAREN Params1 RPAREN
    (64) PenDown -> . PD LPAREN RPAREN
    (65) PenUp -> . PU LPAREN RPAREN
    (66) Home -> . HOME LPAREN RPAREN
    (67) Forward -> . FD LPAREN SuperExpr RPAREN
    (68) Rotate -> . RT LPAREN SuperExpr RPAREN
    (63) Color -> . COLOR LPAREN SuperExpr COMMA SuperExpr COMMA SuperExpr RPAREN
    (69) Circle -> . CIRCLE LPAREN SuperExpr RPAREN
    (126) Circle -> . CIRCLE LPAREN error RPAREN
    (70) Arc -> . ARC LPAREN SuperExpr COMMA SuperExpr RPAREN
    (71) Square -> . SQUARE LPAREN SuperExpr RPAREN

    error           shift and go to state 262
    RBRACE          reduce using rule 121 (empty -> .)
    LOOP            shift and go to state 94
    IF              shift and go to state 83
    ID              shift and go to state 80
    BRUSH           shift and go to state 76
    READ            shift and go to state 61
    PRINT           shift and go to state 62
    PD              shift and go to state 74
    PU              shift and go to state 71
    HOME            shift and go to state 68
    FD              shift and go to state 84
    RT              shift and go to state 70
    COLOR           shift and go to state 87
    CIRCLE          shift and go to state 92
    ARC             shift and go to state 73
    SQUARE          shift and go to state 65

    PenUp                          shift and go to state 60
    Print                          shift and go to state 63
    PenDown                        shift and go to state 64
    Call                           shift and go to state 66
    Forward                        shift and go to state 67
    Circle                         shift and go to state 69
    Read                           shift and go to state 72
    Loop                           shift and go to state 82
    empty                          shift and go to state 75
    Rotate                         shift and go to state 77
    Instruction                    shift and go to state 261
    Square                         shift and go to state 79
    Assign                         shift and go to state 81
    Color                          shift and go to state 85
    Conditional                    shift and go to state 86
    Arc                            shift and go to state 88
    Brush                          shift and go to state 89
    Home                           shift and go to state 91
    Instruction1                   shift and go to state 93

state 237

    (15) Conditional -> IF LPAREN SuperExpr RPAREN Block . Else
    (16) Else -> . ELSE Block
    (17) Else -> . empty
    (121) empty -> .

    ELSE            shift and go to state 265
    SEMI            reduce using rule 121 (empty -> .)

    empty                          shift and go to state 264
    Else                           shift and go to state 263

state 238

    (63) Color -> COLOR LPAREN SuperExpr COMMA SuperExpr . COMMA SuperExpr RPAREN

    COMMA           shift and go to state 266


state 239

    (51) Loop -> LOOP LPAREN SuperExpr RPAREN Block .

    SEMI            reduce using rule 51 (Loop -> LOOP LPAREN SuperExpr RPAREN Block .)


state 240

    (14) RFBlock -> LBRACE Declaration Instruction RETURN SuperExpr SEMI . RBRACE

    RBRACE          shift and go to state 267


state 241

    (125) RFBlock -> LBRACE Declaration error RETURN SuperExpr SEMI . RBRACE

    RBRACE          shift and go to state 268


state 242

    (58) Read -> READ LPAREN Type COMMA ID RPAREN .

    SEMI            reduce using rule 58 (Read -> READ LPAREN Type COMMA ID RPAREN .)


state 243

    (128) Term1 -> DIVIDE error . Term
    (34) Term -> . Factor Gen_Quad1 Term1
    (38) Factor -> . LPAREN Push_Expr SuperExpr RPAREN Pop_Expr
    (39) Factor -> . Factor1 Seen_Operand
    (40) Factor1 -> . Factor2
    (41) Factor1 -> . Constant
    (42) Factor2 -> . MINUS Gen_Quad0 Constant
    (43) Factor2 -> . PLUS Gen_Quad0 Constant
    (102) Constant -> . ID
    (103) Constant -> . FCONST
    (104) Constant -> . ICONST
    (105) Constant -> . FALSE
    (106) Constant -> . TRUE

    LPAREN          shift and go to state 141
    MINUS           shift and go to state 132
    PLUS            shift and go to state 135
    ID              shift and go to state 144
    FCONST          shift and go to state 134
    ICONST          shift and go to state 140
    FALSE           shift and go to state 142
    TRUE            shift and go to state 131

    Term                           shift and go to state 269
    Constant                       shift and go to state 145
    Factor1                        shift and go to state 133
    Factor2                        shift and go to state 138
    Factor                         shift and go to state 130

state 244

    (35) Term1 -> DIVIDE Seen_Operator . Term
    (34) Term -> . Factor Gen_Quad1 Term1
    (38) Factor -> . LPAREN Push_Expr SuperExpr RPAREN Pop_Expr
    (39) Factor -> . Factor1 Seen_Operand
    (40) Factor1 -> . Factor2
    (41) Factor1 -> . Constant
    (42) Factor2 -> . MINUS Gen_Quad0 Constant
    (43) Factor2 -> . PLUS Gen_Quad0 Constant
    (102) Constant -> . ID
    (103) Constant -> . FCONST
    (104) Constant -> . ICONST
    (105) Constant -> . FALSE
    (106) Constant -> . TRUE

    LPAREN          shift and go to state 141
    MINUS           shift and go to state 132
    PLUS            shift and go to state 135
    ID              shift and go to state 144
    FCONST          shift and go to state 134
    ICONST          shift and go to state 140
    FALSE           shift and go to state 142
    TRUE            shift and go to state 131

    Term                           shift and go to state 270
    Constant                       shift and go to state 145
    Factor1                        shift and go to state 133
    Factor2                        shift and go to state 138
    Factor                         shift and go to state 130

state 245

    (129) Term1 -> TIMES error . Term
    (34) Term -> . Factor Gen_Quad1 Term1
    (38) Factor -> . LPAREN Push_Expr SuperExpr RPAREN Pop_Expr
    (39) Factor -> . Factor1 Seen_Operand
    (40) Factor1 -> . Factor2
    (41) Factor1 -> . Constant
    (42) Factor2 -> . MINUS Gen_Quad0 Constant
    (43) Factor2 -> . PLUS Gen_Quad0 Constant
    (102) Constant -> . ID
    (103) Constant -> . FCONST
    (104) Constant -> . ICONST
    (105) Constant -> . FALSE
    (106) Constant -> . TRUE

    LPAREN          shift and go to state 141
    MINUS           shift and go to state 132
    PLUS            shift and go to state 135
    ID              shift and go to state 144
    FCONST          shift and go to state 134
    ICONST          shift and go to state 140
    FALSE           shift and go to state 142
    TRUE            shift and go to state 131

    Term                           shift and go to state 271
    Constant                       shift and go to state 145
    Factor1                        shift and go to state 133
    Factor2                        shift and go to state 138
    Factor                         shift and go to state 130

state 246

    (36) Term1 -> TIMES Seen_Operator . Term
    (34) Term -> . Factor Gen_Quad1 Term1
    (38) Factor -> . LPAREN Push_Expr SuperExpr RPAREN Pop_Expr
    (39) Factor -> . Factor1 Seen_Operand
    (40) Factor1 -> . Factor2
    (41) Factor1 -> . Constant
    (42) Factor2 -> . MINUS Gen_Quad0 Constant
    (43) Factor2 -> . PLUS Gen_Quad0 Constant
    (102) Constant -> . ID
    (103) Constant -> . FCONST
    (104) Constant -> . ICONST
    (105) Constant -> . FALSE
    (106) Constant -> . TRUE

    LPAREN          shift and go to state 141
    MINUS           shift and go to state 132
    PLUS            shift and go to state 135
    ID              shift and go to state 144
    FCONST          shift and go to state 134
    ICONST          shift and go to state 140
    FALSE           shift and go to state 142
    TRUE            shift and go to state 131

    Term                           shift and go to state 272
    Constant                       shift and go to state 145
    Factor1                        shift and go to state 133
    Factor2                        shift and go to state 138
    Factor                         shift and go to state 130

state 247

    (32) Expr1 -> PLUS Seen_Operator . Expr
    (30) Expr -> . Term Gen_Quad2 Expr1
    (34) Term -> . Factor Gen_Quad1 Term1
    (38) Factor -> . LPAREN Push_Expr SuperExpr RPAREN Pop_Expr
    (39) Factor -> . Factor1 Seen_Operand
    (40) Factor1 -> . Factor2
    (41) Factor1 -> . Constant
    (42) Factor2 -> . MINUS Gen_Quad0 Constant
    (43) Factor2 -> . PLUS Gen_Quad0 Constant
    (102) Constant -> . ID
    (103) Constant -> . FCONST
    (104) Constant -> . ICONST
    (105) Constant -> . FALSE
    (106) Constant -> . TRUE

    LPAREN          shift and go to state 141
    MINUS           shift and go to state 132
    PLUS            shift and go to state 135
    ID              shift and go to state 144
    FCONST          shift and go to state 134
    ICONST          shift and go to state 140
    FALSE           shift and go to state 142
    TRUE            shift and go to state 131

    Term                           shift and go to state 136
    Factor1                        shift and go to state 133
    Factor2                        shift and go to state 138
    Expr                           shift and go to state 273
    Factor                         shift and go to state 130
    Constant                       shift and go to state 145

state 248

    (31) Expr1 -> MINUS Seen_Operator . Expr
    (30) Expr -> . Term Gen_Quad2 Expr1
    (34) Term -> . Factor Gen_Quad1 Term1
    (38) Factor -> . LPAREN Push_Expr SuperExpr RPAREN Pop_Expr
    (39) Factor -> . Factor1 Seen_Operand
    (40) Factor1 -> . Factor2
    (41) Factor1 -> . Constant
    (42) Factor2 -> . MINUS Gen_Quad0 Constant
    (43) Factor2 -> . PLUS Gen_Quad0 Constant
    (102) Constant -> . ID
    (103) Constant -> . FCONST
    (104) Constant -> . ICONST
    (105) Constant -> . FALSE
    (106) Constant -> . TRUE

    LPAREN          shift and go to state 141
    MINUS           shift and go to state 132
    PLUS            shift and go to state 135
    ID              shift and go to state 144
    FCONST          shift and go to state 134
    ICONST          shift and go to state 140
    FALSE           shift and go to state 142
    TRUE            shift and go to state 131

    Term                           shift and go to state 136
    Factor1                        shift and go to state 133
    Factor2                        shift and go to state 138
    Expr                           shift and go to state 274
    Factor                         shift and go to state 130
    Constant                       shift and go to state 145

state 249

    (25) Expression1 -> DIFFERENT Seen_Operator Expr .

    error           reduce using rule 25 (Expression1 -> DIFFERENT Seen_Operator Expr .)
    AND             reduce using rule 25 (Expression1 -> DIFFERENT Seen_Operator Expr .)
    OR              reduce using rule 25 (Expression1 -> DIFFERENT Seen_Operator Expr .)
    COMMA           reduce using rule 25 (Expression1 -> DIFFERENT Seen_Operator Expr .)
    RPAREN          reduce using rule 25 (Expression1 -> DIFFERENT Seen_Operator Expr .)
    SEMI            reduce using rule 25 (Expression1 -> DIFFERENT Seen_Operator Expr .)


state 250

    (24) Expression1 -> GREATHAN Seen_Operator Expr .

    error           reduce using rule 24 (Expression1 -> GREATHAN Seen_Operator Expr .)
    AND             reduce using rule 24 (Expression1 -> GREATHAN Seen_Operator Expr .)
    OR              reduce using rule 24 (Expression1 -> GREATHAN Seen_Operator Expr .)
    COMMA           reduce using rule 24 (Expression1 -> GREATHAN Seen_Operator Expr .)
    RPAREN          reduce using rule 24 (Expression1 -> GREATHAN Seen_Operator Expr .)
    SEMI            reduce using rule 24 (Expression1 -> GREATHAN Seen_Operator Expr .)


state 251

    (26) Expression1 -> TWOEQUAL Seen_Operator Expr .

    error           reduce using rule 26 (Expression1 -> TWOEQUAL Seen_Operator Expr .)
    AND             reduce using rule 26 (Expression1 -> TWOEQUAL Seen_Operator Expr .)
    OR              reduce using rule 26 (Expression1 -> TWOEQUAL Seen_Operator Expr .)
    COMMA           reduce using rule 26 (Expression1 -> TWOEQUAL Seen_Operator Expr .)
    RPAREN          reduce using rule 26 (Expression1 -> TWOEQUAL Seen_Operator Expr .)
    SEMI            reduce using rule 26 (Expression1 -> TWOEQUAL Seen_Operator Expr .)


state 252

    (27) Expression1 -> GREATEQUAL Seen_Operator Expr .

    error           reduce using rule 27 (Expression1 -> GREATEQUAL Seen_Operator Expr .)
    AND             reduce using rule 27 (Expression1 -> GREATEQUAL Seen_Operator Expr .)
    OR              reduce using rule 27 (Expression1 -> GREATEQUAL Seen_Operator Expr .)
    COMMA           reduce using rule 27 (Expression1 -> GREATEQUAL Seen_Operator Expr .)
    RPAREN          reduce using rule 27 (Expression1 -> GREATEQUAL Seen_Operator Expr .)
    SEMI            reduce using rule 27 (Expression1 -> GREATEQUAL Seen_Operator Expr .)


state 253

    (28) Expression1 -> LESSEQUAL Seen_Operator Expr .

    error           reduce using rule 28 (Expression1 -> LESSEQUAL Seen_Operator Expr .)
    AND             reduce using rule 28 (Expression1 -> LESSEQUAL Seen_Operator Expr .)
    OR              reduce using rule 28 (Expression1 -> LESSEQUAL Seen_Operator Expr .)
    COMMA           reduce using rule 28 (Expression1 -> LESSEQUAL Seen_Operator Expr .)
    RPAREN          reduce using rule 28 (Expression1 -> LESSEQUAL Seen_Operator Expr .)
    SEMI            reduce using rule 28 (Expression1 -> LESSEQUAL Seen_Operator Expr .)


state 254

    (23) Expression1 -> LESSTHAN Seen_Operator Expr .

    error           reduce using rule 23 (Expression1 -> LESSTHAN Seen_Operator Expr .)
    AND             reduce using rule 23 (Expression1 -> LESSTHAN Seen_Operator Expr .)
    OR              reduce using rule 23 (Expression1 -> LESSTHAN Seen_Operator Expr .)
    COMMA           reduce using rule 23 (Expression1 -> LESSTHAN Seen_Operator Expr .)
    RPAREN          reduce using rule 23 (Expression1 -> LESSTHAN Seen_Operator Expr .)
    SEMI            reduce using rule 23 (Expression1 -> LESSTHAN Seen_Operator Expr .)


state 255

    (38) Factor -> LPAREN Push_Expr SuperExpr RPAREN . Pop_Expr
    (110) Pop_Expr -> .

    DIVIDE          reduce using rule 110 (Pop_Expr -> .)
    TIMES           reduce using rule 110 (Pop_Expr -> .)
    MINUS           reduce using rule 110 (Pop_Expr -> .)
    PLUS            reduce using rule 110 (Pop_Expr -> .)
    LESSTHAN        reduce using rule 110 (Pop_Expr -> .)
    GREATHAN        reduce using rule 110 (Pop_Expr -> .)
    DIFFERENT       reduce using rule 110 (Pop_Expr -> .)
    TWOEQUAL        reduce using rule 110 (Pop_Expr -> .)
    GREATEQUAL      reduce using rule 110 (Pop_Expr -> .)
    LESSEQUAL       reduce using rule 110 (Pop_Expr -> .)
    error           reduce using rule 110 (Pop_Expr -> .)
    AND             reduce using rule 110 (Pop_Expr -> .)
    OR              reduce using rule 110 (Pop_Expr -> .)
    COMMA           reduce using rule 110 (Pop_Expr -> .)
    RPAREN          reduce using rule 110 (Pop_Expr -> .)
    SEMI            reduce using rule 110 (Pop_Expr -> .)

    Pop_Expr                       shift and go to state 275

state 256

    (19) SuperExpr1 -> AND Seen_Operator . SuperExpr
    (18) SuperExpr -> . Expression Gen_Quad4 SuperExpr1
    (127) SuperExpr -> . Expression error SuperExpr1
    (22) Expression -> . Expr Expression1 Gen_Quad3
    (30) Expr -> . Term Gen_Quad2 Expr1
    (34) Term -> . Factor Gen_Quad1 Term1
    (38) Factor -> . LPAREN Push_Expr SuperExpr RPAREN Pop_Expr
    (39) Factor -> . Factor1 Seen_Operand
    (40) Factor1 -> . Factor2
    (41) Factor1 -> . Constant
    (42) Factor2 -> . MINUS Gen_Quad0 Constant
    (43) Factor2 -> . PLUS Gen_Quad0 Constant
    (102) Constant -> . ID
    (103) Constant -> . FCONST
    (104) Constant -> . ICONST
    (105) Constant -> . FALSE
    (106) Constant -> . TRUE

    LPAREN          shift and go to state 141
    MINUS           shift and go to state 132
    PLUS            shift and go to state 135
    ID              shift and go to state 144
    FCONST          shift and go to state 134
    ICONST          shift and go to state 140
    FALSE           shift and go to state 142
    TRUE            shift and go to state 131

    Term                           shift and go to state 136
    Constant                       shift and go to state 145
    Factor1                        shift and go to state 133
    Factor2                        shift and go to state 138
    SuperExpr                      shift and go to state 276
    Factor                         shift and go to state 130
    Expr                           shift and go to state 139
    Expression                     shift and go to state 143

state 257

    (20) SuperExpr1 -> OR Seen_Operator . SuperExpr
    (18) SuperExpr -> . Expression Gen_Quad4 SuperExpr1
    (127) SuperExpr -> . Expression error SuperExpr1
    (22) Expression -> . Expr Expression1 Gen_Quad3
    (30) Expr -> . Term Gen_Quad2 Expr1
    (34) Term -> . Factor Gen_Quad1 Term1
    (38) Factor -> . LPAREN Push_Expr SuperExpr RPAREN Pop_Expr
    (39) Factor -> . Factor1 Seen_Operand
    (40) Factor1 -> . Factor2
    (41) Factor1 -> . Constant
    (42) Factor2 -> . MINUS Gen_Quad0 Constant
    (43) Factor2 -> . PLUS Gen_Quad0 Constant
    (102) Constant -> . ID
    (103) Constant -> . FCONST
    (104) Constant -> . ICONST
    (105) Constant -> . FALSE
    (106) Constant -> . TRUE

    LPAREN          shift and go to state 141
    MINUS           shift and go to state 132
    PLUS            shift and go to state 135
    ID              shift and go to state 144
    FCONST          shift and go to state 134
    ICONST          shift and go to state 140
    FALSE           shift and go to state 142
    TRUE            shift and go to state 131

    Term                           shift and go to state 136
    Constant                       shift and go to state 145
    Factor1                        shift and go to state 133
    Factor2                        shift and go to state 138
    SuperExpr                      shift and go to state 277
    Factor                         shift and go to state 130
    Expr                           shift and go to state 139
    Expression                     shift and go to state 143

state 258

    (70) Arc -> ARC LPAREN SuperExpr COMMA SuperExpr RPAREN .

    SEMI            reduce using rule 70 (Arc -> ARC LPAREN SuperExpr COMMA SuperExpr RPAREN .)


state 259

    (62) Brush -> BRUSH LPAREN Color COMMA SuperExpr RPAREN .

    SEMI            reduce using rule 62 (Brush -> BRUSH LPAREN Color COMMA SuperExpr RPAREN .)


state 260

    (53) Assign1 -> SuperExpr Gen_Quad5 .

    SEMI            reduce using rule 53 (Assign1 -> SuperExpr Gen_Quad5 .)


state 261

    (12) Block -> LBRACE Instruction . RBRACE

    RBRACE          shift and go to state 278


state 262

    (123) Block -> LBRACE error . RBRACE

    RBRACE          shift and go to state 279


state 263

    (15) Conditional -> IF LPAREN SuperExpr RPAREN Block Else .

    SEMI            reduce using rule 15 (Conditional -> IF LPAREN SuperExpr RPAREN Block Else .)


state 264

    (17) Else -> empty .

    SEMI            reduce using rule 17 (Else -> empty .)


state 265

    (16) Else -> ELSE . Block
    (12) Block -> . LBRACE Instruction RBRACE
    (123) Block -> . LBRACE error RBRACE

    LBRACE          shift and go to state 236

    Block                          shift and go to state 280

state 266

    (63) Color -> COLOR LPAREN SuperExpr COMMA SuperExpr COMMA . SuperExpr RPAREN
    (18) SuperExpr -> . Expression Gen_Quad4 SuperExpr1
    (127) SuperExpr -> . Expression error SuperExpr1
    (22) Expression -> . Expr Expression1 Gen_Quad3
    (30) Expr -> . Term Gen_Quad2 Expr1
    (34) Term -> . Factor Gen_Quad1 Term1
    (38) Factor -> . LPAREN Push_Expr SuperExpr RPAREN Pop_Expr
    (39) Factor -> . Factor1 Seen_Operand
    (40) Factor1 -> . Factor2
    (41) Factor1 -> . Constant
    (42) Factor2 -> . MINUS Gen_Quad0 Constant
    (43) Factor2 -> . PLUS Gen_Quad0 Constant
    (102) Constant -> . ID
    (103) Constant -> . FCONST
    (104) Constant -> . ICONST
    (105) Constant -> . FALSE
    (106) Constant -> . TRUE

    LPAREN          shift and go to state 141
    MINUS           shift and go to state 132
    PLUS            shift and go to state 135
    ID              shift and go to state 144
    FCONST          shift and go to state 134
    ICONST          shift and go to state 140
    FALSE           shift and go to state 142
    TRUE            shift and go to state 131

    Term                           shift and go to state 136
    Constant                       shift and go to state 145
    Factor1                        shift and go to state 133
    Factor2                        shift and go to state 138
    SuperExpr                      shift and go to state 281
    Factor                         shift and go to state 130
    Expr                           shift and go to state 139
    Expression                     shift and go to state 143

state 267

    (14) RFBlock -> LBRACE Declaration Instruction RETURN SuperExpr SEMI RBRACE .

    VOID            reduce using rule 14 (RFBlock -> LBRACE Declaration Instruction RETURN SuperExpr SEMI RBRACE .)
    INT             reduce using rule 14 (RFBlock -> LBRACE Declaration Instruction RETURN SuperExpr SEMI RBRACE .)
    FLOAT           reduce using rule 14 (RFBlock -> LBRACE Declaration Instruction RETURN SuperExpr SEMI RBRACE .)
    BOOL            reduce using rule 14 (RFBlock -> LBRACE Declaration Instruction RETURN SuperExpr SEMI RBRACE .)
    CHAR            reduce using rule 14 (RFBlock -> LBRACE Declaration Instruction RETURN SuperExpr SEMI RBRACE .)
    MAIN            reduce using rule 14 (RFBlock -> LBRACE Declaration Instruction RETURN SuperExpr SEMI RBRACE .)


state 268

    (125) RFBlock -> LBRACE Declaration error RETURN SuperExpr SEMI RBRACE .

    VOID            reduce using rule 125 (RFBlock -> LBRACE Declaration error RETURN SuperExpr SEMI RBRACE .)
    INT             reduce using rule 125 (RFBlock -> LBRACE Declaration error RETURN SuperExpr SEMI RBRACE .)
    FLOAT           reduce using rule 125 (RFBlock -> LBRACE Declaration error RETURN SuperExpr SEMI RBRACE .)
    BOOL            reduce using rule 125 (RFBlock -> LBRACE Declaration error RETURN SuperExpr SEMI RBRACE .)
    CHAR            reduce using rule 125 (RFBlock -> LBRACE Declaration error RETURN SuperExpr SEMI RBRACE .)
    MAIN            reduce using rule 125 (RFBlock -> LBRACE Declaration error RETURN SuperExpr SEMI RBRACE .)


state 269

    (128) Term1 -> DIVIDE error Term .

    MINUS           reduce using rule 128 (Term1 -> DIVIDE error Term .)
    PLUS            reduce using rule 128 (Term1 -> DIVIDE error Term .)
    LESSTHAN        reduce using rule 128 (Term1 -> DIVIDE error Term .)
    GREATHAN        reduce using rule 128 (Term1 -> DIVIDE error Term .)
    DIFFERENT       reduce using rule 128 (Term1 -> DIVIDE error Term .)
    TWOEQUAL        reduce using rule 128 (Term1 -> DIVIDE error Term .)
    GREATEQUAL      reduce using rule 128 (Term1 -> DIVIDE error Term .)
    LESSEQUAL       reduce using rule 128 (Term1 -> DIVIDE error Term .)
    error           reduce using rule 128 (Term1 -> DIVIDE error Term .)
    AND             reduce using rule 128 (Term1 -> DIVIDE error Term .)
    OR              reduce using rule 128 (Term1 -> DIVIDE error Term .)
    COMMA           reduce using rule 128 (Term1 -> DIVIDE error Term .)
    RPAREN          reduce using rule 128 (Term1 -> DIVIDE error Term .)
    SEMI            reduce using rule 128 (Term1 -> DIVIDE error Term .)


state 270

    (35) Term1 -> DIVIDE Seen_Operator Term .

    MINUS           reduce using rule 35 (Term1 -> DIVIDE Seen_Operator Term .)
    PLUS            reduce using rule 35 (Term1 -> DIVIDE Seen_Operator Term .)
    LESSTHAN        reduce using rule 35 (Term1 -> DIVIDE Seen_Operator Term .)
    GREATHAN        reduce using rule 35 (Term1 -> DIVIDE Seen_Operator Term .)
    DIFFERENT       reduce using rule 35 (Term1 -> DIVIDE Seen_Operator Term .)
    TWOEQUAL        reduce using rule 35 (Term1 -> DIVIDE Seen_Operator Term .)
    GREATEQUAL      reduce using rule 35 (Term1 -> DIVIDE Seen_Operator Term .)
    LESSEQUAL       reduce using rule 35 (Term1 -> DIVIDE Seen_Operator Term .)
    error           reduce using rule 35 (Term1 -> DIVIDE Seen_Operator Term .)
    AND             reduce using rule 35 (Term1 -> DIVIDE Seen_Operator Term .)
    OR              reduce using rule 35 (Term1 -> DIVIDE Seen_Operator Term .)
    COMMA           reduce using rule 35 (Term1 -> DIVIDE Seen_Operator Term .)
    RPAREN          reduce using rule 35 (Term1 -> DIVIDE Seen_Operator Term .)
    SEMI            reduce using rule 35 (Term1 -> DIVIDE Seen_Operator Term .)


state 271

    (129) Term1 -> TIMES error Term .

    MINUS           reduce using rule 129 (Term1 -> TIMES error Term .)
    PLUS            reduce using rule 129 (Term1 -> TIMES error Term .)
    LESSTHAN        reduce using rule 129 (Term1 -> TIMES error Term .)
    GREATHAN        reduce using rule 129 (Term1 -> TIMES error Term .)
    DIFFERENT       reduce using rule 129 (Term1 -> TIMES error Term .)
    TWOEQUAL        reduce using rule 129 (Term1 -> TIMES error Term .)
    GREATEQUAL      reduce using rule 129 (Term1 -> TIMES error Term .)
    LESSEQUAL       reduce using rule 129 (Term1 -> TIMES error Term .)
    error           reduce using rule 129 (Term1 -> TIMES error Term .)
    AND             reduce using rule 129 (Term1 -> TIMES error Term .)
    OR              reduce using rule 129 (Term1 -> TIMES error Term .)
    COMMA           reduce using rule 129 (Term1 -> TIMES error Term .)
    RPAREN          reduce using rule 129 (Term1 -> TIMES error Term .)
    SEMI            reduce using rule 129 (Term1 -> TIMES error Term .)


state 272

    (36) Term1 -> TIMES Seen_Operator Term .

    MINUS           reduce using rule 36 (Term1 -> TIMES Seen_Operator Term .)
    PLUS            reduce using rule 36 (Term1 -> TIMES Seen_Operator Term .)
    LESSTHAN        reduce using rule 36 (Term1 -> TIMES Seen_Operator Term .)
    GREATHAN        reduce using rule 36 (Term1 -> TIMES Seen_Operator Term .)
    DIFFERENT       reduce using rule 36 (Term1 -> TIMES Seen_Operator Term .)
    TWOEQUAL        reduce using rule 36 (Term1 -> TIMES Seen_Operator Term .)
    GREATEQUAL      reduce using rule 36 (Term1 -> TIMES Seen_Operator Term .)
    LESSEQUAL       reduce using rule 36 (Term1 -> TIMES Seen_Operator Term .)
    error           reduce using rule 36 (Term1 -> TIMES Seen_Operator Term .)
    AND             reduce using rule 36 (Term1 -> TIMES Seen_Operator Term .)
    OR              reduce using rule 36 (Term1 -> TIMES Seen_Operator Term .)
    COMMA           reduce using rule 36 (Term1 -> TIMES Seen_Operator Term .)
    RPAREN          reduce using rule 36 (Term1 -> TIMES Seen_Operator Term .)
    SEMI            reduce using rule 36 (Term1 -> TIMES Seen_Operator Term .)


state 273

    (32) Expr1 -> PLUS Seen_Operator Expr .

    LESSTHAN        reduce using rule 32 (Expr1 -> PLUS Seen_Operator Expr .)
    GREATHAN        reduce using rule 32 (Expr1 -> PLUS Seen_Operator Expr .)
    DIFFERENT       reduce using rule 32 (Expr1 -> PLUS Seen_Operator Expr .)
    TWOEQUAL        reduce using rule 32 (Expr1 -> PLUS Seen_Operator Expr .)
    GREATEQUAL      reduce using rule 32 (Expr1 -> PLUS Seen_Operator Expr .)
    LESSEQUAL       reduce using rule 32 (Expr1 -> PLUS Seen_Operator Expr .)
    error           reduce using rule 32 (Expr1 -> PLUS Seen_Operator Expr .)
    AND             reduce using rule 32 (Expr1 -> PLUS Seen_Operator Expr .)
    OR              reduce using rule 32 (Expr1 -> PLUS Seen_Operator Expr .)
    COMMA           reduce using rule 32 (Expr1 -> PLUS Seen_Operator Expr .)
    RPAREN          reduce using rule 32 (Expr1 -> PLUS Seen_Operator Expr .)
    SEMI            reduce using rule 32 (Expr1 -> PLUS Seen_Operator Expr .)


state 274

    (31) Expr1 -> MINUS Seen_Operator Expr .

    LESSTHAN        reduce using rule 31 (Expr1 -> MINUS Seen_Operator Expr .)
    GREATHAN        reduce using rule 31 (Expr1 -> MINUS Seen_Operator Expr .)
    DIFFERENT       reduce using rule 31 (Expr1 -> MINUS Seen_Operator Expr .)
    TWOEQUAL        reduce using rule 31 (Expr1 -> MINUS Seen_Operator Expr .)
    GREATEQUAL      reduce using rule 31 (Expr1 -> MINUS Seen_Operator Expr .)
    LESSEQUAL       reduce using rule 31 (Expr1 -> MINUS Seen_Operator Expr .)
    error           reduce using rule 31 (Expr1 -> MINUS Seen_Operator Expr .)
    AND             reduce using rule 31 (Expr1 -> MINUS Seen_Operator Expr .)
    OR              reduce using rule 31 (Expr1 -> MINUS Seen_Operator Expr .)
    COMMA           reduce using rule 31 (Expr1 -> MINUS Seen_Operator Expr .)
    RPAREN          reduce using rule 31 (Expr1 -> MINUS Seen_Operator Expr .)
    SEMI            reduce using rule 31 (Expr1 -> MINUS Seen_Operator Expr .)


state 275

    (38) Factor -> LPAREN Push_Expr SuperExpr RPAREN Pop_Expr .

    DIVIDE          reduce using rule 38 (Factor -> LPAREN Push_Expr SuperExpr RPAREN Pop_Expr .)
    TIMES           reduce using rule 38 (Factor -> LPAREN Push_Expr SuperExpr RPAREN Pop_Expr .)
    MINUS           reduce using rule 38 (Factor -> LPAREN Push_Expr SuperExpr RPAREN Pop_Expr .)
    PLUS            reduce using rule 38 (Factor -> LPAREN Push_Expr SuperExpr RPAREN Pop_Expr .)
    LESSTHAN        reduce using rule 38 (Factor -> LPAREN Push_Expr SuperExpr RPAREN Pop_Expr .)
    GREATHAN        reduce using rule 38 (Factor -> LPAREN Push_Expr SuperExpr RPAREN Pop_Expr .)
    DIFFERENT       reduce using rule 38 (Factor -> LPAREN Push_Expr SuperExpr RPAREN Pop_Expr .)
    TWOEQUAL        reduce using rule 38 (Factor -> LPAREN Push_Expr SuperExpr RPAREN Pop_Expr .)
    GREATEQUAL      reduce using rule 38 (Factor -> LPAREN Push_Expr SuperExpr RPAREN Pop_Expr .)
    LESSEQUAL       reduce using rule 38 (Factor -> LPAREN Push_Expr SuperExpr RPAREN Pop_Expr .)
    error           reduce using rule 38 (Factor -> LPAREN Push_Expr SuperExpr RPAREN Pop_Expr .)
    AND             reduce using rule 38 (Factor -> LPAREN Push_Expr SuperExpr RPAREN Pop_Expr .)
    OR              reduce using rule 38 (Factor -> LPAREN Push_Expr SuperExpr RPAREN Pop_Expr .)
    COMMA           reduce using rule 38 (Factor -> LPAREN Push_Expr SuperExpr RPAREN Pop_Expr .)
    RPAREN          reduce using rule 38 (Factor -> LPAREN Push_Expr SuperExpr RPAREN Pop_Expr .)
    SEMI            reduce using rule 38 (Factor -> LPAREN Push_Expr SuperExpr RPAREN Pop_Expr .)


state 276

    (19) SuperExpr1 -> AND Seen_Operator SuperExpr .

    COMMA           reduce using rule 19 (SuperExpr1 -> AND Seen_Operator SuperExpr .)
    RPAREN          reduce using rule 19 (SuperExpr1 -> AND Seen_Operator SuperExpr .)
    SEMI            reduce using rule 19 (SuperExpr1 -> AND Seen_Operator SuperExpr .)


state 277

    (20) SuperExpr1 -> OR Seen_Operator SuperExpr .

    COMMA           reduce using rule 20 (SuperExpr1 -> OR Seen_Operator SuperExpr .)
    RPAREN          reduce using rule 20 (SuperExpr1 -> OR Seen_Operator SuperExpr .)
    SEMI            reduce using rule 20 (SuperExpr1 -> OR Seen_Operator SuperExpr .)


state 278

    (12) Block -> LBRACE Instruction RBRACE .

    ELSE            reduce using rule 12 (Block -> LBRACE Instruction RBRACE .)
    SEMI            reduce using rule 12 (Block -> LBRACE Instruction RBRACE .)


state 279

    (123) Block -> LBRACE error RBRACE .

    ELSE            reduce using rule 123 (Block -> LBRACE error RBRACE .)
    SEMI            reduce using rule 123 (Block -> LBRACE error RBRACE .)


state 280

    (16) Else -> ELSE Block .

    SEMI            reduce using rule 16 (Else -> ELSE Block .)


state 281

    (63) Color -> COLOR LPAREN SuperExpr COMMA SuperExpr COMMA SuperExpr . RPAREN

    RPAREN          shift and go to state 282


state 282

    (63) Color -> COLOR LPAREN SuperExpr COMMA SuperExpr COMMA SuperExpr RPAREN .

    SEMI            reduce using rule 63 (Color -> COLOR LPAREN SuperExpr COMMA SuperExpr COMMA SuperExpr RPAREN .)
    COMMA           reduce using rule 63 (Color -> COLOR LPAREN SuperExpr COMMA SuperExpr COMMA SuperExpr RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for INT in state 0 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 0 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 0 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 0 resolved as shift
WARNING: shift/reduce conflict for INT in state 8 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 8 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 8 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 8 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 10 resolved as shift
WARNING: shift/reduce conflict for INT in state 35 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 35 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 35 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 35 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 46 resolved as shift
